{
  "version": 3,
  "sources": ["../node_modules/kaboom/src/math.ts", "../node_modules/kaboom/src/utils.ts", "../node_modules/kaboom/src/gamepad.json", "../node_modules/kaboom/src/app.ts", "../node_modules/kaboom/src/easings.ts", "../node_modules/kaboom/src/timer.ts", "../node_modules/kaboom/src/kaboom.ts", "../code/main.ts"],
  "sourcesContent": ["import {\n\tPoint,\n\tRNGValue,\n\tLerpValue,\n\tVec2Args,\n} from \"./types\"\n\nexport function deg2rad(deg: number): number {\n\treturn deg * Math.PI / 180\n}\n\nexport function rad2deg(rad: number): number {\n\treturn rad * 180 / Math.PI\n}\n\nexport function clamp(\n\tval: number,\n\tmin: number,\n\tmax: number,\n): number {\n\tif (min > max) {\n\t\treturn clamp(val, max, min)\n\t}\n\treturn Math.min(Math.max(val, min), max)\n}\n\nexport function lerp<V extends LerpValue>(\n\ta: V,\n\tb: V,\n\tt: number,\n): V {\n\tif (typeof a === \"number\" && typeof b === \"number\") {\n\t\treturn a + (b - a) * t as V\n\t} else if (a instanceof Vec2 && b instanceof Vec2) {\n\t\treturn a.lerp(b, t) as V\n\t} else if (a instanceof Color && b instanceof Color) {\n\t\treturn a.lerp(b, t) as V\n\t}\n\tthrow new Error(`Bad value for lerp(): ${a}, ${b}. Only number, Vec2 and Color is supported.`)\n}\n\nexport function map(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn l2 + (v - l1) / (h1 - l1) * (h2 - l2)\n}\n\nexport function mapc(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn clamp(map(v, l1, h1, l2, h2), l2, h2)\n}\n\nexport class Vec2 {\n\tx: number = 0\n\ty: number = 0\n\tconstructor(x: number = 0, y: number = x) {\n\t\tthis.x = x\n\t\tthis.y = y\n\t}\n\tstatic fromAngle(deg: number) {\n\t\tconst angle = deg2rad(deg)\n\t\treturn new Vec2(Math.cos(angle), Math.sin(angle))\n\t}\n\tstatic LEFT = new Vec2(-1, 0)\n\tstatic RIGHT = new Vec2(1, 0)\n\tstatic UP = new Vec2(0, -1)\n\tstatic DOWN = new Vec2(0, 1)\n\tclone(): Vec2 {\n\t\treturn new Vec2(this.x, this.y)\n\t}\n\tadd(...args: Vec2Args): Vec2 {\n\t\tconst p2 = vec2(...args)\n\t\treturn new Vec2(this.x + p2.x, this.y + p2.y)\n\t}\n\tsub(...args: Vec2Args): Vec2 {\n\t\tconst p2 = vec2(...args)\n\t\treturn new Vec2(this.x - p2.x, this.y - p2.y)\n\t}\n\tscale(...args: Vec2Args): Vec2 {\n\t\tconst s = vec2(...args)\n\t\treturn new Vec2(this.x * s.x, this.y * s.y)\n\t}\n\tdist(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn this.sub(p2).len()\n\t}\n\tsdist(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn this.sub(p2).slen()\n\t}\n\tlen(): number {\n\t\treturn Math.sqrt(this.dot(this))\n\t}\n\tslen(): number {\n\t\treturn this.dot(this)\n\t}\n\tunit(): Vec2 {\n\t\tconst len = this.len()\n\t\treturn len === 0 ? new Vec2(0) : this.scale(1 / len)\n\t}\n\tnormal(): Vec2 {\n\t\treturn new Vec2(this.y, -this.x)\n\t}\n\treflect(normal: Vec2) {\n\t\treturn this.sub(normal.scale(2 * this.dot(normal)))\n\t}\n\tproject(on: Vec2) {\n\t\treturn on.scale(on.dot(this) / on.len())\n\t}\n\treject(on: Vec2) {\n\t\treturn this.sub(this.project(on))\n\t}\n\tdot(p2: Vec2): number {\n\t\treturn this.x * p2.x + this.y * p2.y\n\t}\n\tcross(p2: Vec2): number {\n\t\treturn this.x * p2.y - this.y * p2.x\n\t}\n\tangle(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn rad2deg(Math.atan2(this.y - p2.y, this.x - p2.x))\n\t}\n\tangleBetween(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn rad2deg(Math.atan2(this.cross(p2), this.dot(p2)))\n\t}\n\tlerp(dest: Vec2, t: number): Vec2 {\n\t\treturn new Vec2(lerp(this.x, dest.x, t), lerp(this.y, dest.y, t))\n\t}\n\tslerp(dest: Vec2, t: number): Vec2 {\n\t\tconst cos = this.dot(dest)\n\t\tconst sin = this.cross(dest)\n\t\tconst angle = Math.atan2(sin, cos)\n\t\treturn this\n\t\t\t.scale(Math.sin((1 - t) * angle))\n\t\t\t.add(dest.scale(Math.sin(t * angle)))\n\t\t\t.scale(1 / sin)\n\t}\n\tisZero(): boolean {\n\t\treturn this.x === 0 && this.y === 0\n\t}\n\ttoFixed(n: number): Vec2 {\n\t\treturn new Vec2(Number(this.x.toFixed(n)), Number(this.y.toFixed(n)))\n\t}\n\ttransform(m: Mat4): Vec2 {\n\t\treturn m.multVec2(this)\n\t}\n\teq(other: Vec2): boolean {\n\t\treturn this.x === other.x && this.y === other.y\n\t}\n\tbbox(): Rect {\n\t\treturn new Rect(this, 0, 0)\n\t}\n\ttoString(): string {\n\t\treturn `vec2(${this.x.toFixed(2)}, ${this.y.toFixed(2)})`\n\t}\n}\n\nexport function vec2(...args: Vec2Args): Vec2 {\n\tif (args.length === 1) {\n\t\tif (args[0] instanceof Vec2) {\n\t\t\treturn new Vec2(args[0].x, args[0].y)\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 2) {\n\t\t\treturn new Vec2(...args[0])\n\t\t}\n\t}\n\t// @ts-ignore\n\treturn new Vec2(...args)\n}\n\nexport class Color {\n\n\tr: number = 255\n\tg: number = 255\n\tb: number = 255\n\n\tconstructor(r: number, g: number, b: number) {\n\t\tthis.r = clamp(r, 0, 255)\n\t\tthis.g = clamp(g, 0, 255)\n\t\tthis.b = clamp(b, 0, 255)\n\t}\n\n\tstatic fromArray(arr: number[]) {\n\t\treturn new Color(arr[0], arr[1], arr[2])\n\t}\n\n\tstatic fromHex(hex: string | number) {\n\t\tif (typeof hex === \"number\") {\n\t\t\treturn new Color(\n\t\t\t\t(hex >> 16) & 0xff,\n\t\t\t\t(hex >> 8) & 0xff,\n\t\t\t\t(hex >> 0) & 0xff,\n\t\t\t)\n\t\t} else if (typeof hex === \"string\") {\n\t\t\tconst result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n\t\t\treturn new Color(\n\t\t\t\tparseInt(result[1], 16),\n\t\t\t\tparseInt(result[2], 16),\n\t\t\t\tparseInt(result[3], 16),\n\t\t\t)\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid hex color format\")\n\t\t}\n\t}\n\n\t// TODO: use range of [0, 360] [0, 100] [0, 100]?\n\tstatic fromHSL(h: number, s: number, l: number) {\n\n\t\tif (s == 0){\n\t\t\treturn new Color(255 * l, 255 * l, 255 * l)\n\t\t}\n\n\t\tconst hue2rgb = (p, q, t) => {\n\t\t\tif (t < 0) t += 1\n\t\t\tif (t > 1) t -= 1\n\t\t\tif (t < 1 / 6) return p + (q - p) * 6 * t\n\t\t\tif (t < 1 / 2) return q\n\t\t\tif (t < 2 / 3) return p + (q - p) * (2/3 - t) * 6\n\t\t\treturn p\n\t\t}\n\n\t\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s\n\t\tconst p = 2 * l - q\n\t\tconst r = hue2rgb(p, q, h + 1 / 3)\n\t\tconst g = hue2rgb(p, q, h)\n\t\tconst b = hue2rgb(p, q, h - 1 / 3)\n\n\t\treturn new Color(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255))\n\n\t}\n\n\tstatic RED = new Color(255, 0, 0)\n\tstatic GREEN = new Color(0, 255, 0)\n\tstatic BLUE = new Color(0, 0, 255)\n\tstatic YELLOW = new Color(255, 255, 0)\n\tstatic MAGENTA = new Color(255, 0, 255)\n\tstatic CYAN = new Color(0, 255, 255)\n\tstatic WHITE = new Color(255, 255, 255)\n\tstatic BLACK = new Color(0, 0, 0)\n\n\tclone(): Color {\n\t\treturn new Color(this.r, this.g, this.b)\n\t}\n\n\tlighten(a: number): Color {\n\t\treturn new Color(this.r + a, this.g + a, this.b + a)\n\t}\n\n\tdarken(a: number): Color {\n\t\treturn this.lighten(-a)\n\t}\n\n\tinvert(): Color {\n\t\treturn new Color(255 - this.r, 255 - this.g, 255 - this.b)\n\t}\n\n\tmult(other: Color): Color {\n\t\treturn new Color(\n\t\t\tthis.r * other.r / 255,\n\t\t\tthis.g * other.g / 255,\n\t\t\tthis.b * other.b / 255,\n\t\t)\n\t}\n\n\tlerp(dest: Color, t: number): Color {\n\t\treturn new Color(\n\t\t\tlerp(this.r, dest.r, t),\n\t\t\tlerp(this.g, dest.g, t),\n\t\t\tlerp(this.b, dest.b, t),\n\t\t)\n\t}\n\n\ttoHSL(): [number, number, number] {\n\t\tconst r = this.r / 255\n\t\tconst g = this.g / 255\n\t\tconst b = this.b / 255\n\t\tconst max = Math.max(r, g, b), min = Math.min(r, g, b)\n\t\tlet h = (max + min) / 2\n\t\tlet s = h\n\t\tconst l = h\n\t\tif (max == min) {\n\t\t\th = s = 0\n\t\t} else {\n\t\t\tconst d = max - min\n\t\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min)\n\t\t\tswitch (max) {\n\t\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break\n\t\t\t\tcase g: h = (b - r) / d + 2; break\n\t\t\t\tcase b: h = (r - g) / d + 4; break\n\t\t\t}\n\t\t\th /= 6\n\t\t}\n\t\treturn [ h, s, l ]\n\t}\n\n\teq(other: Color): boolean {\n\t\treturn this.r === other.r\n\t\t\t&& this.g === other.g\n\t\t\t&& this.b === other.b\n\n\t}\n\n\ttoString(): string {\n\t\treturn `rgb(${this.r}, ${this.g}, ${this.b})`\n\t}\n\n\ttoHex(): string {\n\t\treturn \"#\" + ((1 << 24) + (this.r << 16) + (this.g << 8) + this.b).toString(16).slice(1)\n\t}\n\n}\n\nexport function rgb(...args): Color {\n\tif (args.length === 0) {\n\t\treturn new Color(255, 255, 255)\n\t} else if (args.length === 1) {\n\t\tif (args[0] instanceof Color) {\n\t\t\treturn args[0].clone()\n\t\t} else if (typeof args[0] === \"string\") {\n\t\t\treturn Color.fromHex(args[0])\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 3) {\n\t\t\treturn Color.fromArray(args[0])\n\t\t}\n\t}\n\t// @ts-ignore\n\treturn new Color(...args)\n}\n\nexport const hsl2rgb = (h, s, l) => Color.fromHSL(h, s, l)\n\nexport class Quad {\n\tx: number = 0\n\ty: number = 0\n\tw: number = 1\n\th: number = 1\n\tconstructor(x: number, y: number, w: number, h: number) {\n\t\tthis.x = x\n\t\tthis.y = y\n\t\tthis.w = w\n\t\tthis.h = h\n\t}\n\tscale(other: Quad): Quad {\n\t\treturn new Quad(\n\t\t\tthis.x + this.w * other.x,\n\t\t\tthis.y + this.h * other.y,\n\t\t\tthis.w * other.w,\n\t\t\tthis.h * other.h,\n\t\t)\n\t}\n\tpos() {\n\t\treturn new Vec2(this.x, this.y)\n\t}\n\tclone(): Quad {\n\t\treturn new Quad(this.x, this.y, this.w, this.h)\n\t}\n\teq(other: Quad): boolean {\n\t\treturn this.x === other.x\n\t\t\t&& this.y === other.y\n\t\t\t&& this.w === other.w\n\t\t\t&& this.h === other.h\n\t}\n\ttoString(): string {\n\t\treturn `quad(${this.x}, ${this.y}, ${this.w}, ${this.h})`\n\t}\n}\n\nexport function quad(x: number, y: number, w: number, h: number): Quad {\n\treturn new Quad(x, y, w, h)\n}\n\nexport class Mat4 {\n\n\tm: number[] = [\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1,\n\t]\n\n\tconstructor(m?: number[]) {\n\t\tif (m) {\n\t\t\tthis.m = m\n\t\t}\n\t}\n\n\tstatic translate(p: Vec2): Mat4 {\n\t\treturn new Mat4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\tp.x, p.y, 0, 1,\n\t\t])\n\t}\n\n\tstatic scale(s: Vec2): Mat4 {\n\t\treturn new Mat4([\n\t\t\ts.x, 0, 0, 0,\n\t\t\t0, s.y, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\tstatic rotateX(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\treturn new Mat4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, -s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\tstatic rotateY(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\treturn new Mat4([\n\t\t\tc, 0, s, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t-s, 0, c, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\tstatic rotateZ(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\treturn new Mat4([\n\t\t\tc, -s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\ttranslate(p: Vec2) {\n\t\tthis.m[12] += this.m[0] * p.x + this.m[4] * p.y\n\t\tthis.m[13] += this.m[1] * p.x + this.m[5] * p.y\n\t\tthis.m[14] += this.m[2] * p.x + this.m[6] * p.y\n\t\tthis.m[15] += this.m[3] * p.x + this.m[7] * p.y\n\t\treturn this\n\t}\n\n\tscale(p: Vec2) {\n\t\tthis.m[0] *= p.x\n\t\tthis.m[4] *= p.y\n\t\tthis.m[1] *= p.x\n\t\tthis.m[5] *= p.y\n\t\tthis.m[2] *= p.x\n\t\tthis.m[6] *= p.y\n\t\tthis.m[3] *= p.x\n\t\tthis.m[7] *= p.y\n\t\treturn this\n\t}\n\n\trotate(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\tconst m0 = this.m[0]\n\t\tconst m1 = this.m[1]\n\t\tconst m4 = this.m[4]\n\t\tconst m5 = this.m[5]\n\t\tthis.m[0] = m0 * c + m1 * s\n\t\tthis.m[1] = -m0 * s + m1 * c\n\t\tthis.m[4] = m4 * c + m5 * s\n\t\tthis.m[5] = -m4 * s + m5 * c\n\t\treturn this\n\t}\n\n\t// TODO: in-place variant\n\tmult(other: Mat4): Mat4 {\n\t\tconst out = []\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tout[i * 4 + j] =\n\t\t\t\t\tthis.m[0 * 4 + j] * other.m[i * 4 + 0] +\n\t\t\t\t\tthis.m[1 * 4 + j] * other.m[i * 4 + 1] +\n\t\t\t\t\tthis.m[2 * 4 + j] * other.m[i * 4 + 2] +\n\t\t\t\t\tthis.m[3 * 4 + j] * other.m[i * 4 + 3]\n\t\t\t}\n\t\t}\n\t\treturn new Mat4(out)\n\t}\n\n\tmultVec2(p: Vec2): Vec2 {\n\t\treturn new Vec2(\n\t\t\tp.x * this.m[0] + p.y * this.m[4] + this.m[12],\n\t\t\tp.x * this.m[1] + p.y * this.m[5] + this.m[13],\n\t\t)\n\t}\n\n\tgetTranslation() {\n\t\treturn new Vec2(this.m[12], this.m[13])\n\t}\n\n\tgetScale() {\n\t\tif (this.m[0] != 0 || this.m[1] != 0) {\n\t\t\tconst det = this.m[0] * this.m[5] - this.m[1] * this.m[4]\n\t\t\tconst r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1])\n\t\t\treturn new Vec2(r, det / r)\n\t\t} else if (this.m[4] != 0 || this.m[5] != 0) {\n\t\t\tconst det = this.m[0] * this.m[5] - this.m[1] * this.m[4]\n\t\t\tconst s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5])\n\t\t\treturn new Vec2(det / s, s)\n\t\t} else {\n\t\t\treturn new Vec2(0, 0)\n\t\t}\n\t}\n\n\tgetRotation() {\n\t\tif (this.m[0] != 0 || this.m[1] != 0) {\n\t\t\tconst r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1])\n\t\t\treturn rad2deg(this.m[1] > 0 ? Math.acos(this.m[0] / r) : -Math.acos(this.m[0] / r))\n\t\t} else if (this.m[4] != 0 || this.m[5] != 0) {\n\t\t\tconst s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5])\n\t\t\treturn rad2deg(Math.PI / 2 - (this.m[5] > 0 ? Math.acos(-this.m[4] / s) : -Math.acos(this.m[4] / s)))\n\t\t} else {\n\t\t\treturn 0\n\t\t}\n\t}\n\n\tgetSkew() {\n\t\tif (this.m[0] != 0 || this.m[1] != 0) {\n\t\t\tconst r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1])\n\t\t\treturn new Vec2(Math.atan(this.m[0] * this.m[4] + this.m[1] * this.m[5]) / (r * r), 0)\n\t\t}\n\t\telse if (this.m[4] != 0 || this.m[5] != 0) {\n\t\t\tconst s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5])\n\t\t\treturn new Vec2(0, Math.atan(this.m[0] * this.m[4] + this.m[1] * this.m[5]) / (s * s))\n\t\t}\n\t\telse {\n\t\t\treturn new Vec2(0, 0)\n\t\t}\n\t}\n\n\tinvert(): Mat4 {\n\n\t\tconst out = []\n\n\t\tconst f00 = this.m[10] * this.m[15] - this.m[14] * this.m[11]\n\t\tconst f01 = this.m[9] * this.m[15] - this.m[13] * this.m[11]\n\t\tconst f02 = this.m[9] * this.m[14] - this.m[13] * this.m[10]\n\t\tconst f03 = this.m[8] * this.m[15] - this.m[12] * this.m[11]\n\t\tconst f04 = this.m[8] * this.m[14] - this.m[12] * this.m[10]\n\t\tconst f05 = this.m[8] * this.m[13] - this.m[12] * this.m[9]\n\t\tconst f06 = this.m[6] * this.m[15] - this.m[14] * this.m[7]\n\t\tconst f07 = this.m[5] * this.m[15] - this.m[13] * this.m[7]\n\t\tconst f08 = this.m[5] * this.m[14] - this.m[13] * this.m[6]\n\t\tconst f09 = this.m[4] * this.m[15] - this.m[12] * this.m[7]\n\t\tconst f10 = this.m[4] * this.m[14] - this.m[12] * this.m[6]\n\t\tconst f11 = this.m[5] * this.m[15] - this.m[13] * this.m[7]\n\t\tconst f12 = this.m[4] * this.m[13] - this.m[12] * this.m[5]\n\t\tconst f13 = this.m[6] * this.m[11] - this.m[10] * this.m[7]\n\t\tconst f14 = this.m[5] * this.m[11] - this.m[9] * this.m[7]\n\t\tconst f15 = this.m[5] * this.m[10] - this.m[9] * this.m[6]\n\t\tconst f16 = this.m[4] * this.m[11] - this.m[8] * this.m[7]\n\t\tconst f17 = this.m[4] * this.m[10] - this.m[8] * this.m[6]\n\t\tconst f18 = this.m[4] * this.m[9] - this.m[8] * this.m[5]\n\n\t\tout[0] = this.m[5] * f00 - this.m[6] * f01 + this.m[7] * f02\n\t\tout[4] = -(this.m[4] * f00 - this.m[6] * f03 + this.m[7] * f04)\n\t\tout[8] = this.m[4] * f01 - this.m[5] * f03 + this.m[7] * f05\n\t\tout[12] = -(this.m[4] * f02 - this.m[5] * f04 + this.m[6] * f05)\n\n\t\tout[1] = -(this.m[1] * f00 - this.m[2] * f01 + this.m[3] * f02)\n\t\tout[5] = this.m[0] * f00 - this.m[2] * f03 + this.m[3] * f04\n\t\tout[9] = -(this.m[0] * f01 - this.m[1] * f03 + this.m[3] * f05)\n\t\tout[13] = this.m[0] * f02 - this.m[1] * f04 + this.m[2] * f05\n\n\t\tout[2] = this.m[1] * f06 - this.m[2] * f07 + this.m[3] * f08\n\t\tout[6] = -(this.m[0] * f06 - this.m[2] * f09 + this.m[3] * f10)\n\t\tout[10] = this.m[0] * f11 - this.m[1] * f09 + this.m[3] * f12\n\t\tout[14] = -(this.m[0] * f08 - this.m[1] * f10 + this.m[2] * f12)\n\n\t\tout[3] = -(this.m[1] * f13 - this.m[2] * f14 + this.m[3] * f15)\n\t\tout[7] = this.m[0] * f13 - this.m[2] * f16 + this.m[3] * f17\n\t\tout[11] = -(this.m[0] * f14 - this.m[1] * f16 + this.m[3] * f18)\n\t\tout[15] = this.m[0] * f15 - this.m[1] * f17 + this.m[2] * f18\n\n\t\tconst det =\n\t\t\tthis.m[0] * out[0] +\n\t\t\tthis.m[1] * out[4] +\n\t\t\tthis.m[2] * out[8] +\n\t\t\tthis.m[3] * out[12]\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tout[i * 4 + j] *= (1.0 / det)\n\t\t\t}\n\t\t}\n\n\t\treturn new Mat4(out)\n\n\t}\n\n\tclone(): Mat4 {\n\t\treturn new Mat4([...this.m])\n\t}\n\n\ttoString(): string {\n\t\treturn this.m.toString()\n\t}\n\n}\n\nexport function wave(lo: number, hi: number, t: number, f = (t) => -Math.cos(t)): number {\n\treturn lo + (f(t) + 1) / 2 * (hi - lo)\n}\n\n// basic ANSI C LCG\nconst A = 1103515245\nconst C = 12345\nconst M = 2147483648\n\nexport class RNG {\n\tseed: number\n\tconstructor(seed: number) {\n\t\tthis.seed = seed\n\t}\n\tgen(): number {\n\t\tthis.seed = (A * this.seed + C) % M\n\t\treturn this.seed / M\n\t}\n\tgenNumber(a: number, b: number): number {\n\t\treturn a + this.gen() * (b - a)\n\t}\n\tgenVec2(a: Vec2, b?: Vec2): Vec2 {\n\t\treturn new Vec2(\n\t\t\tthis.genNumber(a.x, b.x),\n\t\t\tthis.genNumber(a.y, b.y),\n\t\t)\n\t}\n\tgenColor(a: Color, b: Color): Color {\n\t\treturn new Color(\n\t\t\tthis.genNumber(a.r, b.r),\n\t\t\tthis.genNumber(a.g, b.g),\n\t\t\tthis.genNumber(a.b, b.b),\n\t\t)\n\t}\n\tgenAny<T = RNGValue>(...args: T[]): T {\n\t\tif (args.length === 0) {\n\t\t\treturn this.gen() as T\n\t\t} else if (args.length === 1) {\n\t\t\tif (typeof args[0] === \"number\") {\n\t\t\t\treturn this.genNumber(0, args[0]) as T\n\t\t\t} else if (args[0] instanceof Vec2) {\n\t\t\t\treturn this.genVec2(vec2(0, 0), args[0]) as T\n\t\t\t} else if (args[0] instanceof Color) {\n\t\t\t\treturn this.genColor(rgb(0, 0, 0), args[0]) as T\n\t\t\t}\n\t\t} else if (args.length === 2) {\n\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\treturn this.genNumber(args[0], args[1]) as T\n\t\t\t} else if (args[0] instanceof Vec2 && args[1] instanceof Vec2) {\n\t\t\t\treturn this.genVec2(args[0], args[1]) as T\n\t\t\t} else if (args[0] instanceof Color && args[1] instanceof Color) {\n\t\t\t\treturn this.genColor(args[0], args[1]) as T\n\t\t\t}\n\t\t}\n\t}\n}\n\n// TODO: let user pass seed\nconst defRNG = new RNG(Date.now())\n\nexport function randSeed(seed?: number): number {\n\tif (seed != null) {\n\t\tdefRNG.seed = seed\n\t}\n\treturn defRNG.seed\n}\n\nexport function rand(...args) {\n\t// @ts-ignore\n\treturn defRNG.genAny(...args)\n}\n\n// TODO: randi() to return 0 / 1?\nexport function randi(...args: number[]) {\n\treturn Math.floor(rand(...args))\n}\n\nexport function chance(p: number): boolean {\n\treturn rand() <= p\n}\n\nexport function choose<T>(list: T[]): T {\n\treturn list[randi(list.length)]\n}\n\n// TODO: better name\nexport function testRectRect2(r1: Rect, r2: Rect): boolean {\n\treturn r1.pos.x + r1.width >= r2.pos.x\n\t\t&& r1.pos.x <= r2.pos.x + r2.width\n\t\t&& r1.pos.y + r1.height >= r2.pos.y\n\t\t&& r1.pos.y <= r2.pos.y + r2.height\n}\n\nexport function testRectRect(r1: Rect, r2: Rect): boolean {\n\treturn r1.pos.x + r1.width > r2.pos.x\n\t\t&& r1.pos.x < r2.pos.x + r2.width\n\t\t&& r1.pos.y + r1.height > r2.pos.y\n\t\t&& r1.pos.y < r2.pos.y + r2.height\n}\n\n// TODO: better name\nexport function testLineLineT(l1: Line, l2: Line): number | null {\n\n\tif ((l1.p1.x === l1.p2.x && l1.p1.y === l1.p2.y) || (l2.p1.x === l2.p2.x && l2.p1.y === l2.p2.y)) {\n\t\treturn null\n\t}\n\n\tconst denom = ((l2.p2.y - l2.p1.y) * (l1.p2.x - l1.p1.x) - (l2.p2.x - l2.p1.x) * (l1.p2.y - l1.p1.y))\n\n\t// parallel\n\tif (denom === 0) {\n\t\treturn null\n\t}\n\n\tconst ua = ((l2.p2.x - l2.p1.x) * (l1.p1.y - l2.p1.y) - (l2.p2.y - l2.p1.y) * (l1.p1.x - l2.p1.x)) / denom\n\tconst ub = ((l1.p2.x - l1.p1.x) * (l1.p1.y - l2.p1.y) - (l1.p2.y - l1.p1.y) * (l1.p1.x - l2.p1.x)) / denom\n\n\t// is the intersection on the segments\n\tif (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n\t\treturn null\n\t}\n\n\treturn ua\n\n}\n\nexport function testLineLine(l1: Line, l2: Line): Vec2 | null {\n\tconst t = testLineLineT(l1, l2)\n\tif (!t) return null\n\treturn vec2(\n\t\tl1.p1.x + t * (l1.p2.x - l1.p1.x),\n\t\tl1.p1.y + t * (l1.p2.y - l1.p1.y),\n\t)\n}\n\nexport function testRectLine(r: Rect, l: Line): boolean {\n\tif (testRectPoint(r, l.p1) || testRectPoint(r, l.p2)) {\n\t\treturn true\n\t}\n\tconst pts = r.points()\n\treturn !!testLineLine(l, new Line(pts[0], pts[1]))\n\t\t|| !!testLineLine(l, new Line(pts[1], pts[2]))\n\t\t|| !!testLineLine(l, new Line(pts[2], pts[3]))\n\t\t|| !!testLineLine(l, new Line(pts[3], pts[0]))\n}\n\nexport function testRectPoint2(r: Rect, pt: Point): boolean {\n\treturn pt.x >= r.pos.x\n\t\t&& pt.x <= r.pos.x + r.width\n\t\t&& pt.y >= r.pos.y\n\t\t&& pt.y <= r.pos.y + r.height\n}\n\nexport function testRectPoint(r: Rect, pt: Point): boolean {\n\treturn pt.x > r.pos.x\n\t\t&& pt.x < r.pos.x + r.width\n\t\t&& pt.y > r.pos.y\n\t\t&& pt.y < r.pos.y + r.height\n}\n\nexport function testRectCircle(r: Rect, c: Circle): boolean {\n\tconst nx = Math.max(r.pos.x, Math.min(c.center.x, r.pos.x + r.width))\n\tconst ny = Math.max(r.pos.y, Math.min(c.center.y, r.pos.y + r.height))\n\tconst nearestPoint = vec2(nx, ny)\n\treturn nearestPoint.sdist(c.center) <= c.radius * c.radius\n}\n\nexport function testRectPolygon(r: Rect, p: Polygon): boolean {\n\treturn testPolygonPolygon(p, new Polygon(r.points()))\n}\n\nexport function testLinePoint(l: Line, pt: Vec2): boolean {\n\tconst v1 = pt.sub(l.p1)\n\tconst v2 = l.p2.sub(l.p1)\n\n\t// Check if sine is 0, in that case lines are parallel.\n\t// If not parallel, the point cannot lie on the line.\n\tif (Math.abs(v1.cross(v2)) > Number.EPSILON) {\n\t\treturn false\n\t}\n\n\t// Scalar projection of v1 on v2\n\tconst t = v1.dot(v2) / v2.dot(v2)\n\t// Since t is percentual distance of pt from line.p1 on the line,\n\t// it should be between 0% and 100%\n\treturn t >= 0 && t <= 1\n}\n\nexport function testLineCircle(l: Line, circle: Circle): boolean {\n\tconst v = l.p2.sub(l.p1)\n\tconst a = v.dot(v)\n\tconst centerToOrigin = l.p1.sub(circle.center)\n\tconst b = 2 * v.dot(centerToOrigin)\n\tconst c = centerToOrigin.dot(centerToOrigin) - circle.radius * circle.radius\n\t// Calculate the discriminant of ax^2 + bx + c\n\tconst dis = b * b - 4 * a * c\n\n\t// No root\n\tif ((a <= Number.EPSILON) || (dis < 0)) {\n\t\treturn false\n\t}\n\t// One possible root\n\telse if (dis == 0) {\n\t\tconst t = -b / (2 * a)\n\t\tif (t >= 0 && t <= 1) {\n\t\t\treturn true\n\t\t}\n\t}\n\t// Two possible roots\n\telse {\n\t\tconst t1 = (-b + Math.sqrt(dis)) / (2 * a)\n\t\tconst t2 = (-b - Math.sqrt(dis)) / (2 * a)\n\t\tif ((t1 >= 0 && t1 <= 1) || (t2 >= 0 && t2 <= 1)) {\n\t\t\treturn true\n\t\t}\n\t}\n\n\t// Check if line is completely within the circle\n\t// We only need to check one point, since the line didn't cross the circle\n\treturn testCirclePoint(circle, l.p1)\n}\n\nexport function testLinePolygon(l: Line, p: Polygon): boolean {\n\n\t// test if line is inside\n\tif (testPolygonPoint(p, l.p1) || testPolygonPoint(p, l.p2)) {\n\t\treturn true\n\t}\n\n\t// test each line\n\tfor (let i = 0; i < p.pts.length; i++) {\n\t\tconst p1 = p.pts[i]\n\t\tconst p2 = p.pts[(i + 1) % p.pts.length]\n\t\tif (testLineLine(l, new Line(p1, p2))) {\n\t\t\treturn true\n\t\t}\n\t}\n\n\treturn false\n\n}\n\nexport function testCirclePoint(c: Circle, p: Point): boolean {\n\treturn c.center.sdist(p) < c.radius * c.radius\n}\n\nexport function testCircleCircle(c1: Circle, c2: Circle): boolean {\n\treturn c1.center.sdist(c2.center) < (c1.radius + c2.radius) * (c1.radius + c2.radius)\n}\n\nexport function testCirclePolygon(c: Circle, p: Polygon): boolean {\n\t// For each edge check for intersection\n\tlet prev = p.pts[p.pts.length - 1]\n\tfor (const cur of p.pts) {\n\t\tif (testLineCircle(new Line(prev, cur), c)) {\n\t\t\treturn true\n\t\t}\n\t\tprev = cur\n\t}\n\n\t// Check if the polygon is completely within the circle\n\t// We only need to check one point, since the polygon didn't cross the circle\n\tif (testCirclePoint(c, p.pts[0])) {\n\t\treturn true\n\t}\n\n\t// Check if the circle is completely within the polygon\n\treturn testPolygonPoint(p, c.center)\n}\n\nexport function testPolygonPolygon(p1: Polygon, p2: Polygon): boolean {\n\tfor (let i = 0; i < p1.pts.length; i++) {\n\t\tif (testLinePolygon(new Line(p1.pts[i], p1.pts[(i + 1) % p1.pts.length]), p2)) {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\nexport function testPolygonPoint(poly: Polygon, pt: Point): boolean {\n\n\tlet c = false\n\tconst p = poly.pts\n\n\tfor (let i = 0, j = p.length - 1; i < p.length; j = i++) {\n\t\tif (\n\t\t\t((p[i].y > pt.y) != (p[j].y > pt.y))\n\t\t\t&& (pt.x < (p[j].x - p[i].x) * (pt.y - p[i].y) / (p[j].y - p[i].y) + p[i].x)\n\t\t) {\n\t\t\tc = !c\n\t\t}\n\t}\n\n\treturn c\n\n}\n\nexport function testPointPoint(p1: Point, p2: Point): boolean {\n\treturn p1.x === p2.x && p1.y === p2.y\n}\n\nexport class Line {\n\tp1: Vec2\n\tp2: Vec2\n\tconstructor(p1: Vec2, p2: Vec2) {\n\t\tthis.p1 = p1.clone()\n\t\tthis.p2 = p2.clone()\n\t}\n\ttransform(m: Mat4): Line {\n\t\treturn new Line(m.multVec2(this.p1), m.multVec2(this.p2))\n\t}\n\tbbox(): Rect {\n\t\treturn Rect.fromPoints(this.p1, this.p2)\n\t}\n\tarea(): number {\n\t\treturn this.p1.dist(this.p2)\n\t}\n\tclone(): Line {\n\t\treturn new Line(this.p1, this.p2)\n\t}\n}\n\n// TODO: use x: number y: number (x, y, width, height)\nexport class Rect {\n\tpos: Vec2\n\twidth: number\n\theight: number\n\tconstructor(pos: Vec2, width: number, height: number) {\n\t\tthis.pos = pos.clone()\n\t\tthis.width = width\n\t\tthis.height = height\n\t}\n\tstatic fromPoints(p1: Vec2, p2: Vec2): Rect {\n\t\treturn new Rect(p1.clone(), p2.x - p1.x, p2.y - p1.y)\n\t}\n\tcenter(): Vec2 {\n\t\treturn new Vec2(this.pos.x + this.width / 2, this.pos.y + this.height / 2)\n\t}\n\tpoints(): [Vec2, Vec2, Vec2, Vec2] {\n\t\treturn [\n\t\t\tthis.pos,\n\t\t\tthis.pos.add(this.width, 0),\n\t\t\tthis.pos.add(this.width, this.height),\n\t\t\tthis.pos.add(0, this.height),\n\t\t]\n\t}\n\ttransform(m: Mat4): Polygon {\n\t\treturn new Polygon(this.points().map((pt) => m.multVec2(pt)))\n\t}\n\tbbox(): Rect {\n\t\treturn this.clone()\n\t}\n\tarea(): number {\n\t\treturn this.width * this.height\n\t}\n\tclone(): Rect {\n\t\treturn new Rect(this.pos.clone(), this.width, this.height)\n\t}\n\tdistToPoint(p: Vec2): number {\n\t\treturn Math.sqrt(this.sdistToPoint(p))\n\t}\n\tsdistToPoint(p: Vec2): number {\n\t\tconst min = this.pos\n\t\tconst max = this.pos.add(this.width, this.height)\n\t\tconst dx = Math.max(min.x - p.x, 0, p.x - max.x)\n\t\tconst dy = Math.max(min.y - p.y, 0, p.y - max.y)\n\t\treturn dx * dx + dy * dy\n\t}\n}\n\nexport class Circle {\n\tcenter: Vec2\n\tradius: number\n\tconstructor(center: Vec2, radius: number) {\n\t\tthis.center = center.clone()\n\t\tthis.radius = radius\n\t}\n\ttransform(tr: Mat4): Ellipse {\n\t\treturn new Ellipse(this.center, this.radius, this.radius).transform(tr)\n\t}\n\tbbox(): Rect {\n\t\treturn Rect.fromPoints(\n\t\t\tthis.center.sub(vec2(this.radius)),\n\t\t\tthis.center.add(vec2(this.radius)),\n\t\t)\n\t}\n\tarea(): number {\n\t\treturn this.radius * this.radius * Math.PI\n\t}\n\tclone(): Circle {\n\t\treturn new Circle(this.center, this.radius)\n\t}\n}\n\nexport class Ellipse {\n\tcenter: Vec2\n\tradiusX: number\n\tradiusY: number\n\tconstructor(center: Vec2, rx: number, ry: number) {\n\t\tthis.center = center.clone()\n\t\tthis.radiusX = rx\n\t\tthis.radiusY = ry\n\t}\n\ttransform(tr: Mat4): Ellipse {\n\t\treturn new Ellipse(\n\t\t\ttr.multVec2(this.center),\n\t\t\ttr.m[0] * this.radiusX,\n\t\t\ttr.m[5] * this.radiusY,\n\t\t)\n\t}\n\tbbox(): Rect {\n\t\treturn Rect.fromPoints(\n\t\t\tthis.center.sub(vec2(this.radiusX, this.radiusY)),\n\t\t\tthis.center.add(vec2(this.radiusX, this.radiusY)),\n\t\t)\n\t}\n\tarea(): number {\n\t\treturn this.radiusX * this.radiusY * Math.PI\n\t}\n\tclone(): Ellipse {\n\t\treturn new Ellipse(this.center, this.radiusX, this.radiusY)\n\t}\n}\n\nexport class Polygon {\n\tpts: Vec2[]\n\tconstructor(pts: Vec2[]) {\n\t\tif (pts.length < 3) {\n\t\t\tthrow new Error(\"Polygons should have at least 3 vertices\")\n\t\t}\n\t\tthis.pts = pts\n\t}\n\ttransform(m: Mat4): Polygon {\n\t\treturn new Polygon(this.pts.map((pt) => m.multVec2(pt)))\n\t}\n\tbbox(): Rect {\n\t\tconst p1 = vec2(Number.MAX_VALUE)\n\t\tconst p2 = vec2(-Number.MAX_VALUE)\n\t\tfor (const pt of this.pts) {\n\t\t\tp1.x = Math.min(p1.x, pt.x)\n\t\t\tp2.x = Math.max(p2.x, pt.x)\n\t\t\tp1.y = Math.min(p1.y, pt.y)\n\t\t\tp2.y = Math.max(p2.y, pt.y)\n\t\t}\n\t\treturn Rect.fromPoints(p1, p2)\n\t}\n\tarea(): number {\n\t\tlet total = 0\n\t\tconst l = this.pts.length\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tconst p1 = this.pts[i]\n\t\t\tconst p2 = this.pts[(i + 1) % l]\n\t\t\ttotal += (p1.x * p2.y * 0.5)\n\t\t\ttotal -= (p2.x * p1.y * 0.5)\n\t\t}\n\t\treturn Math.abs(total)\n\t}\n\tclone(): Polygon {\n\t\treturn new Polygon(this.pts.map((pt) => pt.clone()))\n\t}\n}\n\nexport function sat(p1: Polygon, p2: Polygon): Vec2 | null {\n\tlet overlap = Number.MAX_VALUE\n\tlet displacement = vec2(0)\n\tfor (const poly of [p1, p2]) {\n\t\tfor (let i = 0; i < poly.pts.length; i++) {\n\t\t\tconst a = poly.pts[i]\n\t\t\tconst b = poly.pts[(i + 1) % poly.pts.length]\n\t\t\tconst axisProj = b.sub(a).normal().unit()\n\t\t\tlet min1 = Number.MAX_VALUE\n\t\t\tlet max1 = -Number.MAX_VALUE\n\t\t\tfor (let j = 0; j < p1.pts.length; j++) {\n\t\t\t\tconst q = p1.pts[j].dot(axisProj)\n\t\t\t\tmin1 = Math.min(min1, q)\n\t\t\t\tmax1 = Math.max(max1, q)\n\t\t\t}\n\t\t\tlet min2 = Number.MAX_VALUE\n\t\t\tlet max2 = -Number.MAX_VALUE\n\t\t\tfor (let j = 0; j < p2.pts.length; j++) {\n\t\t\t\tconst q = p2.pts[j].dot(axisProj)\n\t\t\t\tmin2 = Math.min(min2, q)\n\t\t\t\tmax2 = Math.max(max2, q)\n\t\t\t}\n\t\t\tconst o = Math.min(max1, max2) - Math.max(min1, min2)\n\t\t\tif (o < 0) {\n\t\t\t\treturn null\n\t\t\t}\n\t\t\tif (o < Math.abs(overlap)) {\n\t\t\t\tconst o1 = max2 - min1\n\t\t\t\tconst o2 = min2 - max1\n\t\t\t\toverlap = Math.abs(o1) < Math.abs(o2) ? o1 : o2\n\t\t\t\tdisplacement = axisProj.scale(overlap)\n\t\t\t}\n\t\t}\n\t}\n\treturn displacement\n}\n", "export class IDList<T> extends Map<number, T> {\n\tprivate lastID: number\n\tconstructor(...args) {\n\t\tsuper(...args)\n\t\tthis.lastID = 0\n\t}\n\tpush(v: T): number {\n\t\tconst id = this.lastID\n\t\tthis.set(id, v)\n\t\tthis.lastID++\n\t\treturn id\n\t}\n\tpushd(v: T): () => void {\n\t\tconst id = this.push(v)\n\t\treturn () => this.delete(id)\n\t}\n}\n\nexport class EventController {\n\tpaused: boolean = false\n\treadonly cancel: () => void\n\tconstructor(cancel: () => void) {\n\t\tthis.cancel = cancel\n\t}\n\tstatic join(events: EventController[]): EventController {\n\t\tconst ev = new EventController(() => events.forEach((e) => e.cancel()))\n\t\tObject.defineProperty(ev, \"paused\", {\n\t\t\tget: () => events[0].paused,\n\t\t\tset: (p: boolean) => events.forEach((e) => e.paused = p),\n\t\t})\n\t\tev.paused = false\n\t\treturn ev\n\t}\n}\n\nexport class Event<Args extends any[] = any[]> {\n\tprivate handlers: IDList<(...args: Args) => void> = new IDList()\n\tadd(action: (...args: Args) => void): EventController {\n\t\tconst cancel = this.handlers.pushd((...args: Args) => {\n\t\t\tif (ev.paused) return\n\t\t\taction(...args)\n\t\t})\n\t\tconst ev = new EventController(cancel)\n\t\treturn ev\n\t}\n\taddOnce(action: (...args) => void): EventController {\n\t\tconst ev = this.add((...args) => {\n\t\t\tev.cancel()\n\t\t\taction(...args)\n\t\t})\n\t\treturn ev\n\t}\n\tnext(): Promise<Args> {\n\t\treturn new Promise((res) => this.addOnce(res))\n\t}\n\ttrigger(...args: Args) {\n\t\tthis.handlers.forEach((action) => action(...args))\n\t}\n\tnumListeners(): number {\n\t\treturn this.handlers.size\n\t}\n\tclear() {\n\t\tthis.handlers.clear()\n\t}\n}\n\n// TODO: only accept one argument?\nexport class EventHandler<EventMap extends Record<string, any[]>> {\n\tprivate handlers: Partial<{\n\t\t[Name in keyof EventMap]: Event<EventMap[Name]>\n\t}> = {}\n\ton<Name extends keyof EventMap>(\n\t\tname: Name,\n\t\taction: (...args: EventMap[Name]) => void,\n\t): EventController {\n\t\tif (!this.handlers[name]) {\n\t\t\tthis.handlers[name] = new Event<EventMap[Name]>()\n\t\t}\n\t\treturn this.handlers[name].add(action)\n\t}\n\tonOnce<Name extends keyof EventMap>(\n\t\tname: Name,\n\t\taction: (...args: EventMap[Name]) => void,\n\t): EventController {\n\t\tconst ev = this.on(name, (...args) => {\n\t\t\tev.cancel()\n\t\t\taction(...args)\n\t\t})\n\t\treturn ev\n\t}\n\tnext<Name extends keyof EventMap>(name: Name): Promise<unknown> {\n\t\treturn new Promise((res) => {\n\t\t\t// TODO: can only pass 1 val to resolve()\n\t\t\tthis.onOnce(name, (...args: EventMap[Name]) => res(args[0]))\n\t\t})\n\t}\n\ttrigger<Name extends keyof EventMap>(name: Name, ...args: EventMap[Name]) {\n\t\tif (this.handlers[name]) {\n\t\t\tthis.handlers[name].trigger(...args)\n\t\t}\n\t}\n\tremove<Name extends keyof EventMap>(name: Name) {\n\t\tdelete this.handlers[name]\n\t}\n\tclear() {\n\t\tthis.handlers = {}\n\t}\n\tnumListeners<Name extends keyof EventMap>(name: Name): number {\n\t\treturn this.handlers[name]?.numListeners() ?? 0\n\t}\n}\n\nexport function deepEq(o1: any, o2: any): boolean {\n\tconst t1 = typeof o1\n\tconst t2 = typeof o2\n\tif (t1 !== t2) {\n\t\treturn false\n\t}\n\tif (t1 === \"object\" && t2 === \"object\" && o1 !== null && o2 !== null) {\n\t\tconst k1 = Object.keys(o1)\n\t\tconst k2 = Object.keys(o2)\n\t\tif (k1.length !== k2.length) {\n\t\t\treturn false\n\t\t}\n\t\tfor (const k of k1) {\n\t\t\tconst v1 = o1[k]\n\t\t\tconst v2 = o2[k]\n\t\t\tif (!(typeof v1 === \"function\" && typeof v2 === \"function\")) {\n\t\t\t\tif (!deepEq(v1, v2)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\treturn o1 === o2\n}\n\nexport function base64ToArrayBuffer(base64: string): ArrayBuffer {\n\tconst binstr = window.atob(base64)\n\tconst len = binstr.length\n\tconst bytes = new Uint8Array(len)\n\tfor (let i = 0; i < len; i++) {\n\t\tbytes[i] = binstr.charCodeAt(i)\n\t}\n\treturn bytes.buffer\n}\n\nexport function dataURLToArrayBuffer(url: string): ArrayBuffer {\n\treturn base64ToArrayBuffer(url.split(\",\")[1])\n}\n\nexport function download(filename: string, url: string) {\n\tconst a = document.createElement(\"a\")\n\ta.href = url\n\ta.download = filename\n\ta.click()\n}\n\nexport function downloadText(filename: string, text: string) {\n\tdownload(filename, \"data:text/plain;charset=utf-8,\" + text)\n}\n\nexport function downloadJSON(filename: string, data: any) {\n\tdownloadText(filename, JSON.stringify(data))\n}\n\nexport function downloadBlob(filename: string, blob: Blob) {\n\tconst url = URL.createObjectURL(blob)\n\tdownload(filename, url)\n\tURL.revokeObjectURL(url)\n}\n\nexport const isDataURL = (str: string) => str.match(/^data:\\w+\\/\\w+;base64,.+/)\nexport const getExt = (p: string) => p.split(\".\").pop()\n\nexport const uid = (() => {\n\tlet id = 0\n\treturn () => id++\n})()\n\nconst warned = new Set()\n\nexport function warn(msg: string) {\n\tif (!warned.has(msg)) {\n\t\twarned.add(msg)\n\t\tconsole.warn(msg)\n\t}\n}\n\nexport function deprecateMsg(oldName: string, newName: string) {\n\twarn(`${oldName} is deprecated. Use ${newName} instead.`)\n}\n\nexport function deprecate(oldName: string, newName: string, newFunc: (...args) => any) {\n\treturn (...args) => {\n\t\tdeprecateMsg(oldName, newName)\n\t\treturn newFunc(...args)\n\t}\n}\n\nexport function benchmark(task: () => void, times: number = 1) {\n\tconst t1 = performance.now()\n\tfor (let i = 0; i < times; i++) {\n\t\ttask()\n\t}\n\tconst t2 = performance.now()\n\treturn t2 - t1\n}\n\nexport function comparePerf(t1: () => void, t2: () => void, times: number = 1) {\n\treturn benchmark(t2, times) / benchmark(t1, times)\n}\n\nexport class BinaryHeap<T> {\n\t_items: T[]\n\t_compareFn: (a: T, b: T) => boolean\n\n\t/**\n\t * Creates a binary heap with the given compare function\n\t * Not passing a compare function will give a min heap\n\t */\n\tconstructor(compareFn = (a: T, b: T) => a < b) {\n\t\tthis._compareFn = compareFn\n\t\tthis._items = []\n\t}\n\n\t/**\n\t * Insert an item into the binary heap\n\t */\n\tinsert(item: T) {\n\t\tthis._items.push(item)\n\t\tthis.moveUp(this._items.length - 1)\n\t}\n\n\t/**\n\t * Remove the smallest item from the binary heap in case of a min heap\n\t * or the greatest item from the binary heap in case of a max heap\n\t */\n\tremove() {\n\t\tif (this._items.length === 0)\n\t\t\treturn null\n\t\tconst item = this._items[0]\n\t\tconst lastItem = this._items.pop()\n\t\tif (this._items.length !== 0) {\n\t\t\tthis._items[0] = lastItem as T\n\t\t\tthis.moveDown(0)\n\t\t}\n\t\treturn item\n\t}\n\n\t/**\n\t * Remove all items\n\t */\n\tclear() {\n\t\tthis._items.splice(0, this._items.length)\n\t}\n\n\tmoveUp(pos: number) {\n\t\twhile (pos > 0) {\n\t\t\tconst parent = Math.floor((pos - 1) / 2)\n\t\t\tif (!this._compareFn(this._items[pos], this._items[parent]))\n\t\t\t\tif (this._items[pos] >= this._items[parent])\n\t\t\t\t\tbreak\n\t\t\tthis.swap(pos, parent)\n\t\t\tpos = parent\n\t\t}\n\t}\n\n\tmoveDown(pos: number) {\n\t\twhile (pos < Math.floor(this._items.length / 2)) {\n\t\t\tlet child = 2 * pos + 1\n\t\t\tif (child < this._items.length - 1 && !this._compareFn(this._items[child], this._items[child + 1]))\n\t\t\t\t++child\n\t\t\tif (this._compareFn(this._items[pos], this._items[child]))\n\t\t\t\tbreak\n\t\t\tthis.swap(pos, child)\n\t\t\tpos = child\n\t\t}\n\t}\n\n\tswap(index1: number, index2: number) {\n\t\t[this._items[index1], this._items[index2]] = [this._items[index2], this._items[index1]]\n\t}\n\n\t/**\n\t * Returns the amount of items\n\t */\n\tget length() {\n\t\treturn this._items.length\n\t}\n}\n", "{\n\t\"Joy-Con L+R (STANDARD GAMEPAD Vendor: 057e Product: 200e)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"6\": \"ltrigger\",\n\t\t\t\"7\": \"rtrigger\",\n\t\t\t\"8\": \"select\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"11\": \"rstick\",\n\t\t\t\"12\": \"dpad-up\",\n\t\t\t\"13\": \"dpad-down\",\n\t\t\t\"14\": \"dpad-left\",\n\t\t\t\"15\": \"dpad-right\",\n\t\t\t\"16\": \"home\",\n\t\t\t\"17\": \"capture\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 },\n\t\t\t\"right\": { \"x\": 2, \"y\": 3 }\n\t\t}\n\t},\n\t\"Joy-Con (L) (STANDARD GAMEPAD Vendor: 057e Product: 2006)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"9\": \"select\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"16\": \"start\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 }\n\t\t}\n\t},\n\t\"Joy-Con (R) (STANDARD GAMEPAD Vendor: 057e Product: 2007)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"16\": \"select\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 }\n\t\t}\n\t},\n\t\"Pro Controller (STANDARD GAMEPAD Vendor: 057e Product: 2009)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"6\": \"ltrigger\",\n\t\t\t\"7\": \"rtrigger\",\n\t\t\t\"8\": \"select\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"11\": \"rstick\",\n\t\t\t\"12\": \"dpad-up\",\n\t\t\t\"13\": \"dpad-down\",\n\t\t\t\"14\": \"dpad-left\",\n\t\t\t\"15\": \"dpad-right\",\n\t\t\t\"16\": \"home\",\n\t\t\t\"17\": \"capture\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 },\n\t\t\t\"right\": { \"x\": 2, \"y\": 3 }\n\t\t}\n\t},\n\t\"default\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"6\": \"ltrigger\",\n\t\t\t\"7\": \"rtrigger\",\n\t\t\t\"8\": \"select\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"11\": \"rstick\",\n\t\t\t\"12\": \"dpad-up\",\n\t\t\t\"13\": \"dpad-down\",\n\t\t\t\"14\": \"dpad-left\",\n\t\t\t\"15\": \"dpad-right\",\n\t\t\t\"16\": \"home\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 },\n\t\t\t\"right\": { \"x\": 2, \"y\": 3 }\n\t\t}\n\t}\n}\n", "// everything related to canvas, game loop and input\n\nimport type {\n\tKaboomCtx,\n\tCursor,\n\tKey,\n\tMouseButton,\n\tGamepadButton,\n\tGamepadStick,\n\tGamepadDef,\n\tKGamePad,\n} from \"./types\"\n\nimport {\n\tVec2,\n\tmap,\n} from \"./math\"\n\nimport {\n\tEventHandler,\n\tEventController,\n} from \"./utils\"\n\nimport GAMEPAD_MAP from \"./gamepad.json\"\n\nexport class ButtonState<T = string> {\n\tpressed: Set<T> = new Set([])\n\tpressedRepeat: Set<T> = new Set([])\n\treleased: Set<T> = new Set([])\n\tdown: Set<T> = new Set([])\n\tupdate() {\n\t\tthis.pressed.clear()\n\t\tthis.released.clear()\n\t\tthis.pressedRepeat.clear()\n\t}\n\tpress(btn: T) {\n\t\tthis.pressed.add(btn)\n\t\tthis.pressedRepeat.add(btn)\n\t\tthis.down.add(btn)\n\t}\n\tpressRepeat(btn: T) {\n\t\tthis.pressedRepeat.add(btn)\n\t}\n\trelease(btn: T) {\n\t\tthis.down.delete(btn)\n\t\tthis.pressed.delete(btn)\n\t\tthis.released.add(btn)\n\t}\n}\n\nclass GamepadState {\n\tbuttonState: ButtonState<GamepadButton> = new ButtonState()\n\tstickState: Map<GamepadStick, Vec2> = new Map()\n}\n\nclass FPSCounter {\n\tprivate dts: number[] = []\n\tprivate timer: number = 0\n\tfps: number = 0\n\ttick(dt: number) {\n\t\tthis.dts.push(dt)\n\t\tthis.timer += dt\n\t\tif (this.timer >= 1) {\n\t\t\tthis.timer = 0\n\t\t\tthis.fps = Math.round(1 / (this.dts.reduce((a, b) => a + b) / this.dts.length))\n\t\t\tthis.dts = []\n\t\t}\n\t}\n}\n\nexport default (opt: {\n\tcanvas: HTMLCanvasElement,\n\ttouchToMouse?: boolean,\n\tgamepads?: Record<string, GamepadDef>,\n\tpixelDensity?: number,\n\tmaxFPS?: number,\n}) => {\n\n\tif (!opt.canvas) {\n\t\tthrow new Error(\"Please provide a canvas\")\n\t}\n\n\tconst state = {\n\t\tcanvas: opt.canvas,\n\t\tloopID: null as null | number,\n\t\tstopped: false,\n\t\tdt: 0,\n\t\ttime: 0,\n\t\trealTime: 0,\n\t\tfpsCounter: new FPSCounter(),\n\t\ttimeScale: 1,\n\t\tskipTime: false,\n\t\tnumFrames: 0,\n\t\tmousePos: new Vec2(0),\n\t\tmouseDeltaPos: new Vec2(0),\n\t\tkeyState: new ButtonState<Key>(),\n\t\tmouseState: new ButtonState<MouseButton>(),\n\t\tmergedGamepadState: new GamepadState(),\n\t\tgamepadStates: new Map<number, GamepadState>(),\n\t\tgamepads: [] as KGamePad[],\n\t\tcharInputted: [],\n\t\tisMouseMoved: false,\n\t\tlastWidth: opt.canvas.offsetWidth,\n\t\tlastHeight: opt.canvas.offsetHeight,\n\t\tevents: new EventHandler<{\n\t\t\tmouseMove: [],\n\t\t\tmouseDown: [MouseButton],\n\t\t\tmousePress: [MouseButton],\n\t\t\tmouseRelease: [MouseButton],\n\t\t\tcharInput: [string],\n\t\t\tkeyPress: [Key],\n\t\t\tkeyDown: [Key],\n\t\t\tkeyPressRepeat: [Key],\n\t\t\tkeyRelease: [Key],\n\t\t\ttouchStart: [Vec2, Touch],\n\t\t\ttouchMove: [Vec2, Touch],\n\t\t\ttouchEnd: [Vec2, Touch],\n\t\t\tgamepadButtonDown: [string],\n\t\t\tgamepadButtonPress: [string],\n\t\t\tgamepadButtonRelease: [string],\n\t\t\tgamepadStick: [string, Vec2],\n\t\t\tgamepadConnect: [KGamePad],\n\t\t\tgamepadDisconnect: [KGamePad],\n\t\t\tscroll: [Vec2],\n\t\t\thide: [],\n\t\t\tshow: [],\n\t\t\tresize: [],\n\t\t\tinput: [],\n\t\t}>(),\n\t}\n\n\tfunction canvas() {\n\t\treturn state.canvas\n\t}\n\n\tfunction dt() {\n\t\treturn state.dt * state.timeScale\n\t}\n\n\tfunction time() {\n\t\treturn state.time\n\t}\n\n\tfunction fps() {\n\t\treturn state.fpsCounter.fps\n\t}\n\n\tfunction numFrames() {\n\t\treturn state.numFrames\n\t}\n\n\tfunction screenshot(): string {\n\t\treturn state.canvas.toDataURL()\n\t}\n\n\tfunction setCursor(c: Cursor): void {\n\t\tstate.canvas.style.cursor = c\n\t}\n\n\tfunction getCursor(): Cursor {\n\t\treturn state.canvas.style.cursor\n\t}\n\n\tfunction setCursorLocked(b: boolean): void {\n\t\tif (b) {\n\t\t\ttry {\n\t\t\t\tconst res = state.canvas.requestPointerLock() as unknown as Promise<void>\n\t\t\t\tif (res.catch) {\n\t\t\t\t\tres.catch((e) => console.error(e))\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e)\n\t\t\t}\n\t\t} else {\n\t\t\tdocument.exitPointerLock()\n\t\t}\n\t}\n\n\tfunction isCursorLocked(): boolean {\n\t\treturn !!document.pointerLockElement\n\t}\n\n\t// wrappers around full screen functions to work across browsers\n\tfunction enterFullscreen(el: HTMLElement) {\n\t\tif (el.requestFullscreen) el.requestFullscreen()\n\t\t// @ts-ignore\n\t\telse if (el.webkitRequestFullscreen) el.webkitRequestFullscreen()\n\t}\n\n\tfunction exitFullscreen() {\n\t\tif (document.exitFullscreen) document.exitFullscreen()\n\t\t// @ts-ignore\n\t\telse if (document.webkitExitFullScreen) document.webkitExitFullScreen()\n\t}\n\n\tfunction getFullscreenElement(): Element | void {\n\t\treturn document.fullscreenElement\n\t\t\t// @ts-ignore\n\t\t\t|| document.webkitFullscreenElement\n\t}\n\n\tfunction setFullscreen(f: boolean = true) {\n\t\tif (f) {\n\t\t\tenterFullscreen(state.canvas)\n\t\t} else {\n\t\t\texitFullscreen()\n\t\t}\n\t}\n\n\tfunction isFullscreen(): boolean {\n\t\treturn Boolean(getFullscreenElement())\n\t}\n\n\tfunction quit() {\n\t\tstate.stopped = true\n\t\tfor (const name in canvasEvents) {\n\t\t\tstate.canvas.removeEventListener(name, canvasEvents[name])\n\t\t}\n\t\tfor (const name in docEvents) {\n\t\t\tdocument.removeEventListener(name, docEvents[name])\n\t\t}\n\t\tfor (const name in winEvents) {\n\t\t\twindow.removeEventListener(name, winEvents[name])\n\t\t}\n\t\tresizeObserver.disconnect()\n\t}\n\n\tfunction run(action: () => void) {\n\n\t\tif (state.loopID !== null) {\n\t\t\tcancelAnimationFrame(state.loopID)\n\t\t}\n\n\t\tlet accumulatedDt = 0\n\n\t\tconst frame = (t: number) => {\n\n\t\t\tif (state.stopped) return\n\n\t\t\t// TODO: allow background actions?\n\t\t\tif (document.visibilityState !== \"visible\") {\n\t\t\t\tstate.loopID = requestAnimationFrame(frame)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst loopTime = t / 1000\n\t\t\tconst realDt = loopTime - state.realTime\n\t\t\tconst desiredDt = opt.maxFPS ? 1 / opt.maxFPS : 0\n\n\t\t\tstate.realTime = loopTime\n\t\t\taccumulatedDt += realDt\n\n\t\t\tif (accumulatedDt > desiredDt) {\n\t\t\t\tif (!state.skipTime) {\n\t\t\t\t\tstate.dt = accumulatedDt\n\t\t\t\t\tstate.time += dt()\n\t\t\t\t\tstate.fpsCounter.tick(state.dt)\n\t\t\t\t}\n\t\t\t\taccumulatedDt = 0\n\t\t\t\tstate.skipTime = false\n\t\t\t\tstate.numFrames++\n\t\t\t\tprocessInput()\n\t\t\t\taction()\n\t\t\t\tresetInput()\n\t\t\t}\n\n\t\t\tstate.loopID = requestAnimationFrame(frame)\n\n\t\t}\n\n\t\tframe(0)\n\n\t}\n\n\tfunction isTouchscreen() {\n\t\treturn (\"ontouchstart\" in window) || navigator.maxTouchPoints > 0\n\t}\n\n\tfunction mousePos(): Vec2 {\n\t\treturn state.mousePos.clone()\n\t}\n\n\tfunction mouseDeltaPos(): Vec2 {\n\t\treturn state.mouseDeltaPos.clone()\n\t}\n\n\tfunction isMousePressed(m: MouseButton = \"left\"): boolean {\n\t\treturn state.mouseState.pressed.has(m)\n\t}\n\n\tfunction isMouseDown(m: MouseButton = \"left\"): boolean {\n\t\treturn state.mouseState.down.has(m)\n\t}\n\n\tfunction isMouseReleased(m: MouseButton = \"left\"): boolean {\n\t\treturn state.mouseState.released.has(m)\n\t}\n\n\tfunction isMouseMoved(): boolean {\n\t\treturn state.isMouseMoved\n\t}\n\n\tfunction isKeyPressed(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.pressed.size > 0\n\t\t\t: state.keyState.pressed.has(k)\n\t}\n\n\tfunction isKeyPressedRepeat(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.pressedRepeat.size > 0\n\t\t\t: state.keyState.pressedRepeat.has(k)\n\t}\n\n\tfunction isKeyDown(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.down.size > 0\n\t\t\t: state.keyState.down.has(k)\n\t}\n\n\tfunction isKeyReleased(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.released.size > 0\n\t\t\t: state.keyState.released.has(k)\n\t}\n\n\tfunction isGamepadButtonPressed(btn?: GamepadButton): boolean {\n\t\treturn btn === undefined\n\t\t\t? state.mergedGamepadState.buttonState.pressed.size > 0\n\t\t\t: state.mergedGamepadState.buttonState.pressed.has(btn)\n\t}\n\n\tfunction isGamepadButtonDown(btn?: GamepadButton): boolean {\n\t\treturn btn === undefined\n\t\t\t? state.mergedGamepadState.buttonState.down.size > 0\n\t\t\t: state.mergedGamepadState.buttonState.down.has(btn)\n\t}\n\n\tfunction isGamepadButtonReleased(btn?: GamepadButton): boolean {\n\t\treturn btn === undefined\n\t\t\t? state.mergedGamepadState.buttonState.released.size > 0\n\t\t\t: state.mergedGamepadState.buttonState.released.has(btn)\n\t}\n\n\tfunction onResize(action: () => void): EventController {\n\t\treturn state.events.on(\"resize\", action)\n\t}\n\n\t// input callbacks\n\tconst onKeyDown = ((key, action) => {\n\t\tif (typeof key === \"function\") {\n\t\t\treturn state.events.on(\"keyDown\", key)\n\t\t} else if (typeof key === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"keyDown\", (k) => k === key && action(key))\n\t\t}\n\t}) as KaboomCtx[\"onKeyDown\"]\n\n\tconst onKeyPress = ((key, action) => {\n\t\tif (typeof key === \"function\") {\n\t\t\treturn state.events.on(\"keyPress\", key)\n\t\t} else if (typeof key === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"keyPress\", (k) => k === key && action(key))\n\t\t}\n\t}) as KaboomCtx[\"onKeyPress\"]\n\n\tconst onKeyPressRepeat = ((key, action) => {\n\t\tif (typeof key === \"function\") {\n\t\t\treturn state.events.on(\"keyPressRepeat\", key)\n\t\t} else if (typeof key === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"keyPressRepeat\", (k) => k === key && action(key))\n\t\t}\n\t}) as KaboomCtx[\"onKeyPressRepeat\"]\n\n\tconst onKeyRelease = ((key, action) => {\n\t\tif (typeof key === \"function\") {\n\t\t\treturn state.events.on(\"keyRelease\", key)\n\t\t} else if (typeof key === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"keyRelease\", (k) => k === key && action(key))\n\t\t}\n\t}) as KaboomCtx[\"onKeyRelease\"]\n\n\tfunction onMouseDown(\n\t\tmouse: MouseButton | ((m: MouseButton) => void),\n\t\taction?: (m: MouseButton) => void,\n\t): EventController {\n\t\tif (typeof mouse === \"function\") {\n\t\t\treturn state.events.on(\"mouseDown\", (m) => mouse(m))\n\t\t} else {\n\t\t\treturn state.events.on(\"mouseDown\", (m) => m === mouse && action(m))\n\t\t}\n\t}\n\n\tfunction onMousePress(\n\t\tmouse: MouseButton | ((m: MouseButton) => void),\n\t\taction?: (m: MouseButton) => void,\n\t): EventController {\n\t\tif (typeof mouse === \"function\") {\n\t\t\treturn state.events.on(\"mousePress\", (m) => mouse(m))\n\t\t} else {\n\t\t\treturn state.events.on(\"mousePress\", (m) => m === mouse && action(m))\n\t\t}\n\t}\n\n\tfunction onMouseRelease(\n\t\tmouse: MouseButton | ((m: MouseButton) => void),\n\t\taction?: (m: MouseButton) => void,\n\t): EventController {\n\t\tif (typeof mouse === \"function\") {\n\t\t\treturn state.events.on(\"mouseRelease\", (m) => mouse(m))\n\t\t} else {\n\t\t\treturn state.events.on(\"mouseRelease\", (m) => m === mouse && action(m))\n\t\t}\n\t}\n\n\tfunction onMouseMove(f: (pos: Vec2, dpos: Vec2) => void): EventController {\n\t\treturn state.events.on(\"mouseMove\", () => f(mousePos(), mouseDeltaPos()))\n\t}\n\n\tfunction onCharInput(action: (ch: string) => void): EventController {\n\t\treturn state.events.on(\"charInput\", action)\n\t}\n\n\tfunction onTouchStart(f: (pos: Vec2, t: Touch) => void): EventController {\n\t\treturn state.events.on(\"touchStart\", f)\n\t}\n\n\tfunction onTouchMove(f: (pos: Vec2, t: Touch) => void): EventController {\n\t\treturn state.events.on(\"touchMove\", f)\n\t}\n\n\tfunction onTouchEnd(f: (pos: Vec2, t: Touch) => void): EventController {\n\t\treturn state.events.on(\"touchEnd\", f)\n\t}\n\n\tfunction onScroll(action: (delta: Vec2) => void): EventController {\n\t\treturn state.events.on(\"scroll\", action)\n\t}\n\n\tfunction onHide(action: () => void): EventController {\n\t\treturn state.events.on(\"hide\", action)\n\t}\n\n\tfunction onShow(action: () => void): EventController {\n\t\treturn state.events.on(\"show\", action)\n\t}\n\n\tfunction onGamepadButtonDown(btn: GamepadButton | ((btn: GamepadButton) => void), action?: (btn: GamepadButton) => void): EventController {\n\t\tif (typeof btn === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonDown\", btn)\n\t\t} else if (typeof btn === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonDown\", (b) => b === btn && action(btn))\n\t\t}\n\t}\n\n\tfunction onGamepadButtonPress(btn: GamepadButton | ((btn: GamepadButton) => void), action?: (btn: GamepadButton) => void): EventController {\n\t\tif (typeof btn === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonPress\", btn)\n\t\t} else if (typeof btn === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonPress\", (b) => b === btn && action(btn))\n\t\t}\n\t}\n\n\tfunction onGamepadButtonRelease(btn: GamepadButton | ((btn: GamepadButton) => void), action?: (btn: GamepadButton) => void): EventController {\n\t\tif (typeof btn === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonRelease\", btn)\n\t\t} else if (typeof btn === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonRelease\", (b) => b === btn && action(btn))\n\t\t}\n\t}\n\n\tfunction onGamepadStick(stick: GamepadStick, action: (value: Vec2) => void): EventController {\n\t\treturn state.events.on(\"gamepadStick\", ((a: string, v: Vec2) => a === stick && action(v)))\n\t}\n\n\tfunction onGamepadConnect(action: (gamepad: KGamePad) => void) {\n\t\tstate.events.on(\"gamepadConnect\", action)\n\t}\n\n\tfunction onGamepadDisconnect(action: (gamepad: KGamePad) => void) {\n\t\tstate.events.on(\"gamepadDisconnect\", action)\n\t}\n\n\tfunction getGamepadStick(stick: GamepadStick): Vec2 {\n\t\treturn state.mergedGamepadState.stickState.get(stick) || new Vec2(0)\n\t}\n\n\tfunction charInputted(): string[] {\n\t\treturn [...state.charInputted]\n\t}\n\n\tfunction getGamepads(): KGamePad[] {\n\t\treturn [...state.gamepads]\n\t}\n\n\tfunction processInput() {\n\t\tstate.events.trigger(\"input\")\n\t\tstate.keyState.down.forEach((k) => state.events.trigger(\"keyDown\", k))\n\t\tstate.mouseState.down.forEach((k) => state.events.trigger(\"mouseDown\", k))\n\t\tprocessGamepad()\n\t}\n\n\tfunction resetInput() {\n\t\tstate.keyState.update()\n\t\tstate.mouseState.update()\n\t\tstate.mergedGamepadState.buttonState.update()\n\t\tstate.mergedGamepadState.stickState.forEach((v, k) => {\n\t\t\tstate.mergedGamepadState.stickState.set(k, new Vec2(0))\n\t\t})\n\t\tstate.charInputted = []\n\t\tstate.isMouseMoved = false\n\n\t\tstate.gamepadStates.forEach((s) => {\n\t\t\ts.buttonState.update()\n\t\t\ts.stickState.forEach((v, k) => {\n\t\t\t\ts.stickState.set(k, new Vec2(0))\n\t\t\t})\n\t\t})\n\t}\n\n\tfunction registerGamepad(browserGamepad: Gamepad) {\n\n\t\tconst gamepad = {\n\t\t\tindex: browserGamepad.index,\n\t\t\tisPressed: (btn: GamepadButton) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).buttonState.pressed.has(btn)\n\t\t\t},\n\t\t\tisDown: (btn: GamepadButton) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).buttonState.down.has(btn)\n\t\t\t},\n\t\t\tisReleased: (btn: GamepadButton) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).buttonState.released.has(btn)\n\t\t\t},\n\t\t\tgetStick: (stick: GamepadStick) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).stickState.get(stick)\n\t\t\t},\n\t\t}\n\n\t\tstate.gamepads.push(gamepad)\n\n\t\tstate.gamepadStates.set(browserGamepad.index, {\n\t\t\tbuttonState: new ButtonState(),\n\t\t\tstickState: new Map([\n\t\t\t\t[\"left\", new Vec2(0)],\n\t\t\t\t[\"right\", new Vec2(0)],\n\t\t\t]),\n\t\t})\n\n\t\treturn gamepad\n\n\t}\n\n\tfunction removeGamepad(gamepad: Gamepad) {\n\t\tstate.gamepads = state.gamepads.filter((g) => g.index !== gamepad.index)\n\t\tstate.gamepadStates.delete(gamepad.index)\n\t}\n\n\tfunction processGamepad() {\n\n\t\tfor (const browserGamepad of navigator.getGamepads()) {\n\t\t\tif (browserGamepad && !state.gamepadStates.has(browserGamepad.index)) {\n\t\t\t\tregisterGamepad(browserGamepad)\n\t\t\t}\n\t\t}\n\n\t\tfor (const gamepad of state.gamepads) {\n\n\t\t\tconst browserGamepad = navigator.getGamepads()[gamepad.index]\n\t\t\tconst customMap = opt.gamepads ?? {}\n\t\t\tconst map = customMap[browserGamepad.id] ?? GAMEPAD_MAP[browserGamepad.id] ?? GAMEPAD_MAP[\"default\"]\n\t\t\tconst gamepadState = state.gamepadStates.get(gamepad.index)\n\n\t\t\tfor (let i = 0; i < browserGamepad.buttons.length; i++) {\n\t\t\t\tif (browserGamepad.buttons[i].pressed) {\n\t\t\t\t\tif (!gamepadState.buttonState.down.has(map.buttons[i])) {\n\t\t\t\t\t\tstate.mergedGamepadState.buttonState.press(map.buttons[i])\n\t\t\t\t\t\tgamepadState.buttonState.press(map.buttons[i])\n\t\t\t\t\t\tstate.events.trigger(\"gamepadButtonPress\", map.buttons[i])\n\t\t\t\t\t}\n\t\t\t\t\tstate.events.trigger(\"gamepadButtonDown\", map.buttons[i])\n\t\t\t\t} else {\n\t\t\t\t\tif (gamepadState.buttonState.down.has(map.buttons[i])) {\n\t\t\t\t\t\tstate.mergedGamepadState.buttonState.release(map.buttons[i])\n\t\t\t\t\t\tgamepadState.buttonState.release(map.buttons[i])\n\t\t\t\t\t\tstate.events.trigger(\"gamepadButtonRelease\", map.buttons[i])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const stickName in map.sticks) {\n\t\t\t\tconst stick = map.sticks[stickName]\n\t\t\t\tconst value = new Vec2(\n\t\t\t\t\tbrowserGamepad.axes[stick.x],\n\t\t\t\t\tbrowserGamepad.axes[stick.y],\n\t\t\t\t)\n\t\t\t\tgamepadState.stickState.set(stickName as GamepadStick, value)\n\t\t\t\tstate.mergedGamepadState.stickState.set(stickName as GamepadStick, value)\n\t\t\t\tstate.events.trigger(\"gamepadStick\", stickName, value)\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttype EventList<M> = {\n\t\t[event in keyof M]?: (event: M[event]) => void\n\t}\n\n\tconst canvasEvents: EventList<HTMLElementEventMap> = {}\n\tconst docEvents: EventList<DocumentEventMap> = {}\n\tconst winEvents: EventList<WindowEventMap> = {}\n\n\tconst pd = opt.pixelDensity || window.devicePixelRatio || 1\n\n\tcanvasEvents.mousemove = (e) => {\n\t\tconst mousePos = new Vec2(e.offsetX, e.offsetY)\n\t\tconst mouseDeltaPos = new Vec2(e.movementX, e.movementY)\n\t\tif (isFullscreen()) {\n\t\t\tconst cw = state.canvas.width / pd\n\t\t\tconst ch = state.canvas.height / pd\n\t\t\tconst ww = window.innerWidth\n\t\t\tconst wh = window.innerHeight\n\t\t\tconst rw = ww / wh\n\t\t\tconst rc = cw / ch\n\t\t\tif (rw > rc) {\n\t\t\t\tconst ratio = wh / ch\n\t\t\t\tconst offset = (ww - (cw * ratio)) / 2\n\t\t\t\tmousePos.x = map(e.offsetX - offset, 0, cw * ratio, 0, cw)\n\t\t\t\tmousePos.y = map(e.offsetY, 0, ch * ratio, 0, ch)\n\t\t\t} else {\n\t\t\t\tconst ratio = ww / cw\n\t\t\t\tconst offset = (wh - (ch * ratio)) / 2\n\t\t\t\tmousePos.x = map(e.offsetX , 0, cw * ratio, 0, cw)\n\t\t\t\tmousePos.y = map(e.offsetY - offset, 0, ch * ratio, 0, ch)\n\t\t\t}\n\t\t}\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.isMouseMoved = true\n\t\t\tstate.mousePos = mousePos\n\t\t\tstate.mouseDeltaPos = mouseDeltaPos\n\t\t\tstate.events.trigger(\"mouseMove\")\n\t\t})\n\t}\n\n\tconst MOUSE_BUTTONS: MouseButton[] = [\n\t\t\"left\",\n\t\t\"middle\",\n\t\t\"right\",\n\t\t\"back\",\n\t\t\"forward\",\n\t]\n\n\tcanvasEvents.mousedown = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst m = MOUSE_BUTTONS[e.button]\n\t\t\tif (!m) return\n\t\t\tstate.mouseState.press(m)\n\t\t\tstate.events.trigger(\"mousePress\", m)\n\t\t})\n\t}\n\n\tcanvasEvents.mouseup = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst m = MOUSE_BUTTONS[e.button]\n\t\t\tif (!m) return\n\t\t\tstate.mouseState.release(m)\n\t\t\tstate.events.trigger(\"mouseRelease\", m)\n\t\t})\n\t}\n\n\tconst PREVENT_DEFAULT_KEYS = new Set([\n\t\t\" \",\n\t\t\"ArrowLeft\",\n\t\t\"ArrowRight\",\n\t\t\"ArrowUp\",\n\t\t\"ArrowDown\",\n\t\t\"Tab\",\n\t])\n\n\t// translate these key names to a simpler version\n\tconst KEY_ALIAS = {\n\t\t\"ArrowLeft\": \"left\",\n\t\t\"ArrowRight\": \"right\",\n\t\t\"ArrowUp\": \"up\",\n\t\t\"ArrowDown\": \"down\",\n\t\t\" \": \"space\",\n\t}\n\n\tcanvasEvents.keydown = (e) => {\n\t\tif (PREVENT_DEFAULT_KEYS.has(e.key)) {\n\t\t\te.preventDefault()\n\t\t}\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst k = KEY_ALIAS[e.key] || e.key.toLowerCase()\n\t\t\tif (k.length === 1) {\n\t\t\t\tstate.events.trigger(\"charInput\", k)\n\t\t\t\tstate.charInputted.push(k)\n\t\t\t} else if (k === \"space\") {\n\t\t\t\tstate.events.trigger(\"charInput\", \" \")\n\t\t\t\tstate.charInputted.push(\" \")\n\t\t\t}\n\t\t\tif (e.repeat) {\n\t\t\t\tstate.keyState.pressRepeat(k)\n\t\t\t\tstate.events.trigger(\"keyPressRepeat\", k)\n\t\t\t} else {\n\t\t\t\tstate.keyState.press(k)\n\t\t\t\tstate.events.trigger(\"keyPressRepeat\", k)\n\t\t\t\tstate.events.trigger(\"keyPress\", k)\n\t\t\t}\n\t\t})\n\t}\n\n\tcanvasEvents.keyup = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst k = KEY_ALIAS[e.key] || e.key.toLowerCase()\n\t\t\tstate.keyState.release(k)\n\t\t\tstate.events.trigger(\"keyRelease\", k)\n\t\t})\n\t}\n\n\tcanvasEvents.touchstart = (e) => {\n\t\t// disable long tap context menu\n\t\te.preventDefault()\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\tconst box = state.canvas.getBoundingClientRect()\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(\n\t\t\t\t\ttouches[0].clientX - box.x,\n\t\t\t\t\ttouches[0].clientY - box.y,\n\t\t\t\t)\n\t\t\t\tstate.mouseState.press(\"left\")\n\t\t\t\tstate.events.trigger(\"mousePress\", \"left\")\n\t\t\t}\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\n\t\t\t\t\t\"touchStart\",\n\t\t\t\t\tnew Vec2(t.clientX - box.x, t.clientY - box.y),\n\t\t\t\t\tt,\n\t\t\t\t)\n\t\t\t})\n\t\t})\n\t}\n\n\tcanvasEvents.touchmove = (e) => {\n\t\t// disable scrolling\n\t\te.preventDefault()\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\tconst box = state.canvas.getBoundingClientRect()\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(\n\t\t\t\t\ttouches[0].clientX - box.x,\n\t\t\t\t\ttouches[0].clientY - box.y,\n\t\t\t\t)\n\t\t\t\tstate.events.trigger(\"mouseMove\")\n\t\t\t}\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\n\t\t\t\t\t\"touchMove\",\n\t\t\t\t\tnew Vec2(t.clientX - box.x, t.clientY - box.y),\n\t\t\t\t\tt,\n\t\t\t\t)\n\t\t\t})\n\t\t})\n\t}\n\n\tcanvasEvents.touchend = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\tconst box = state.canvas.getBoundingClientRect()\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(\n\t\t\t\t\ttouches[0].clientX - box.x,\n\t\t\t\t\ttouches[0].clientY - box.y,\n\t\t\t\t)\n\t\t\t\tstate.mouseState.release(\"left\")\n\t\t\t\tstate.events.trigger(\"mouseRelease\", \"left\")\n\t\t\t}\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\n\t\t\t\t\t\"touchEnd\",\n\t\t\t\t\tnew Vec2(t.clientX - box.x, t.clientY - box.y),\n\t\t\t\t\tt,\n\t\t\t\t)\n\t\t\t})\n\t\t})\n\t}\n\n\tcanvasEvents.touchcancel = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\tconst box = state.canvas.getBoundingClientRect()\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(\n\t\t\t\t\ttouches[0].clientX - box.x,\n\t\t\t\t\ttouches[0].clientY - box.y,\n\t\t\t\t)\n\t\t\t\tstate.mouseState.release(\"left\")\n\t\t\t\tstate.events.trigger(\"mouseRelease\", \"left\")\n\t\t\t}\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\n\t\t\t\t\t\"touchEnd\",\n\t\t\t\t\tnew Vec2(t.clientX - box.x, t.clientY - box.y),\n\t\t\t\t\tt,\n\t\t\t\t)\n\t\t\t})\n\t\t})\n\t}\n\n\t// TODO: option to not prevent default?\n\tcanvasEvents.wheel = (e) => {\n\t\te.preventDefault()\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.events.trigger(\"scroll\", new Vec2(e.deltaX, e.deltaY))\n\t\t})\n\t}\n\n\tcanvasEvents.contextmenu = (e) => e.preventDefault()\n\n\tdocEvents.visibilitychange = () => {\n\t\tif (document.visibilityState === \"visible\") {\n\t\t\t// prevent a surge of dt when switch back after the tab being hidden for a while\n\t\t\tstate.skipTime = true\n\t\t\tstate.events.trigger(\"show\")\n\t\t} else {\n\t\t\tstate.events.trigger(\"hide\")\n\t\t}\n\t}\n\n\twinEvents.gamepadconnected = (e) => {\n\t\tconst kbGamepad = registerGamepad(e.gamepad)\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.events.trigger(\"gamepadConnect\", kbGamepad)\n\t\t})\n\t}\n\n\twinEvents.gamepaddisconnected = (e) => {\n\t\tconst kbGamepad = getGamepads().filter((g) => g.index === e.gamepad.index)[0]\n\t\tremoveGamepad(e.gamepad)\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.events.trigger(\"gamepadDisconnect\", kbGamepad)\n\t\t})\n\t}\n\n\tfor (const name in canvasEvents) {\n\t\tstate.canvas.addEventListener(name, canvasEvents[name])\n\t}\n\n\tfor (const name in docEvents) {\n\t\tdocument.addEventListener(name, docEvents[name])\n\t}\n\n\tfor (const name in winEvents) {\n\t\twindow.addEventListener(name, winEvents[name])\n\t}\n\n\tconst resizeObserver = new ResizeObserver((entries) => {\n\t\tfor (const entry of entries) {\n\t\t\tif (entry.target !== state.canvas) continue\n\t\t\tif (\n\t\t\t\tstate.lastWidth === state.canvas.offsetWidth\n\t\t\t\t&& state.lastHeight === state.canvas.offsetHeight\n\t\t\t) return\n\t\t\tstate.lastWidth = state.canvas.offsetWidth\n\t\t\tstate.lastHeight = state.canvas.offsetHeight\n\t\t\tstate.events.onOnce(\"input\", () => {\n\t\t\t\tstate.events.trigger(\"resize\")\n\t\t\t})\n\t\t}\n\t})\n\n\tresizeObserver.observe(state.canvas)\n\n\treturn {\n\t\tdt,\n\t\ttime,\n\t\trun,\n\t\tcanvas,\n\t\tfps,\n\t\tnumFrames,\n\t\tquit,\n\t\tsetFullscreen,\n\t\tisFullscreen,\n\t\tsetCursor,\n\t\tscreenshot,\n\t\tgetGamepads,\n\t\tgetCursor,\n\t\tsetCursorLocked,\n\t\tisCursorLocked,\n\t\tisTouchscreen,\n\t\tmousePos,\n\t\tmouseDeltaPos,\n\t\tisKeyDown,\n\t\tisKeyPressed,\n\t\tisKeyPressedRepeat,\n\t\tisKeyReleased,\n\t\tisMouseDown,\n\t\tisMousePressed,\n\t\tisMouseReleased,\n\t\tisMouseMoved,\n\t\tisGamepadButtonPressed,\n\t\tisGamepadButtonDown,\n\t\tisGamepadButtonReleased,\n\t\tgetGamepadStick,\n\t\tcharInputted,\n\t\tonResize,\n\t\tonKeyDown,\n\t\tonKeyPress,\n\t\tonKeyPressRepeat,\n\t\tonKeyRelease,\n\t\tonMouseDown,\n\t\tonMousePress,\n\t\tonMouseRelease,\n\t\tonMouseMove,\n\t\tonCharInput,\n\t\tonTouchStart,\n\t\tonTouchMove,\n\t\tonTouchEnd,\n\t\tonScroll,\n\t\tonHide,\n\t\tonShow,\n\t\tonGamepadButtonDown,\n\t\tonGamepadButtonPress,\n\t\tonGamepadButtonRelease,\n\t\tonGamepadStick,\n\t\tonGamepadConnect,\n\t\tonGamepadDisconnect,\n\t\tevents: state.events,\n\t}\n\n}\n", "// https://easings.net/\nconst c1 = 1.70158\nconst c2 = c1 * 1.525\nconst c3 = c1 + 1\nconst c4 = (2 * Math.PI) / 3\nconst c5 = (2 * Math.PI) / 4.5\n\nconst easings = {\n\tlinear: (x) => x,\n\teaseInSine: (x) => 1 - Math.cos((x * Math.PI) / 2),\n\teaseOutSine: (x) => Math.sin((x * Math.PI) / 2),\n\teaseInOutSine: (x) => -(Math.cos(Math.PI * x) - 1) / 2,\n\teaseInQuad: (x) => x * x,\n\teaseOutQuad: (x) => 1 - (1 - x) * (1 - x),\n\teaseInOutQuad: (x) => x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2,\n\teaseInCubic: (x) => x * x * x,\n\teaseOutCubic: (x) => 1 - Math.pow(1 - x, 3),\n\teaseInOutCubic: (x) => x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2,\n\teaseInQuart: (x) => x * x * x * x,\n\teaseOutQuart: (x) => 1 - Math.pow(1 - x, 4),\n\teaseInOutQuart: (x) => x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2,\n\teaseInQuint: (x) => x * x * x * x * x,\n\teaseOutQuint: (x) => 1 - Math.pow(1 - x, 5),\n\teaseInOutQuint: (x) => x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2,\n\teaseInExpo: (x) => x === 0 ? 0 : Math.pow(2, 10 * x - 10),\n\teaseOutExpo: (x) => x === 1 ? 1 : 1 - Math.pow(2, -10 * x),\n\teaseInOutExpo: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: x < 0.5\n\t\t\t\t\t? Math.pow(2, 20 * x - 10) / 2\n\t\t\t\t\t: (2 - Math.pow(2, -20 * x + 10)) / 2\n\t},\n\teaseInCirc: (x) => 1 - Math.sqrt(1 - Math.pow(x, 2)),\n\teaseOutCirc: (x) => Math.sqrt(1 - Math.pow(x - 1, 2)),\n\teaseInOutCirc: (x) => {\n\t\treturn x < 0.5\n\t\t\t? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2\n\t\t\t: (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2\n\t},\n\teaseInBack: (x) => c3 * x * x * x - c1 * x * x,\n\teaseOutBack: (x) => 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2),\n\teaseInOutBack: (x) => {\n\t\treturn x < 0.5\n\t\t\t? (Math.pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2)) / 2\n\t\t\t: (Math.pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2\n\t},\n\teaseInElastic: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: -Math.pow(2, 10 * x - 10) * Math.sin((x * 10 - 10.75) * c4)\n\t},\n\teaseOutElastic: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1\n\t},\n\teaseInOutElastic: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: x < 0.5\n\t\t\t\t\t? -(Math.pow(2, 20 * x - 10) * Math.sin((20 * x - 11.125) * c5)) / 2\n\t\t\t\t\t: (Math.pow(2, -20 * x + 10) * Math.sin((20 * x - 11.125) * c5)) / 2 + 1\n\t},\n\teaseInBounce: (x) => 1 - easings.easeOutBounce(1 - x),\n\teaseOutBounce: (x) => {\n\t\tconst n1 = 7.5625\n\t\tconst d1 = 2.75\n\t\tif (x < 1 / d1) {\n\t\t\treturn n1 * x * x\n\t\t} else if (x < 2 / d1) {\n\t\t\treturn n1 * (x -= 1.5 / d1) * x + 0.75\n\t\t} else if (x < 2.5 / d1) {\n\t\t\treturn n1 * (x -= 2.25 / d1) * x + 0.9375\n\t\t} else {\n\t\t\treturn n1 * (x -= 2.625 / d1) * x + 0.984375\n\t\t}\n\t},\n\teaseInOutBounce: (x) => {\n\t\treturn x < 0.5\n\t\t\t? (1 - easings.easeOutBounce(1 - 2 * x)) / 2\n\t\t\t: (1 + easings.easeOutBounce(2 * x - 1)) / 2\n\t},\n}\n\nexport default easings\n", "export default class Timer {\n\n\ttime: number\n\taction: () => void\n\tfinished: boolean = false\n\tpaused: boolean = false\n\n\tconstructor(time: number, action: () => void) {\n\t\tthis.time = time\n\t\tthis.action = action\n\t}\n\n\ttick(dt: number): boolean {\n\t\tif (this.finished || this.paused) return false\n\t\tthis.time -= dt\n\t\tif (this.time <= 0) {\n\t\t\tthis.action()\n\t\t\tthis.finished = true\n\t\t\tthis.time = 0\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\treset(time) {\n\t\tthis.time = time\n\t\tthis.finished = false\n\t}\n\n}\n", "const VERSION = \"3000.1.12\"\n\nimport initApp from \"./app\"\n\nimport {\n\tsat,\n\tvec2,\n\tRect,\n\tPolygon,\n\tLine,\n\tCircle,\n\tColor,\n\tVec2,\n\tMat4,\n\tQuad,\n\tRNG,\n\tquad,\n\trgb,\n\thsl2rgb,\n\trand,\n\trandi,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\ttestLinePoint,\n\ttestLineLine,\n\ttestLineCircle,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestCirclePolygon,\n\tdeg2rad,\n\trad2deg,\n} from \"./math\"\n\nimport easings from \"./easings\"\n\nimport {\n\tIDList,\n\tEvent,\n\tEventHandler,\n\tdownload,\n\tdownloadText,\n\tdownloadJSON,\n\tdownloadBlob,\n\tuid,\n\tisDataURL,\n\tgetExt,\n\tdeepEq,\n\tdataURLToArrayBuffer,\n\tEventController,\n\t// eslint-disable-next-line\n\twarn,\n\t// eslint-disable-next-line\n\tbenchmark,\n\t// eslint-disable-next-line\n\tcomparePerf,\n\tBinaryHeap,\n} from \"./utils\"\n\nimport type {\n\tGfxShader,\n\tGfxFont,\n\tRenderProps,\n\tCharTransform,\n\tTextureOpt,\n\tImageSource,\n\tFormattedText,\n\tFormattedChar,\n\tDrawRectOpt,\n\tDrawLineOpt,\n\tDrawLinesOpt,\n\tDrawTriangleOpt,\n\tDrawPolygonOpt,\n\tDrawCircleOpt,\n\tDrawEllipseOpt,\n\tDrawUVQuadOpt,\n\tVertex,\n\tBitmapFontData,\n\tShaderData,\n\tLoadSpriteSrc,\n\tLoadSpriteOpt,\n\tSpriteAtlasData,\n\tLoadBitmapFontOpt,\n\tKaboomCtx,\n\tKaboomOpt,\n\tAudioPlay,\n\tAudioPlayOpt,\n\tDrawSpriteOpt,\n\tDrawTextOpt,\n\tTextAlign,\n\tGameObj,\n\tSceneName,\n\tSceneDef,\n\tCompList,\n\tComp,\n\tTag,\n\tKey,\n\tMouseButton,\n\tPosComp,\n\tScaleComp,\n\tRotateComp,\n\tColorComp,\n\tOpacityComp,\n\tAnchor,\n\tAnchorComp,\n\tZComp,\n\tFollowComp,\n\tOffScreenCompOpt,\n\tOffScreenComp,\n\tAreaCompOpt,\n\tAreaComp,\n\tSpriteComp,\n\tSpriteCompOpt,\n\tSpriteAnimPlayOpt,\n\tSpriteAnims,\n\tTextComp,\n\tTextCompOpt,\n\tRectComp,\n\tRectCompOpt,\n\tUVQuadComp,\n\tCircleCompOpt,\n\tCircleComp,\n\tOutlineComp,\n\tTimerComp,\n\tBodyComp,\n\tBodyCompOpt,\n\tUniform,\n\tShaderComp,\n\tFixedComp,\n\tStayComp,\n\tHealthComp,\n\tLifespanCompOpt,\n\tStateComp,\n\tDebug,\n\tKaboomPlugin,\n\tEmptyComp,\n\tLevelComp,\n\tEdge,\n\tTileComp,\n\tTileCompOpt,\n\tLevelOpt,\n\tRecording,\n\tBoomOpt,\n\tPeditFile,\n\tShape,\n\tDoubleJumpComp,\n\tTimerController,\n\tTweenController,\n\tLoadFontOpt,\n\tAgentComp,\n\tAgentCompOpt,\n\tPathFindOpt,\n\tGetOpt,\n\tVec2Args,\n\tNineSlice,\n\tLerpValue,\n\tTexFilter,\n\tMaskComp,\n\tMask,\n\tOutline,\n} from \"./types\"\n\nimport Timer from \"./timer\"\n\nimport beanSpriteSrc from \"./assets/bean.png\"\nimport burpSoundSrc from \"./assets/burp.mp3\"\nimport kaSpriteSrc from \"./assets/ka.png\"\nimport boomSpriteSrc from \"./assets/boom.png\"\n\ntype EventList<M> = {\n\t[event in keyof M]?: (event: M[event]) => void\n}\n\ninterface SpriteCurAnim {\n\tname: string,\n\ttimer: number,\n\tloop: boolean,\n\tspeed: number,\n\tpingpong: boolean,\n\tonEnd: () => void,\n}\n\n// some default charsets for loading bitmap fonts\nconst ASCII_CHARS = \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\"\n\nconst DEF_ANCHOR = \"topleft\"\nconst BG_GRID_SIZE = 64\n\nconst DEF_FONT = \"monospace\"\nconst DBG_FONT = \"monospace\"\nconst DEF_TEXT_SIZE = 36\nconst DEF_TEXT_CACHE_SIZE = 64\nconst MAX_TEXT_CACHE_SIZE = 256\nconst FONT_ATLAS_WIDTH = 2048\nconst FONT_ATLAS_HEIGHT = 2048\nconst SPRITE_ATLAS_WIDTH = 2048\nconst SPRITE_ATLAS_HEIGHT = 2048\n// 0.1 pixel padding to texture coordinates to prevent artifact\nconst UV_PAD = 0.1\nconst DEF_HASH_GRID_SIZE = 64\nconst DEF_FONT_FILTER = \"nearest\"\n\nconst LOG_MAX = 8\nconst LOG_TIME = 4\n\nconst VERTEX_FORMAT = [\n\t{ name: \"a_pos\", size: 2 },\n\t{ name: \"a_uv\", size: 2 },\n\t{ name: \"a_color\", size: 4 },\n]\n\nconst STRIDE = VERTEX_FORMAT.reduce((sum, f) => sum + f.size, 0)\n\nconst MAX_BATCHED_QUAD = 2048\nconst MAX_BATCHED_VERTS = MAX_BATCHED_QUAD * 4 * STRIDE\nconst MAX_BATCHED_INDICES = MAX_BATCHED_QUAD * 6\n\n// vertex shader template, replace {{user}} with user vertex shader code\nconst VERT_TEMPLATE = `\nattribute vec2 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec2 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvec4 def_vert() {\n\treturn vec4(a_pos, 0.0, 1.0);\n}\n\n{{user}}\n\nvoid main() {\n\tvec4 pos = vert(a_pos, a_uv, a_color);\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tgl_Position = pos;\n}\n`\n\n// fragment shader template, replace {{user}} with user fragment shader code\nconst FRAG_TEMPLATE = `\nprecision mediump float;\n\nvarying vec2 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nuniform sampler2D u_tex;\n\nvec4 def_frag() {\n\treturn v_color * texture2D(u_tex, v_uv);\n}\n\n{{user}}\n\nvoid main() {\n\tgl_FragColor = frag(v_pos, v_uv, v_color, u_tex);\n\tif (gl_FragColor.a == 0.0) {\n\t\tdiscard;\n\t}\n}\n`\n\n// default {{user}} vertex shader code\nconst DEF_VERT = `\nvec4 vert(vec2 pos, vec2 uv, vec4 color) {\n\treturn def_vert();\n}\n`\n\n// default {{user}} fragment shader code\nconst DEF_FRAG = `\nvec4 frag(vec2 pos, vec2 uv, vec4 color, sampler2D tex) {\n\treturn def_frag();\n}\n`\n\nconst COMP_DESC = new Set([\n\t\"id\",\n\t\"require\",\n])\n\nconst COMP_EVENTS = new Set([\n\t\"add\",\n\t\"update\",\n\t\"draw\",\n\t\"destroy\",\n\t\"inspect\",\n\t\"drawInspect\",\n])\n\n// convert anchor string to a vec2 offset\nfunction anchorPt(orig: Anchor | Vec2): Vec2 {\n\tswitch (orig) {\n\t\tcase \"topleft\": return new Vec2(-1, -1)\n\t\tcase \"top\": return new Vec2(0, -1)\n\t\tcase \"topright\": return new Vec2(1, -1)\n\t\tcase \"left\": return new Vec2(-1, 0)\n\t\tcase \"center\": return new Vec2(0, 0)\n\t\tcase \"right\": return new Vec2(1, 0)\n\t\tcase \"botleft\": return new Vec2(-1, 1)\n\t\tcase \"bot\": return new Vec2(0, 1)\n\t\tcase \"botright\": return new Vec2(1, 1)\n\t\tdefault: return orig\n\t}\n}\n\nfunction alignPt(align: TextAlign): number {\n\tswitch (align) {\n\t\tcase \"left\": return 0\n\t\tcase \"center\": return 0.5\n\t\tcase \"right\": return 1\n\t\tdefault: return 0\n\t}\n}\n\nfunction createEmptyAudioBuffer(ctx: AudioContext) {\n\treturn ctx.createBuffer(1, 1, 44100)\n}\n\n// only exports one kaboom() which contains all the state\nexport default (gopt: KaboomOpt = {}): KaboomCtx => {\n\n\tconst root = gopt.root ?? document.body\n\n\t// if root is not defined (which falls back to <body>) we assume user is using kaboom on a clean page, and modify <body> to better fit a full screen canvas\n\tif (root === document.body) {\n\t\tdocument.body.style[\"width\"] = \"100%\"\n\t\tdocument.body.style[\"height\"] = \"100%\"\n\t\tdocument.body.style[\"margin\"] = \"0px\"\n\t\tdocument.documentElement.style[\"width\"] = \"100%\"\n\t\tdocument.documentElement.style[\"height\"] = \"100%\"\n\t}\n\n\t// create a <canvas> if user didn't provide one\n\tconst canvas = gopt.canvas ?? (() => {\n\t\tconst canvas = document.createElement(\"canvas\")\n\t\troot.appendChild(canvas)\n\t\treturn canvas\n\t})()\n\n\t// global pixel scale\n\tconst gscale = gopt.scale ?? 1\n\tconst fixedSize = gopt.width && gopt.height && !gopt.stretch && !gopt.letterbox\n\n\t// adjust canvas size according to user size / viewport settings\n\tif (fixedSize) {\n\t\tcanvas.width = gopt.width * gscale\n\t\tcanvas.height = gopt.height * gscale\n\t} else {\n\t\tcanvas.width = canvas.parentElement.offsetWidth\n\t\tcanvas.height = canvas.parentElement.offsetHeight\n\t}\n\n\t// canvas css styles\n\tconst styles = [\n\t\t\"outline: none\",\n\t\t\"cursor: default\",\n\t]\n\n\tif (fixedSize) {\n\t\tconst cw = canvas.width\n\t\tconst ch = canvas.height\n\t\tstyles.push(`width: ${cw}px`)\n\t\tstyles.push(`height: ${ch}px`)\n\t} else {\n\t\tstyles.push(\"width: 100%\")\n\t\tstyles.push(\"height: 100%\")\n\t}\n\n\tif (gopt.crisp) {\n\t\t// chrome only supports pixelated and firefox only supports crisp-edges\n\t\tstyles.push(\"image-rendering: pixelated\")\n\t\tstyles.push(\"image-rendering: crisp-edges\")\n\t}\n\n\tcanvas.style.cssText = styles.join(\";\")\n\n\tconst pixelDensity = gopt.pixelDensity || window.devicePixelRatio\n\n\tcanvas.width *= pixelDensity\n\tcanvas.height *= pixelDensity\n\t// make canvas focusable\n\tcanvas.tabIndex = 0\n\n\tconst fontCacheCanvas = document.createElement(\"canvas\")\n\tfontCacheCanvas.width = MAX_TEXT_CACHE_SIZE\n\tfontCacheCanvas.height = MAX_TEXT_CACHE_SIZE\n\tconst fontCacheCtx = fontCacheCanvas.getContext(\"2d\", {\n\t\twillReadFrequently: true,\n\t})\n\n\tconst app = initApp({\n\t\tcanvas: canvas,\n\t\ttouchToMouse: gopt.touchToMouse,\n\t\tgamepads: gopt.gamepads,\n\t\tpixelDensity: gopt.pixelDensity,\n\t\tmaxFPS: gopt.maxFPS,\n\t})\n\n\tconst gc: Array<() => void> = []\n\n\tconst gl = app.canvas()\n\t\t.getContext(\"webgl\", {\n\t\t\tantialias: true,\n\t\t\tdepth: true,\n\t\t\tstencil: true,\n\t\t\talpha: true,\n\t\t\tpreserveDrawingBuffer: true,\n\t\t})\n\n\tfunction genBindFunc<T>(func: (ty: GLenum, item: T) => void) {\n\t\tconst bindings = {}\n\t\treturn {\n\t\t\tcur: (ty: GLenum) => {\n\t\t\t\tconst stack = bindings[ty] ?? []\n\t\t\t\treturn stack[stack.length - 1]\n\t\t\t},\n\t\t\tpush: (ty: GLenum, item: T) => {\n\t\t\t\tif (!bindings[ty]) bindings[ty] = []\n\t\t\t\tconst stack = bindings[ty]\n\t\t\t\tstack.push(item)\n\t\t\t\tfunc(ty, item)\n\t\t\t},\n\t\t\tpop: (ty: GLenum) => {\n\t\t\t\tconst stack = bindings[ty]\n\t\t\t\tif (!stack) throw new Error(`Unknown WebGL type: ${ty}`)\n\t\t\t\tif (stack.length <= 0) throw new Error(\"Can't unbind texture when there's no texture bound\")\n\t\t\t\tstack.pop()\n\t\t\t\tfunc(ty, stack[stack.length - 1] ?? null)\n\t\t\t},\n\t\t}\n\t}\n\n\tconst glTextureBinder = genBindFunc(gl.bindTexture.bind(gl))\n\tconst glFramebufferBinder = genBindFunc(gl.bindFramebuffer.bind(gl))\n\tconst glRenderbufferBinder = genBindFunc(gl.bindRenderbuffer.bind(gl))\n\n\tclass Texture {\n\n\t\tsrc: null | ImageSource = null\n\t\tglTex: WebGLTexture\n\t\twidth: number\n\t\theight: number\n\n\t\tconstructor(w: number, h: number, opt: TextureOpt = {}) {\n\n\t\t\tthis.glTex = gl.createTexture()\n\t\t\tgc.push(() => this.free())\n\t\t\tthis.bind()\n\n\t\t\tif (w && h) {\n\t\t\t\tgl.texImage2D(\n\t\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t\t0, gl.RGBA,\n\t\t\t\t\tw,\n\t\t\t\t\th,\n\t\t\t\t\t0,\n\t\t\t\t\tgl.RGBA,\n\t\t\t\t\tgl.UNSIGNED_BYTE,\n\t\t\t\t\tnull,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tthis.width = w\n\t\t\tthis.height = h\n\n\t\t\tconst filter = (() => {\n\t\t\t\tswitch (opt.filter ?? gopt.texFilter) {\n\t\t\t\t\tcase \"linear\": return gl.LINEAR\n\t\t\t\t\tcase \"nearest\": return gl.NEAREST\n\t\t\t\t\tdefault: return gl.NEAREST\n\t\t\t\t}\n\t\t\t})()\n\n\t\t\tconst wrap = (() => {\n\t\t\t\tswitch (opt.wrap) {\n\t\t\t\t\tcase \"repeat\": return gl.REPEAT\n\t\t\t\t\tcase \"clampToEdge\": return gl.CLAMP_TO_EDGE\n\t\t\t\t\tdefault: return gl.CLAMP_TO_EDGE\n\t\t\t\t}\n\t\t\t})()\n\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter)\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter)\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap)\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap)\n\t\t\tthis.unbind()\n\n\t\t}\n\n\t\tstatic fromImage(img: ImageSource, opt: TextureOpt = {}): Texture {\n\t\t\tconst tex = new Texture(0, 0, opt)\n\t\t\ttex.bind()\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, img)\n\t\t\ttex.width = img.width\n\t\t\ttex.height = img.height\n\t\t\ttex.unbind()\n\t\t\ttex.src = img\n\t\t\treturn tex\n\t\t}\n\n\t\tupdate(img: ImageSource, x = 0, y = 0) {\n\t\t\tthis.bind()\n\t\t\tgl.texSubImage2D(gl.TEXTURE_2D, 0, x, y, gl.RGBA, gl.UNSIGNED_BYTE, img)\n\t\t\tthis.unbind()\n\t\t}\n\n\t\tbind() {\n\t\t\tglTextureBinder.push(gl.TEXTURE_2D, this.glTex)\n\t\t}\n\n\t\tunbind() {\n\t\t\tglTextureBinder.pop(gl.TEXTURE_2D)\n\t\t}\n\n\t\tfree() {\n\t\t\tgl.deleteTexture(this.glTex)\n\t\t}\n\n\t}\n\n\tclass KaboomError extends Error {\n\t\tconstructor(msg) {\n\t\t\tsuper(msg)\n\t\t\tthis.name = \"KaboomError\"\n\t\t}\n\t}\n\n\tclass TexPacker {\n\t\tprivate tex: Texture\n\t\tprivate canvas: HTMLCanvasElement\n\t\tprivate ctx: CanvasRenderingContext2D\n\t\tprivate x: number = 0\n\t\tprivate y: number = 0\n\t\tprivate curHeight: number = 0\n\t\tconstructor(w: number, h: number) {\n\t\t\tthis.canvas = document.createElement(\"canvas\")\n\t\t\tthis.canvas.width = w\n\t\t\tthis.canvas.height = h\n\t\t\tthis.tex = Texture.fromImage(this.canvas)\n\t\t\tthis.ctx = this.canvas.getContext(\"2d\")\n\t\t}\n\t\tadd(img: ImageSource): [Texture, Quad] {\n\t\t\tif (img.width > this.canvas.width || img.height > this.canvas.height) {\n\t\t\t\tthrow new KaboomError(`Texture size (${img.width} x ${img.height}) exceeds limit (${this.canvas.width} x ${this.canvas.height})`)\n\t\t\t}\n\t\t\tif (this.x + img.width > this.canvas.width) {\n\t\t\t\tthis.x = 0\n\t\t\t\tthis.y += this.curHeight\n\t\t\t\tthis.curHeight = 0\n\t\t\t}\n\t\t\tif (this.y + img.height > this.canvas.height) {\n\t\t\t\tthis.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n\t\t\t\tthis.tex = Texture.fromImage(this.canvas)\n\t\t\t\tthis.x = 0\n\t\t\t\tthis.y = 0\n\t\t\t\tthis.curHeight = 0\n\t\t\t}\n\t\t\tconst pos = new Vec2(this.x, this.y)\n\t\t\tthis.x += img.width\n\t\t\tif (img.height > this.curHeight) {\n\t\t\t\tthis.curHeight = img.height\n\t\t\t}\n\t\t\tif (img instanceof ImageData) {\n\t\t\t\tthis.ctx.putImageData(img, pos.x, pos.y)\n\t\t\t} else {\n\t\t\t\tthis.ctx.drawImage(img, pos.x, pos.y)\n\t\t\t}\n\t\t\tthis.tex.update(this.canvas)\n\t\t\treturn [this.tex, new Quad(\n\t\t\t\tpos.x / this.canvas.width,\n\t\t\t\tpos.y / this.canvas.height,\n\t\t\t\timg.width / this.canvas.width,\n\t\t\t\timg.height / this.canvas.height,\n\t\t\t)]\n\t\t}\n\t}\n\n\tclass FrameBuffer {\n\n\t\ttex: Texture\n\t\tglFramebuffer: WebGLFramebuffer\n\t\tglRenderbuffer: WebGLRenderbuffer\n\n\t\tconstructor(w: number, h: number, opt: TextureOpt = {}) {\n\t\t\tthis.tex = new Texture(w, h, opt)\n\t\t\tthis.glFramebuffer = gl.createFramebuffer()\n\t\t\tthis.glRenderbuffer = gl.createRenderbuffer()\n\t\t\tgc.push(() => this.free())\n\t\t\tthis.bind()\n\t\t\tgl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, w, h)\n\t\t\tgl.framebufferTexture2D(\n\t\t\t\tgl.FRAMEBUFFER,\n\t\t\t\tgl.COLOR_ATTACHMENT0,\n\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\tthis.tex.glTex,\n\t\t\t\t0,\n\t\t\t)\n\t\t\tgl.framebufferRenderbuffer(\n\t\t\t\tgl.FRAMEBUFFER,\n\t\t\t\tgl.DEPTH_STENCIL_ATTACHMENT,\n\t\t\t\tgl.RENDERBUFFER,\n\t\t\t\tthis.glRenderbuffer,\n\t\t\t)\n\t\t\tthis.unbind()\n\t\t}\n\n\t\tget width() {\n\t\t\treturn this.tex.width\n\t\t}\n\n\t\tget height() {\n\t\t\treturn this.tex.height\n\t\t}\n\n\t\ttoImageData() {\n\t\t\tconst data = new Uint8ClampedArray(this.width * this.height * 4)\n\t\t\tthis.bind()\n\t\t\tgl.readPixels(0, 0, this.width, this.height, gl.RGBA, gl.UNSIGNED_BYTE, data)\n\t\t\tthis.unbind()\n\t\t\t// flip vertically\n\t\t\tconst bytesPerRow = this.width * 4\n\t\t\tconst temp = new Uint8Array(bytesPerRow)\n\t\t\tfor (let y = 0; y < (this.height / 2 | 0); y++) {\n\t\t\t\tconst topOffset = y * bytesPerRow\n\t\t\t\tconst bottomOffset = (this.height - y - 1) * bytesPerRow\n\t\t\t\ttemp.set(data.subarray(topOffset, topOffset + bytesPerRow))\n\t\t\t\tdata.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow)\n\t\t\t\tdata.set(temp, bottomOffset)\n\t\t\t}\n\t\t\treturn new ImageData(data, this.width, this.height)\n\t\t}\n\n\t\ttoDataURL() {\n\t\t\tconst canvas = document.createElement(\"canvas\")\n\t\t\tconst ctx = canvas.getContext(\"2d\")\n\t\t\tcanvas.width = this.width\n\t\t\tcanvas.height = this.height\n\t\t\tctx.putImageData(this.toImageData(), 0, 0)\n\t\t\treturn canvas.toDataURL()\n\t\t}\n\n\t\tbind() {\n\t\t\tglFramebufferBinder.push(gl.FRAMEBUFFER, this.glFramebuffer)\n\t\t\tglRenderbufferBinder.push(gl.RENDERBUFFER, this.glRenderbuffer)\n\t\t}\n\n\t\tunbind() {\n\t\t\tglFramebufferBinder.pop(gl.FRAMEBUFFER)\n\t\t\tglRenderbufferBinder.pop(gl.RENDERBUFFER)\n\t\t}\n\n\t\tfree() {\n\t\t\tgl.deleteFramebuffer(this.glFramebuffer)\n\t\t\tgl.deleteRenderbuffer(this.glRenderbuffer)\n\t\t\tthis.tex.free()\n\t\t}\n\n\t}\n\n\tconst gfx = (() => {\n\n\t\tconst defShader = makeShader(DEF_VERT, DEF_FRAG)\n\n\t\t// a 1x1 white texture to draw raw shapes like rectangles and polygons\n\t\t// we use a texture for those so we can use only 1 pipeline for drawing sprites + shapes\n\t\tconst emptyTex = Texture.fromImage(\n\t\t\tnew ImageData(new Uint8ClampedArray([ 255, 255, 255, 255 ]), 1, 1),\n\t\t)\n\n\t\tconst frameBuffer = (gopt.width && gopt.height)\n\t\t\t? new FrameBuffer(gopt.width * pixelDensity * gscale, gopt.height * pixelDensity * gscale)\n\t\t\t: new FrameBuffer(gl.drawingBufferWidth, gl.drawingBufferHeight)\n\n\t\tlet bgColor: null | Color = null\n\t\tlet bgAlpha = 1\n\n\t\tif (gopt.background) {\n\t\t\tbgColor = Color.fromArray(gopt.background)\n\t\t\tbgAlpha = gopt.background[3] ?? 1\n\t\t\tgl.clearColor(\n\t\t\t\tbgColor.r / 255,\n\t\t\t\tbgColor.g / 255,\n\t\t\t\tbgColor.b / 255,\n\t\t\t\tbgAlpha,\n\t\t\t)\n\t\t}\n\n\t\tgl.enable(gl.BLEND)\n\t\tgl.blendFuncSeparate(\n\t\t\tgl.SRC_ALPHA,\n\t\t\tgl.ONE_MINUS_SRC_ALPHA,\n\t\t\tgl.ONE,\n\t\t\tgl.ONE_MINUS_SRC_ALPHA,\n\t\t)\n\n\t\t// we only use one vertex and index buffer that batches all draw calls\n\t\tconst vbuf = gl.createBuffer()\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vbuf)\n\t\tgl.bufferData(gl.ARRAY_BUFFER, MAX_BATCHED_VERTS * 4, gl.DYNAMIC_DRAW)\n\n\t\tVERTEX_FORMAT.reduce((offset, f, i) => {\n\t\t\tgl.vertexAttribPointer(i, f.size, gl.FLOAT, false, STRIDE * 4, offset)\n\t\t\tgl.enableVertexAttribArray(i)\n\t\t\treturn offset + f.size * 4\n\t\t}, 0)\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null)\n\n\t\tconst ibuf = gl.createBuffer()\n\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibuf)\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, MAX_BATCHED_INDICES * 4, gl.DYNAMIC_DRAW)\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n\n\t\t// a checkerboard texture used for the default background\n\t\tconst bgTex = Texture.fromImage(\n\t\t\tnew ImageData(new Uint8ClampedArray([\n\t\t\t\t128, 128, 128, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t128, 128, 128, 255,\n\t\t\t]), 2, 2), {\n\t\t\t\twrap: \"repeat\",\n\t\t\t\tfilter: \"nearest\",\n\t\t\t},\n\t\t)\n\n\t\treturn {\n\n\t\t\t// keep track of how many draw calls we're doing this frame\n\t\t\tdrawCalls: 0,\n\t\t\t// how many draw calls we're doing last frame, this is the number we give to users\n\t\t\tlastDrawCalls: 0,\n\n\t\t\t// gfx states\n\t\t\tdefShader: defShader,\n\t\t\tcurShader: defShader,\n\t\t\tframeBuffer: frameBuffer,\n\t\t\tpostShader: null,\n\t\t\tpostShaderUniform: null,\n\t\t\tdefTex: emptyTex,\n\t\t\tcurTex: emptyTex,\n\t\t\tcurUniform: {},\n\t\t\tvbuf: vbuf,\n\t\t\tibuf: ibuf,\n\n\t\t\t// local vertex / index buffer queue\n\t\t\tvqueue: [],\n\t\t\tiqueue: [],\n\n\t\t\ttransform: new Mat4(),\n\t\t\ttransformStack: [],\n\n\t\t\tbgTex: bgTex,\n\t\t\tbgColor: bgColor,\n\t\t\tbgAlpha: bgAlpha,\n\n\t\t\twidth: gopt.width ?? gl.drawingBufferWidth / pixelDensity / gscale,\n\t\t\theight: gopt.height ?? gl.drawingBufferHeight / pixelDensity / gscale,\n\n\t\t\tviewport: {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\twidth: gl.drawingBufferWidth,\n\t\t\t\theight: gl.drawingBufferHeight,\n\t\t\t},\n\n\t\t\tfixed: false,\n\n\t\t}\n\n\t})()\n\n\tclass SpriteData {\n\n\t\ttex: Texture\n\t\tframes: Quad[] = [ new Quad(0, 0, 1, 1) ]\n\t\tanims: SpriteAnims = {}\n\t\tslice9: NineSlice | null = null\n\n\t\tconstructor(\n\t\t\ttex: Texture,\n\t\t\tframes?: Quad[],\n\t\t\tanims: SpriteAnims = {},\n\t\t\tslice9: NineSlice = null,\n\t\t) {\n\t\t\tthis.tex = tex\n\t\t\tif (frames) this.frames = frames\n\t\t\tthis.anims = anims\n\t\t\tthis.slice9 = slice9\n\t\t}\n\n\t\tget width() {\n\t\t\treturn this.tex.width * this.frames[0].w\n\t\t}\n\n\t\tget height() {\n\t\t\treturn this.tex.height * this.frames[0].h\n\t\t}\n\n\t\tstatic from(src: LoadSpriteSrc, opt: LoadSpriteOpt = {}): Promise<SpriteData> {\n\t\t\treturn typeof src === \"string\"\n\t\t\t\t? SpriteData.fromURL(src, opt)\n\t\t\t\t: Promise.resolve(SpriteData.fromImage(src, opt))\n\t\t}\n\n\t\tstatic fromImage(data: ImageSource, opt: LoadSpriteOpt = {}): SpriteData {\n\t\t\tconst [tex, quad] = assets.packer.add(data)\n\t\t\tconst frames = opt.frames ? opt.frames.map((f) => new Quad(\n\t\t\t\tquad.x + f.x * quad.w,\n\t\t\t\tquad.y + f.y * quad.h,\n\t\t\t\tf.w * quad.w,\n\t\t\t\tf.h * quad.h,\n\t\t\t)) : slice(opt.sliceX || 1, opt.sliceY || 1, quad.x, quad.y, quad.w, quad.h)\n\t\t\treturn new SpriteData(tex, frames, opt.anims, opt.slice9)\n\t\t}\n\n\t\tstatic fromURL(url: string, opt: LoadSpriteOpt = {}): Promise<SpriteData> {\n\t\t\treturn loadImg(url).then((img) => SpriteData.fromImage(img, opt))\n\t\t}\n\n\t}\n\n\tclass SoundData {\n\n\t\tbuf: AudioBuffer\n\n\t\tconstructor(buf: AudioBuffer) {\n\t\t\tthis.buf = buf\n\t\t}\n\n\t\tstatic fromArrayBuffer(buf: ArrayBuffer): Promise<SoundData> {\n\t\t\treturn new Promise((resolve, reject) =>\n\t\t\t\taudio.ctx.decodeAudioData(buf, resolve, reject),\n\t\t\t).then((buf: AudioBuffer) => new SoundData(buf))\n\t\t}\n\n\t\tstatic fromURL(url: string): Promise<SoundData> {\n\t\t\tif (isDataURL(url)) {\n\t\t\t\treturn SoundData.fromArrayBuffer(dataURLToArrayBuffer(url))\n\t\t\t} else {\n\t\t\t\treturn fetchArrayBuffer(url).then((buf) => SoundData.fromArrayBuffer(buf))\n\t\t\t}\n\t\t}\n\n\t}\n\n\tconst audio = (() => {\n\n\t\tconst ctx = new (\n\t\t\twindow.AudioContext || (window as any).webkitAudioContext\n\t\t)() as AudioContext\n\n\t\tconst masterNode = ctx.createGain()\n\t\tmasterNode.connect(ctx.destination)\n\n\t\t// by default browsers can only load audio async, we don't deal with that and just start with an empty audio buffer\n\t\tconst burpSnd = new SoundData(createEmptyAudioBuffer(ctx))\n\n\t\t// load that burp sound\n\t\tctx.decodeAudioData(burpSoundSrc.buffer.slice(0)).then((buf) => {\n\t\t\tburpSnd.buf = buf\n\t\t}).catch((err) => {\n\t\t\tconsole.error(\"Failed to load burp: \", err)\n\t\t})\n\n\t\treturn {\n\t\t\tctx,\n\t\t\tmasterNode,\n\t\t\tburpSnd,\n\t\t}\n\n\t})()\n\n\tclass Asset<D> {\n\t\tloaded: boolean = false\n\t\tdata: D | null = null\n\t\terror: Error | null = null\n\t\tprivate onLoadEvents: Event<[D]> = new Event()\n\t\tprivate onErrorEvents: Event<[Error]> = new Event()\n\t\tprivate onFinishEvents: Event<[]> = new Event()\n\t\tconstructor(loader: Promise<D>) {\n\t\t\tloader.then((data) => {\n\t\t\t\tthis.data = data\n\t\t\t\tthis.onLoadEvents.trigger(data)\n\t\t\t}).catch((err) => {\n\t\t\t\tthis.error = err\n\t\t\t\tif (this.onErrorEvents.numListeners() > 0) {\n\t\t\t\t\tthis.onErrorEvents.trigger(err)\n\t\t\t\t} else {\n\t\t\t\t\tthrow err\n\t\t\t\t}\n\t\t\t}).finally(() => {\n\t\t\t\tthis.onFinishEvents.trigger()\n\t\t\t\tthis.loaded = true\n\t\t\t})\n\t\t}\n\t\tstatic loaded<D>(data: D): Asset<D> {\n\t\t\tconst asset = new Asset(Promise.resolve(data)) as Asset<D>\n\t\t\tasset.data = data\n\t\t\tasset.loaded = true\n\t\t\treturn asset\n\t\t}\n\t\tonLoad(action: (data: D) => void) {\n\t\t\tif (this.loaded && this.data) {\n\t\t\t\taction(this.data)\n\t\t\t} else {\n\t\t\t\tthis.onLoadEvents.add(action)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\t\tonError(action: (err: Error) => void) {\n\t\t\tif (this.loaded && this.error) {\n\t\t\t\taction(this.error)\n\t\t\t} else {\n\t\t\t\tthis.onErrorEvents.add(action)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\t\tonFinish(action: () => void) {\n\t\t\tif (this.loaded) {\n\t\t\t\taction()\n\t\t\t} else {\n\t\t\t\tthis.onFinishEvents.add(action)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\t\tthen(action: (data: D) => void): Asset<D> {\n\t\t\treturn this.onLoad(action)\n\t\t}\n\t\tcatch(action: (err: Error) => void): Asset<D> {\n\t\t\treturn this.onError(action)\n\t\t}\n\t\tfinally(action: () => void): Asset<D> {\n\t\t\treturn this.onFinish(action)\n\t\t}\n\t}\n\n\tclass AssetBucket<D> {\n\t\tassets: Map<string, Asset<D>> = new Map()\n\t\tlastUID: number = 0\n\t\tadd(name: string | null, loader: Promise<D>): Asset<D> {\n\t\t\t// if user don't provide a name we use a generated one\n\t\t\tconst id = name ?? (this.lastUID++ + \"\")\n\t\t\tconst asset = new Asset(loader)\n\t\t\tthis.assets.set(id, asset)\n\t\t\treturn asset\n\t\t}\n\t\taddLoaded(name: string | null, data: D): Asset<D> {\n\t\t\tconst id = name ?? (this.lastUID++ + \"\")\n\t\t\tconst asset = Asset.loaded(data)\n\t\t\tthis.assets.set(id, asset)\n\t\t\treturn asset\n\t\t}\n\t\tget(handle: string): Asset<D> | void {\n\t\t\treturn this.assets.get(handle)\n\t\t}\n\t\tprogress(): number {\n\t\t\tif (this.assets.size === 0) {\n\t\t\t\treturn 1\n\t\t\t}\n\t\t\tlet loaded = 0\n\t\t\tthis.assets.forEach((asset) => {\n\t\t\t\tif (asset.loaded) {\n\t\t\t\t\tloaded++\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn loaded / this.assets.size\n\t\t}\n\t}\n\n\tconst assets = {\n\t\t// prefix for when loading from a url\n\t\turlPrefix: \"\",\n\t\t// asset holders\n\t\tsprites: new AssetBucket<SpriteData>(),\n\t\tfonts: new AssetBucket<FontData>(),\n\t\tbitmapFonts: new AssetBucket<BitmapFontData>(),\n\t\tsounds: new AssetBucket<SoundData>(),\n\t\tshaders: new AssetBucket<ShaderData>(),\n\t\tcustom: new AssetBucket<any>(),\n\t\tpacker: new TexPacker(SPRITE_ATLAS_WIDTH, SPRITE_ATLAS_HEIGHT),\n\t\t// if we finished initially loading all assets\n\t\tloaded: false,\n\t}\n\n\tconst game = {\n\n\t\t// general events\n\t\tevents: new EventHandler<{\n\t\t\tmouseMove: [],\n\t\t\tmouseDown: [MouseButton],\n\t\t\tmousePress: [MouseButton],\n\t\t\tmouseRelease: [MouseButton],\n\t\t\tcharInput: [string],\n\t\t\tkeyPress: [Key],\n\t\t\tkeyDown: [Key],\n\t\t\tkeyPressRepeat: [Key],\n\t\t\tkeyRelease: [Key],\n\t\t\ttouchStart: [Vec2, Touch],\n\t\t\ttouchMove: [Vec2, Touch],\n\t\t\ttouchEnd: [Vec2, Touch],\n\t\t\tgamepadButtonDown: [string],\n\t\t\tgamepadButtonPress: [string],\n\t\t\tgamepadButtonRelease: [string],\n\t\t\tgamepadStick: [string, Vec2],\n\t\t\tgamepadConnect: [Gamepad],\n\t\t\tgamepadDisconnect: [Gamepad],\n\t\t\tscroll: [Vec2],\n\t\t\tadd: [GameObj],\n\t\t\tdestroy: [GameObj],\n\t\t\tload: [],\n\t\t\tloading: [number],\n\t\t\terror: [Error],\n\t\t\tinput: [],\n\t\t\tframeEnd: [],\n\t\t\tresize: [],\n\t\t\tsceneLeave: [string],\n\t\t}>(),\n\n\t\t// object events\n\t\tobjEvents: new EventHandler(),\n\n\t\t// root game object\n\t\troot: make([]),\n\n\t\t// misc\n\t\tgravity: 0,\n\t\tscenes: {},\n\n\t\t// on screen log\n\t\tlogs: [],\n\n\t\t// camera\n\t\tcam: {\n\t\t\tpos: null,\n\t\t\tscale: new Vec2(1),\n\t\t\tangle: 0,\n\t\t\tshake: 0,\n\t\t\ttransform: new Mat4(),\n\t\t},\n\n\t}\n\n\t// TODO: accept Asset<T>?\n\t// wrap individual loaders with global loader counter, for stuff like progress bar\n\tfunction load<T>(prom: Promise<T>): Asset<T> {\n\t\treturn assets.custom.add(null, prom)\n\t}\n\n\t// get current load progress\n\tfunction loadProgress(): number {\n\t\tconst buckets = [\n\t\t\tassets.sprites,\n\t\t\tassets.sounds,\n\t\t\tassets.shaders,\n\t\t\tassets.fonts,\n\t\t\tassets.bitmapFonts,\n\t\t\tassets.custom,\n\t\t]\n\t\treturn buckets.reduce((n, bucket) => n + bucket.progress(), 0) / buckets.length\n\t}\n\n\t// global load path prefix\n\tfunction loadRoot(path?: string): string {\n\t\tif (path !== undefined) {\n\t\t\tassets.urlPrefix = path\n\t\t}\n\t\treturn assets.urlPrefix\n\t}\n\n\t// wrapper around fetch() that applies urlPrefix and basic error handling\n\tfunction fetchURL(path: string) {\n\t\tconst url = assets.urlPrefix + path\n\t\treturn fetch(url)\n\t\t\t.then((res) => {\n\t\t\t\tif (!res.ok) throw new KaboomError(`Failed to fetch \"${url}\"`)\n\t\t\t\treturn res\n\t\t\t})\n\t}\n\n\tfunction fetchJSON(path: string) {\n\t\treturn fetchURL(path).then((res) => res.json())\n\t}\n\n\tfunction fetchText(path: string) {\n\t\treturn fetchURL(path).then((res) => res.text())\n\t}\n\n\tfunction fetchArrayBuffer(path: string) {\n\t\treturn fetchURL(path).then((res) => res.arrayBuffer())\n\t}\n\n\t// wrapper around image loader to get a Promise\n\tfunction loadImg(src: string): Promise<HTMLImageElement> {\n\t\tconst img = new Image()\n\t\timg.crossOrigin = \"anonymous\"\n\t\timg.src = isDataURL(src) ? src : assets.urlPrefix + src\n\t\treturn new Promise<HTMLImageElement>((resolve, reject) => {\n\t\t\timg.onload = () => resolve(img)\n\t\t\timg.onerror = () => reject(new KaboomError(`Failed to load image from \"${src}\"`))\n\t\t})\n\t}\n\n\tfunction loadJSON(name, url) {\n\t\treturn assets.custom.add(name, fetchJSON(url))\n\t}\n\n\tclass FontData {\n\t\tfontface: FontFace\n\t\tfilter: TexFilter = DEF_FONT_FILTER\n\t\toutline: Outline | null = null\n\t\tconstructor(face: FontFace, opt: LoadFontOpt = {}) {\n\t\t\tthis.fontface = face\n\t\t\tthis.filter = opt.filter ?? DEF_FONT_FILTER\n\t\t\tif (opt.outline) {\n\t\t\t\tthis.outline = {\n\t\t\t\t\twidth: 1,\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t}\n\t\t\t\tif (typeof opt.outline === \"number\") {\n\t\t\t\t\tthis.outline.width = opt.outline\n\t\t\t\t} else if (typeof opt.outline === \"object\") {\n\t\t\t\t\tif (opt.outline.width) this.outline.width = opt.outline.width\n\t\t\t\t\tif (opt.outline.color) this.outline.color = opt.outline.color\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// TODO: pass in null src to store opt for default fonts like \"monospace\"\n\tfunction loadFont(\n\t\tname: string,\n\t\tsrc: string | BinaryData,\n\t\topt: LoadFontOpt = {},\n\t): Asset<FontData> {\n\t\tconst font = new FontFace(name, typeof src === \"string\" ? `url(${src})` : src)\n\t\tdocument.fonts.add(font)\n\t\treturn assets.fonts.add(name, font.load().catch((err) => {\n\t\t\tthrow new KaboomError(`Failed to load font from \"${src}\": ${err}`)\n\t\t}).then((face) => new FontData(face, opt)))\n\t}\n\n\t// TODO: support outline\n\t// TODO: support LoadSpriteSrc\n\tfunction loadBitmapFont(\n\t\tname: string | null,\n\t\tsrc: string,\n\t\tgw: number,\n\t\tgh: number,\n\t\topt: LoadBitmapFontOpt = {},\n\t): Asset<BitmapFontData> {\n\t\treturn assets.bitmapFonts.add(name, loadImg(src)\n\t\t\t.then((img) => {\n\t\t\t\treturn makeFont(\n\t\t\t\t\tTexture.fromImage(img, opt),\n\t\t\t\t\tgw,\n\t\t\t\t\tgh,\n\t\t\t\t\topt.chars ?? ASCII_CHARS,\n\t\t\t\t)\n\t\t\t}),\n\t\t)\n\t}\n\n\t// get an array of frames based on configuration on how to slice the image\n\tfunction slice(x = 1, y = 1, dx = 0, dy = 0, w = 1, h = 1): Quad[] {\n\t\tconst frames = []\n\t\tconst qw = w / x\n\t\tconst qh = h / y\n\t\tfor (let j = 0; j < y; j++) {\n\t\t\tfor (let i = 0; i < x; i++) {\n\t\t\t\tframes.push(new Quad(\n\t\t\t\t\tdx + i * qw,\n\t\t\t\t\tdy + j * qh,\n\t\t\t\t\tqw,\n\t\t\t\t\tqh,\n\t\t\t\t))\n\t\t\t}\n\t\t}\n\t\treturn frames\n\t}\n\n\t// TODO: load synchronously if passed ImageSource\n\tfunction loadSpriteAtlas(\n\t\tsrc: LoadSpriteSrc,\n\t\tdata: SpriteAtlasData | string,\n\t): Asset<Record<string, SpriteData>> {\n\t\tif (typeof data === \"string\") {\n\t\t\treturn load(new Promise((res, rej) => {\n\t\t\t\tfetchJSON(data).then((json) => {\n\t\t\t\t\tloadSpriteAtlas(src, json).then(res).catch(rej)\n\t\t\t\t})\n\t\t\t}))\n\t\t}\n\t\treturn load(SpriteData.from(src).then((atlas) => {\n\t\t\tconst map = {}\n\t\t\tfor (const name in data) {\n\t\t\t\tconst info = data[name]\n\t\t\t\tconst quad = atlas.frames[0]\n\t\t\t\tconst w = SPRITE_ATLAS_WIDTH * quad.w\n\t\t\t\tconst h = SPRITE_ATLAS_HEIGHT * quad.h\n\t\t\t\tconst frames = info.frames ? info.frames.map((f) => new Quad(\n\t\t\t\t\tquad.x + (info.x + f.x) / w * quad.w,\n\t\t\t\t\tquad.y + (info.y + f.y) / h * quad.h,\n\t\t\t\t\tf.w / w * quad.w,\n\t\t\t\t\tf.h / h * quad.h,\n\t\t\t\t)) : slice(\n\t\t\t\t\tinfo.sliceX || 1,\n\t\t\t\t\tinfo.sliceY || 1,\n\t\t\t\t\tquad.x + info.x / w * quad.w,\n\t\t\t\t\tquad.y + info.y / h * quad.h,\n\t\t\t\t\tinfo.width / w * quad.w,\n\t\t\t\t\tinfo.height / h * quad.h,\n\t\t\t\t)\n\t\t\t\tconst spr = new SpriteData(atlas.tex, frames, info.anims)\n\t\t\t\tassets.sprites.addLoaded(name, spr)\n\t\t\t\tmap[name] = spr\n\t\t\t}\n\t\t\treturn map\n\t\t}))\n\t}\n\n\tfunction createSpriteSheet(\n\t\timages: ImageSource[],\n\t\topt: LoadSpriteOpt = {},\n\t): SpriteData {\n\t\tconst canvas = document.createElement(\"canvas\")\n\t\tconst width = images[0].width\n\t\tconst height = images[0].height\n\t\tcanvas.width = width * images.length\n\t\tcanvas.height = height\n\t\tconst ctx = canvas.getContext(\"2d\")\n\t\timages.forEach((img, i) => {\n\t\t\tif (img instanceof ImageData) {\n\t\t\t\tctx.putImageData(img, i * width, 0)\n\t\t\t} else {\n\t\t\t\tctx.drawImage(img, i * width, 0)\n\t\t\t}\n\t\t})\n\t\tconst merged = ctx.getImageData(0, 0, images.length * width, height)\n\t\treturn SpriteData.fromImage(merged, {\n\t\t\t...opt,\n\t\t\tsliceX: images.length,\n\t\t\tsliceY: 1,\n\t\t})\n\t}\n\n\t// load a sprite to asset manager\n\tfunction loadSprite(\n\t\tname: string | null,\n\t\tsrc: LoadSpriteSrc | LoadSpriteSrc[],\n\t\topt: LoadSpriteOpt = {\n\t\t\tsliceX: 1,\n\t\t\tsliceY: 1,\n\t\t\tanims: {},\n\t\t},\n\t): Asset<SpriteData> {\n\t\tif (Array.isArray(src)) {\n\t\t\tif (src.some((s) => typeof s === \"string\")) {\n\t\t\t\treturn assets.sprites.add(\n\t\t\t\t\tname,\n\t\t\t\t\tPromise.all(src.map((s) => {\n\t\t\t\t\t\treturn typeof s === \"string\" ? loadImg(s) : Promise.resolve(s)\n\t\t\t\t\t})).then((images) => createSpriteSheet(images, opt)),\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\treturn assets.sprites.addLoaded(name, createSpriteSheet(src as ImageSource[], opt))\n\t\t\t}\n\t\t} else {\n\t\t\tif (typeof src === \"string\") {\n\t\t\t\treturn assets.sprites.add(name, SpriteData.from(src, opt))\n\t\t\t} else {\n\t\t\t\treturn assets.sprites.addLoaded(name, SpriteData.fromImage(src, opt))\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction loadPedit(name: string | null, src: string | PeditFile): Asset<SpriteData> {\n\n\t\t// eslint-disable-next-line\n\t\treturn assets.sprites.add(name, new Promise(async (resolve) => {\n\n\t\t\tconst data = typeof src === \"string\" ? await fetchJSON(src) : src\n\t\t\tconst images = await Promise.all(data.frames.map(loadImg))\n\t\t\tconst canvas = document.createElement(\"canvas\")\n\t\t\tcanvas.width = data.width\n\t\t\tcanvas.height = data.height * data.frames.length\n\n\t\t\tconst ctx = canvas.getContext(\"2d\")\n\n\t\t\timages.forEach((img: HTMLImageElement, i) => {\n\t\t\t\tctx.drawImage(img, 0, i * data.height)\n\t\t\t})\n\n\t\t\tconst spr = await loadSprite(null, canvas, {\n\t\t\t\tsliceY: data.frames.length,\n\t\t\t\tanims: data.anims,\n\t\t\t})\n\n\t\t\tresolve(spr)\n\n\t\t}))\n\n\t}\n\n\tfunction loadAseprite(\n\t\tname: string | null,\n\t\timgSrc: LoadSpriteSrc,\n\t\tjsonSrc: string,\n\t): Asset<SpriteData> {\n\t\tif (typeof imgSrc === \"string\" && !jsonSrc) {\n\t\t\tjsonSrc = imgSrc.replace(new RegExp(`${getExt(imgSrc)}$`), \"json\")\n\t\t}\n\t\tconst resolveJSON = typeof jsonSrc === \"string\"\n\t\t\t? fetchJSON(jsonSrc)\n\t\t\t: Promise.resolve(jsonSrc)\n\t\treturn assets.sprites.add(name, resolveJSON.then((data) => {\n\t\t\tconst size = data.meta.size\n\t\t\tconst frames = data.frames.map((f: any) => {\n\t\t\t\treturn new Quad(\n\t\t\t\t\tf.frame.x / size.w,\n\t\t\t\t\tf.frame.y / size.h,\n\t\t\t\t\tf.frame.w / size.w,\n\t\t\t\t\tf.frame.h / size.h,\n\t\t\t\t)\n\t\t\t})\n\t\t\tconst anims = {}\n\t\t\tfor (const anim of data.meta.frameTags) {\n\t\t\t\tif (anim.from === anim.to) {\n\t\t\t\t\tanims[anim.name] = anim.from\n\t\t\t\t} else {\n\t\t\t\t\tanims[anim.name] = {\n\t\t\t\t\t\tfrom: anim.from,\n\t\t\t\t\t\tto: anim.to,\n\t\t\t\t\t\tspeed: 10,\n\t\t\t\t\t\tloop: true,\n\t\t\t\t\t\tpingpong: anim.direction === \"pingpong\",\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn SpriteData.from(imgSrc, {\n\t\t\t\tframes: frames,\n\t\t\t\tanims: anims,\n\t\t\t})\n\t\t}))\n\t}\n\n\tfunction loadShader(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t) {\n\t\treturn assets.shaders.addLoaded(name, makeShader(vert, frag))\n\t}\n\n\tfunction loadShaderURL(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t): Asset<ShaderData> {\n\t\tconst resolveUrl = (url?: string) =>\n\t\t\turl\n\t\t\t\t? fetchText(url)\n\t\t\t\t: Promise.resolve(null)\n\t\tconst load = Promise.all([resolveUrl(vert), resolveUrl(frag)])\n\t\t\t.then(([vcode, fcode]: [string | null, string | null]) => {\n\t\t\t\treturn makeShader(vcode, fcode)\n\t\t\t})\n\t\treturn assets.shaders.add(name, load)\n\t}\n\n\t// TODO: allow stream big audio\n\t// load a sound to asset manager\n\tfunction loadSound(\n\t\tname: string | null,\n\t\tsrc: string | ArrayBuffer,\n\t): Asset<SoundData> {\n\t\treturn assets.sounds.add(\n\t\t\tname,\n\t\t\ttypeof src === \"string\"\n\t\t\t\t? SoundData.fromURL(src)\n\t\t\t\t: SoundData.fromArrayBuffer(src),\n\t\t)\n\t}\n\n\tfunction loadBean(name: string = \"bean\"): Asset<SpriteData> {\n\t\treturn loadSprite(name, beanSpriteSrc)\n\t}\n\n\tfunction getSprite(handle: string): Asset<SpriteData> | void {\n\t\treturn assets.sprites.get(handle)\n\t}\n\n\tfunction getSound(handle: string): Asset<SoundData> | void {\n\t\treturn assets.sounds.get(handle)\n\t}\n\n\tfunction getFont(handle: string): Asset<FontData> | void {\n\t\treturn assets.fonts.get(handle)\n\t}\n\n\tfunction getBitmapFont(handle: string): Asset<BitmapFontData> | void {\n\t\treturn assets.bitmapFonts.get(handle)\n\t}\n\n\tfunction getShader(handle: string): Asset<ShaderData> | void {\n\t\treturn assets.shaders.get(handle)\n\t}\n\n\tfunction getAsset(handle: string): Asset<any> | void {\n\t\treturn assets.custom.get(handle)\n\t}\n\n\tfunction resolveSprite(\n\t\tsrc: DrawSpriteOpt[\"sprite\"],\n\t): Asset<SpriteData> | null {\n\t\tif (typeof src === \"string\") {\n\t\t\tconst spr = getSprite(src)\n\t\t\tif (spr) {\n\t\t\t\t// if it's already loaded or being loading, return it\n\t\t\t\treturn spr\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\t// if there's any other ongoing loading task we return empty and don't error yet\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\t// if all other assets are loaded and we still haven't found this sprite, throw\n\t\t\t\tthrow new KaboomError(`Sprite not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof SpriteData) {\n\t\t\treturn Asset.loaded(src)\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src\n\t\t} else {\n\t\t\tthrow new KaboomError(`Invalid sprite: ${src}`)\n\t\t}\n\t}\n\n\tfunction resolveSound(\n\t\tsrc: Parameters<typeof play>[0],\n\t): Asset<SoundData> | null {\n\t\tif (typeof src === \"string\") {\n\t\t\tconst snd = getSound(src)\n\t\t\tif (snd) {\n\t\t\t\treturn snd\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow new KaboomError(`Sound not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof SoundData) {\n\t\t\treturn Asset.loaded(src)\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src\n\t\t} else {\n\t\t\tthrow new KaboomError(`Invalid sound: ${src}`)\n\t\t}\n\t}\n\n\tfunction resolveShader(\n\t\tsrc: RenderProps[\"shader\"],\n\t): ShaderData | Asset<ShaderData> | null {\n\t\tif (!src) {\n\t\t\treturn gfx.defShader\n\t\t}\n\t\tif (typeof src === \"string\") {\n\t\t\tconst shader = getShader(src)\n\t\t\tif (shader) {\n\t\t\t\treturn shader.data ?? shader\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow new KaboomError(`Shader not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src.data ? src.data : src\n\t\t}\n\t\t// TODO: check type\n\t\t// @ts-ignore\n\t\treturn src\n\t}\n\n\tfunction resolveFont(\n\t\tsrc: DrawTextOpt[\"font\"],\n\t):\n\t\t| FontData\n\t\t| Asset<FontData>\n\t\t| BitmapFontData\n\t\t| Asset<BitmapFontData>\n\t\t| string\n\t\t| void\n\t{\n\t\tif (!src) {\n\t\t\treturn resolveFont(gopt.font ?? DEF_FONT)\n\t\t}\n\t\tif (typeof src === \"string\") {\n\t\t\tconst bfont = getBitmapFont(src)\n\t\t\tconst font = getFont(src)\n\t\t\tif (bfont) {\n\t\t\t\treturn bfont.data ?? bfont\n\t\t\t} else if (font) {\n\t\t\t\treturn font.data ?? font\n\t\t\t} else if (document.fonts.check(`${DEF_TEXT_CACHE_SIZE}px ${src}`)) {\n\t\t\t\treturn src\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow new KaboomError(`Font not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src.data ? src.data : src\n\t\t}\n\t\t// TODO: check type\n\t\t// @ts-ignore\n\t\treturn src\n\t}\n\n\t// get / set master volume\n\tfunction volume(v?: number): number {\n\t\tif (v !== undefined) {\n\t\t\taudio.masterNode.gain.value = v\n\t\t}\n\t\treturn audio.masterNode.gain.value\n\t}\n\n\t// TODO: method to completely destory audio?\n\t// TODO: time() not correct when looped over or ended\n\t// TODO: onEnd() not working\n\t// plays a sound, returns a control handle\n\tfunction play(\n\t\tsrc: string | SoundData | Asset<SoundData>,\n\t\topt: AudioPlayOpt = {},\n\t): AudioPlay {\n\n\t\tconst ctx = audio.ctx\n\t\tlet paused = opt.paused ?? false\n\t\tlet srcNode = ctx.createBufferSource()\n\t\tconst onEndEvents = new Event()\n\t\tconst gainNode = ctx.createGain()\n\t\tconst pos = opt.seek ?? 0\n\t\tlet startTime = 0\n\t\tlet stopTime = 0\n\t\tlet started = false\n\n\t\tsrcNode.loop = Boolean(opt.loop)\n\t\tsrcNode.detune.value = opt.detune ?? 0\n\t\tsrcNode.playbackRate.value = opt.speed ?? 1\n\t\tsrcNode.connect(gainNode)\n\t\tsrcNode.onended = () => {\n\t\t\tif (getTime() >= srcNode.buffer?.duration ?? Number.POSITIVE_INFINITY) {\n\t\t\t\tonEndEvents.trigger()\n\t\t\t}\n\t\t}\n\t\tgainNode.connect(audio.masterNode)\n\t\tgainNode.gain.value = opt.volume ?? 1\n\n\t\tconst start = (data: SoundData) => {\n\t\t\tsrcNode.buffer = data.buf\n\t\t\tif (!paused) {\n\t\t\t\tstartTime = ctx.currentTime\n\t\t\t\tsrcNode.start(0, pos)\n\t\t\t\tstarted = true\n\t\t\t}\n\t\t}\n\n\t\tconst snd = resolveSound(src)\n\n\t\tif (snd instanceof Asset) {\n\t\t\tsnd.onLoad(start)\n\t\t}\n\n\t\tconst getTime = () => {\n\t\t\tif (!srcNode.buffer) return 0\n\t\t\tconst t = paused\n\t\t\t\t? stopTime - startTime\n\t\t\t\t: ctx.currentTime - startTime\n\t\t\tconst d = srcNode.buffer.duration\n\t\t\treturn srcNode.loop ? t % d : Math.min(t, d)\n\t\t}\n\n\t\tconst cloneNode = (oldNode: AudioBufferSourceNode) => {\n\t\t\tconst newNode = ctx.createBufferSource()\n\t\t\tnewNode.buffer = oldNode.buffer\n\t\t\tnewNode.loop = oldNode.loop\n\t\t\tnewNode.playbackRate.value = oldNode.playbackRate.value\n\t\t\tnewNode.detune.value = oldNode.detune.value\n\t\t\tnewNode.onended = oldNode.onended\n\t\t\tnewNode.connect(gainNode)\n\t\t\treturn newNode\n\t\t}\n\n\t\treturn {\n\n\t\t\tstop() {\n\t\t\t\tthis.paused = true\n\t\t\t\tthis.seek(0)\n\t\t\t},\n\n\t\t\tset paused(p: boolean) {\n\t\t\t\tif (paused === p) return\n\t\t\t\tpaused = p\n\t\t\t\tif (p) {\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsrcNode.stop()\n\t\t\t\t\t\tstarted = false\n\t\t\t\t\t}\n\t\t\t\t\tstopTime = ctx.currentTime\n\t\t\t\t} else {\n\t\t\t\t\tsrcNode = cloneNode(srcNode)\n\t\t\t\t\tconst pos = stopTime - startTime\n\t\t\t\t\tsrcNode.start(0, pos)\n\t\t\t\t\tstarted = true\n\t\t\t\t\tstartTime = ctx.currentTime - pos\n\t\t\t\t\tstopTime = 0\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tget paused() {\n\t\t\t\treturn paused\n\t\t\t},\n\n\t\t\tplay(time: number = 0) {\n\t\t\t\tthis.seek(time)\n\t\t\t\tthis.paused = false\n\t\t\t},\n\n\t\t\tseek(time: number) {\n\t\t\t\tif (!srcNode.buffer?.duration) return\n\t\t\t\tif (time > srcNode.buffer.duration) return\n\t\t\t\tif (paused) {\n\t\t\t\t\tsrcNode = cloneNode(srcNode)\n\t\t\t\t\tstartTime = stopTime - time\n\t\t\t\t} else {\n\t\t\t\t\tsrcNode.stop()\n\t\t\t\t\tsrcNode = cloneNode(srcNode)\n\t\t\t\t\tstartTime = ctx.currentTime - time\n\t\t\t\t\tsrcNode.start(0, time)\n\t\t\t\t\tstarted = true\n\t\t\t\t\tstopTime = 0\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// TODO: affect time()\n\t\t\tset speed(val: number) {\n\t\t\t\tsrcNode.playbackRate.value = val\n\t\t\t},\n\n\t\t\tget speed() {\n\t\t\t\treturn srcNode.playbackRate.value\n\t\t\t},\n\n\t\t\tset detune(val: number) {\n\t\t\t\tsrcNode.detune.value = val\n\t\t\t},\n\n\t\t\tget detune() {\n\t\t\t\treturn srcNode.detune.value\n\t\t\t},\n\n\t\t\tset volume(val: number) {\n\t\t\t\tgainNode.gain.value = Math.max(val, 0)\n\t\t\t},\n\n\t\t\tget volume() {\n\t\t\t\treturn gainNode.gain.value\n\t\t\t},\n\n\t\t\tset loop(l: boolean) {\n\t\t\t\tsrcNode.loop = l\n\t\t\t},\n\n\t\t\tget loop() {\n\t\t\t\treturn srcNode.loop\n\t\t\t},\n\n\t\t\tduration(): number {\n\t\t\t\treturn srcNode.buffer?.duration ?? 0\n\t\t\t},\n\n\t\t\ttime(): number {\n\t\t\t\treturn getTime() % this.duration()\n\t\t\t},\n\n\t\t\tonEnd(action: () => void) {\n\t\t\t\treturn onEndEvents.add(action)\n\t\t\t},\n\n\t\t\tthen(action: () => void) {\n\t\t\t\treturn this.onEnd(action)\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\t// core kaboom logic\n\tfunction burp(opt?: AudioPlayOpt): AudioPlay {\n\t\treturn play(audio.burpSnd, opt)\n\t}\n\n\ttype DrawTextureOpt = RenderProps & {\n\t\ttex: Texture,\n\t\twidth?: number,\n\t\theight?: number,\n\t\ttiled?: boolean,\n\t\tflipX?: boolean,\n\t\tflipY?: boolean,\n\t\tquad?: Quad,\n\t\tanchor?: Anchor | Vec2,\n\t}\n\n\tfunction makeShader(\n\t\tvertSrc: string | null = DEF_VERT,\n\t\tfragSrc: string | null = DEF_FRAG,\n\t): GfxShader {\n\n\t\tconst vcode = VERT_TEMPLATE.replace(\"{{user}}\", vertSrc ?? DEF_VERT)\n\t\tconst fcode = FRAG_TEMPLATE.replace(\"{{user}}\", fragSrc ?? DEF_FRAG)\n\t\tconst vertShader = gl.createShader(gl.VERTEX_SHADER)\n\t\tconst fragShader = gl.createShader(gl.FRAGMENT_SHADER)\n\n\t\tgl.shaderSource(vertShader, vcode)\n\t\tgl.shaderSource(fragShader, fcode)\n\t\tgl.compileShader(vertShader)\n\t\tgl.compileShader(fragShader)\n\n\t\tconst prog = gl.createProgram()\n\n\t\tgc.push(() => gl.deleteProgram(prog))\n\t\tgl.attachShader(prog, vertShader)\n\t\tgl.attachShader(prog, fragShader)\n\n\t\tgl.bindAttribLocation(prog, 0, \"a_pos\")\n\t\tgl.bindAttribLocation(prog, 1, \"a_uv\")\n\t\tgl.bindAttribLocation(prog, 2, \"a_color\")\n\n\t\tgl.linkProgram(prog)\n\n\t\tif (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n\n\t\t\tconst formatShaderError = (msg: string) => {\n\t\t\t\tconst FMT = /^ERROR:\\s0:(?<line>\\d+):\\s(?<msg>.+)/\n\t\t\t\tconst match = msg.match(FMT)\n\t\t\t\treturn {\n\t\t\t\t\tline: Number(match.groups.line),\n\t\t\t\t\t// seem to be a \\n\\0 at the end of error messages, causing unwanted line break\n\t\t\t\t\tmsg: match.groups.msg.replace(/\\n\\0$/, \"\"),\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst vertError = gl.getShaderInfoLog(vertShader)\n\t\t\tconst fragError = gl.getShaderInfoLog(fragShader)\n\t\t\tlet msg = \"\"\n\n\t\t\tif (vertError) {\n\t\t\t\tconst err = formatShaderError(vertError)\n\t\t\t\tmsg += `Vertex shader line ${err.line - 14}: ${err.msg}`\n\t\t\t}\n\n\t\t\tif (fragError) {\n\t\t\t\tconst err = formatShaderError(fragError)\n\t\t\t\tmsg += `Fragment shader line ${err.line - 14}: ${err.msg}`\n\t\t\t}\n\n\t\t\tthrow new KaboomError(msg)\n\n\t\t}\n\n\t\tgl.deleteShader(vertShader)\n\t\tgl.deleteShader(fragShader)\n\n\t\treturn {\n\n\t\t\tbind() {\n\t\t\t\tgl.useProgram(prog)\n\t\t\t},\n\n\t\t\tunbind() {\n\t\t\t\tgl.useProgram(null)\n\t\t\t},\n\n\t\t\tfree() {\n\t\t\t\tgl.deleteProgram(prog)\n\t\t\t},\n\n\t\t\t// TODO: support vec3 and vec4\n\t\t\tsend(uniform: Uniform) {\n\t\t\t\tfor (const name in uniform) {\n\t\t\t\t\tconst val = uniform[name]\n\t\t\t\t\tconst loc = gl.getUniformLocation(prog, name)\n\t\t\t\t\tif (typeof val === \"number\") {\n\t\t\t\t\t\tgl.uniform1f(loc, val)\n\t\t\t\t\t} else if (val instanceof Mat4) {\n\t\t\t\t\t\tgl.uniformMatrix4fv(loc, false, new Float32Array(val.m))\n\t\t\t\t\t} else if (val instanceof Color) {\n\t\t\t\t\t\t// TODO: opacity?\n\t\t\t\t\t\tgl.uniform3f(loc, val.r, val.g, val.b)\n\t\t\t\t\t} else if (val instanceof Vec2) {\n\t\t\t\t\t\tgl.uniform2f(loc, val.x, val.y)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction makeFont(\n\t\ttex: Texture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t): GfxFont {\n\n\t\tconst cols = tex.width / gw\n\t\tconst map: Record<string, Quad> = {}\n\t\tconst charMap = chars.split(\"\").entries()\n\n\t\tfor (const [i, ch] of charMap) {\n\t\t\tmap[ch] = new Quad(\n\t\t\t\t(i % cols) * gw,\n\t\t\t\tMath.floor(i / cols) * gh,\n\t\t\t\tgw,\n\t\t\t\tgh,\n\t\t\t)\n\t\t}\n\n\t\treturn {\n\t\t\ttex: tex,\n\t\t\tmap: map,\n\t\t\tsize: gh,\n\t\t}\n\n\t}\n\n\t// TODO: expose\n\tfunction drawRaw(\n\t\tverts: Vertex[],\n\t\tindices: number[],\n\t\tfixed: boolean,\n\t\ttex: Texture = gfx.defTex,\n\t\tshaderSrc: RenderProps[\"shader\"] = gfx.defShader,\n\t\tuniform: Uniform = {},\n\t) {\n\n\t\tconst shader = resolveShader(shaderSrc)\n\n\t\tif (!shader || shader instanceof Asset) {\n\t\t\treturn\n\t\t}\n\n\t\t// flush on texture / shader change and overflow\n\t\tif (\n\t\t\ttex !== gfx.curTex\n\t\t\t|| shader !== gfx.curShader\n\t\t\t|| !deepEq(gfx.curUniform, uniform)\n\t\t\t|| gfx.vqueue.length + verts.length * STRIDE > MAX_BATCHED_VERTS\n\t\t\t|| gfx.iqueue.length + indices.length > MAX_BATCHED_INDICES\n\t\t) {\n\t\t\tflush()\n\t\t}\n\n\t\tconst transform = (gfx.fixed || fixed)\n\t\t\t? gfx.transform\n\t\t\t: game.cam.transform.mult(gfx.transform)\n\n\t\tfor (const v of verts) {\n\t\t\t// normalized world space coordinate [-1.0 ~ 1.0]\n\t\t\tconst pt = screen2ndc(transform.multVec2(v.pos))\n\t\t\tgfx.vqueue.push(\n\t\t\t\tpt.x, pt.y,\n\t\t\t\tv.uv.x, v.uv.y,\n\t\t\t\tv.color.r / 255, v.color.g / 255, v.color.b / 255, v.opacity,\n\t\t\t)\n\t\t}\n\n\t\tfor (const i of indices) {\n\t\t\tgfx.iqueue.push(i + gfx.vqueue.length / STRIDE - verts.length)\n\t\t}\n\n\t\tgfx.curTex = tex\n\t\tgfx.curShader = shader\n\t\tgfx.curUniform = uniform\n\n\t}\n\n\t// draw all batched shapes\n\tfunction flush() {\n\n\t\tif (\n\t\t\t!gfx.curTex\n\t\t\t|| !gfx.curShader\n\t\t\t|| gfx.vqueue.length === 0\n\t\t\t|| gfx.iqueue.length === 0\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, gfx.vbuf)\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(gfx.vqueue))\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gfx.ibuf)\n\t\tgl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, new Uint16Array(gfx.iqueue))\n\t\tgfx.curShader.bind()\n\t\tgfx.curShader.send(gfx.curUniform)\n\t\tgfx.curTex.bind()\n\t\tgl.drawElements(gl.TRIANGLES, gfx.iqueue.length, gl.UNSIGNED_SHORT, 0)\n\t\tgfx.curTex.unbind()\n\t\tgfx.curShader.unbind()\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null)\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n\n\t\tgfx.vqueue.length = 0\n\t\tgfx.iqueue.length = 0\n\n\t\tgfx.drawCalls++\n\n\t}\n\n\t// start a rendering frame, reset some states\n\tfunction frameStart() {\n\n\t\t// clear backbuffer\n\t\tgl.clear(gl.COLOR_BUFFER_BIT)\n\t\tgfx.frameBuffer.bind()\n\t\tgl.viewport(0, 0, gfx.frameBuffer.width, gfx.frameBuffer.height)\n\t\t// clear framebuffer\n\t\tgl.clear(gl.COLOR_BUFFER_BIT)\n\n\t\tif (!gfx.bgColor) {\n\t\t\tdrawUnscaled(() => {\n\t\t\t\tdrawUVQuad({\n\t\t\t\t\twidth: width(),\n\t\t\t\t\theight: height(),\n\t\t\t\t\tquad: new Quad(\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\twidth() / BG_GRID_SIZE,\n\t\t\t\t\t\theight() / BG_GRID_SIZE,\n\t\t\t\t\t),\n\t\t\t\t\ttex: gfx.bgTex,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\tgfx.drawCalls = 0\n\t\tgfx.fixed = false\n\t\tgfx.transformStack.length = 0\n\t\tgfx.transform = new Mat4()\n\n\t}\n\n\tfunction usePostEffect(name: string, uniform?: Uniform | (() => Uniform)) {\n\t\tgfx.postShader = name\n\t\tgfx.postShaderUniform = uniform ?? null\n\t}\n\n\tfunction frameEnd() {\n\n\t\t// TODO: don't render debug UI with framebuffer\n\t\t// TODO: polish framebuffer rendering / sizing issues\n\t\tflush()\n\t\tgfx.lastDrawCalls = gfx.drawCalls\n\t\tgfx.frameBuffer.unbind()\n\t\tgl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight)\n\n\t\tconst ow = gfx.width\n\t\tconst oh = gfx.height\n\t\tgfx.width = gl.drawingBufferWidth / pixelDensity\n\t\tgfx.height = gl.drawingBufferHeight / pixelDensity\n\n\t\tdrawTexture({\n\t\t\tflipY: true,\n\t\t\ttex: gfx.frameBuffer.tex,\n\t\t\tpos: new Vec2(gfx.viewport.x, gfx.viewport.y),\n\t\t\twidth: gfx.viewport.width,\n\t\t\theight: gfx.viewport.height,\n\t\t\tshader: gfx.postShader,\n\t\t\tuniform: typeof gfx.postShaderUniform === \"function\"\n\t\t\t\t? gfx.postShaderUniform()\n\t\t\t\t: gfx.postShaderUniform,\n\t\t\tfixed: true,\n\t\t})\n\n\t\tflush()\n\t\tgfx.width = ow\n\t\tgfx.height = oh\n\n\t}\n\n\t// convert a screen space coordinate to webgl normalized device coordinate\n\tfunction screen2ndc(pt: Vec2): Vec2 {\n\t\treturn new Vec2(\n\t\t\tpt.x / width() * 2 - 1,\n\t\t\t-pt.y / height() * 2 + 1,\n\t\t)\n\t}\n\n\tfunction pushMatrix(m: Mat4) {\n\t\tgfx.transform = m.clone()\n\t}\n\n\tfunction pushTranslate(...args: Vec2Args) {\n\t\tif (args[0] === undefined) return\n\t\tconst p = vec2(...args)\n\t\tif (p.x === 0 && p.y === 0) return\n\t\tgfx.transform.translate(p)\n\t}\n\n\tfunction pushScale(...args: Vec2Args) {\n\t\tif (args[0] === undefined) return\n\t\tconst p = vec2(...args)\n\t\tif (p.x === 1 && p.y === 1) return\n\t\tgfx.transform.scale(p)\n\t}\n\n\tfunction pushRotate(a: number) {\n\t\tif (!a) return\n\t\tgfx.transform.rotate(a)\n\t}\n\n\tfunction pushTransform() {\n\t\tgfx.transformStack.push(gfx.transform.clone())\n\t}\n\n\tfunction popTransform() {\n\t\tif (gfx.transformStack.length > 0) {\n\t\t\tgfx.transform = gfx.transformStack.pop()\n\t\t}\n\t}\n\n\t// draw a uv textured quad\n\tfunction drawUVQuad(opt: DrawUVQuadOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new KaboomError(\"drawUVQuad() requires property \\\"width\\\" and \\\"height\\\".\")\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn\n\t\t}\n\n\t\tconst w = opt.width\n\t\tconst h = opt.height\n\t\tconst anchor = anchorPt(opt.anchor || DEF_ANCHOR)\n\t\tconst offset = anchor.scale(new Vec2(w, h).scale(-0.5))\n\t\tconst q = opt.quad || new Quad(0, 0, 1, 1)\n\t\tconst color = opt.color || rgb(255, 255, 255)\n\t\tconst opacity = opt.opacity ?? 1\n\n\t\t// apply uv padding to avoid artifacts\n\t\tconst uvPadX = opt.tex ? UV_PAD / opt.tex.width : 0\n\t\tconst uvPadY = opt.tex ? UV_PAD / opt.tex.height : 0\n\t\tconst qx = q.x + uvPadX\n\t\tconst qy = q.y + uvPadY\n\t\tconst qw = q.w - uvPadX * 2\n\t\tconst qh = q.h - uvPadY * 2\n\n\t\tpushTransform()\n\t\tpushTranslate(opt.pos)\n\t\tpushRotate(opt.angle)\n\t\tpushScale(opt.scale)\n\t\tpushTranslate(offset)\n\n\t\tdrawRaw([\n\t\t\t{\n\t\t\t\tpos: new Vec2(-w / 2, h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx + qw : qx, opt.flipY ? qy : qy + qh),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: new Vec2(-w / 2, -h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx + qw : qx, opt.flipY ? qy + qh : qy),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: new Vec2(w / 2, -h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx : qx + qw, opt.flipY ? qy + qh : qy),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: new Vec2(w / 2, h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx : qx + qw, opt.flipY ? qy : qy + qh),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t], [0, 1, 3, 1, 2, 3], opt.fixed, opt.tex, opt.shader, opt.uniform)\n\n\t\tpopTransform()\n\n\t}\n\n\t// TODO: clean\n\tfunction drawTexture(opt: DrawTextureOpt) {\n\n\t\tif (!opt.tex) {\n\t\t\tthrow new KaboomError(\"drawTexture() requires property \\\"tex\\\".\")\n\t\t}\n\n\t\tconst q = opt.quad ?? new Quad(0, 0, 1, 1)\n\t\tconst w = opt.tex.width * q.w\n\t\tconst h = opt.tex.height * q.h\n\t\tconst scale = new Vec2(1)\n\n\t\tif (opt.tiled) {\n\n\t\t\t// TODO: draw fract\n\t\t\tconst repX = Math.ceil((opt.width || w) / w)\n\t\t\tconst repY = Math.ceil((opt.height || h) / h)\n\t\t\tconst anchor = anchorPt(opt.anchor || DEF_ANCHOR).add(new Vec2(1, 1)).scale(0.5)\n\t\t\tconst offset = anchor.scale(repX * w, repY * h)\n\n\t\t\t// TODO: rotation\n\t\t\tfor (let i = 0; i < repX; i++) {\n\t\t\t\tfor (let j = 0; j < repY; j++) {\n\t\t\t\t\tdrawUVQuad(Object.assign({}, opt, {\n\t\t\t\t\t\tpos: (opt.pos || new Vec2(0)).add(new Vec2(w * i, h * j)).sub(offset),\n\t\t\t\t\t\tscale: scale.scale(opt.scale || new Vec2(1)),\n\t\t\t\t\t\ttex: opt.tex,\n\t\t\t\t\t\tquad: q,\n\t\t\t\t\t\twidth: w,\n\t\t\t\t\t\theight: h,\n\t\t\t\t\t\tanchor: \"topleft\",\n\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\n\t\t\t// TODO: should this ignore scale?\n\t\t\tif (opt.width && opt.height) {\n\t\t\t\tscale.x = opt.width / w\n\t\t\t\tscale.y = opt.height / h\n\t\t\t} else if (opt.width) {\n\t\t\t\tscale.x = opt.width / w\n\t\t\t\tscale.y = scale.x\n\t\t\t} else if (opt.height) {\n\t\t\t\tscale.y = opt.height / h\n\t\t\t\tscale.x = scale.y\n\t\t\t}\n\n\t\t\tdrawUVQuad(Object.assign({}, opt, {\n\t\t\t\tscale: scale.scale(opt.scale || new Vec2(1)),\n\t\t\t\ttex: opt.tex,\n\t\t\t\tquad: q,\n\t\t\t\twidth: w,\n\t\t\t\theight: h,\n\t\t\t}))\n\n\t\t}\n\n\t}\n\n\tfunction drawSprite(opt: DrawSpriteOpt) {\n\n\t\tif (!opt.sprite) {\n\t\t\tthrow new KaboomError(\"drawSprite() requires property \\\"sprite\\\"\")\n\t\t}\n\n\t\t// TODO: slow\n\t\tconst spr = resolveSprite(opt.sprite)\n\n\t\tif (!spr || !spr.data) {\n\t\t\treturn\n\t\t}\n\n\t\tconst q = spr.data.frames[opt.frame ?? 0]\n\n\t\tif (!q) {\n\t\t\tthrow new KaboomError(`Frame not found: ${opt.frame ?? 0}`)\n\t\t}\n\n\t\tdrawTexture(Object.assign({}, opt, {\n\t\t\ttex: spr.data.tex,\n\t\t\tquad: q.scale(opt.quad ?? new Quad(0, 0, 1, 1)),\n\t\t}))\n\n\t}\n\n\t// generate vertices to form an arc\n\tfunction getArcPts(\n\t\tpos: Vec2,\n\t\tradiusX: number,\n\t\tradiusY: number,\n\t\tstart: number,\n\t\tend: number,\n\t\tres: number = 1,\n\t): Vec2[] {\n\n\t\t// normalize and turn start and end angles to radians\n\t\tstart = deg2rad(start % 360)\n\t\tend = deg2rad(end % 360)\n\t\tif (end <= start) end += Math.PI * 2\n\n\t\tconst pts = []\n\t\tconst nverts = Math.ceil((end - start) / deg2rad(8) * res)\n\t\tconst step = (end - start) / nverts\n\n\t\t// calculate vertices\n\t\tfor (let a = start; a < end; a += step) {\n\t\t\tpts.push(pos.add(radiusX * Math.cos(a), radiusY * Math.sin(a)))\n\t\t}\n\n\t\tpts.push(pos.add(radiusX * Math.cos(end), radiusY * Math.sin(end)))\n\n\t\treturn pts\n\n\t}\n\n\tfunction drawRect(opt: DrawRectOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new KaboomError(\"drawRect() requires property \\\"width\\\" and \\\"height\\\".\")\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn\n\t\t}\n\n\t\tconst w = opt.width\n\t\tconst h = opt.height\n\t\tconst anchor = anchorPt(opt.anchor || DEF_ANCHOR).add(1, 1)\n\t\tconst offset = anchor.scale(new Vec2(w, h).scale(-0.5))\n\n\t\tlet pts = [\n\t\t\tnew Vec2(0, 0),\n\t\t\tnew Vec2(w, 0),\n\t\t\tnew Vec2(w, h),\n\t\t\tnew Vec2(0, h),\n\t\t]\n\n\t\t// TODO: gradient for rounded rect\n\t\t// TODO: drawPolygon should handle generic rounded corners\n\t\tif (opt.radius) {\n\n\t\t\t// maxium radius is half the shortest side\n\t\t\tconst r = Math.min(Math.min(w, h) / 2, opt.radius)\n\n\t\t\tpts = [\n\t\t\t\tnew Vec2(r, 0),\n\t\t\t\tnew Vec2(w - r, 0),\n\t\t\t\t...getArcPts(new Vec2(w - r, r), r, r, 270, 360),\n\t\t\t\tnew Vec2(w, r),\n\t\t\t\tnew Vec2(w, h - r),\n\t\t\t\t...getArcPts(new Vec2(w - r, h - r), r, r, 0, 90),\n\t\t\t\tnew Vec2(w - r, h),\n\t\t\t\tnew Vec2(r, h),\n\t\t\t\t...getArcPts(new Vec2(r, h - r), r, r, 90, 180),\n\t\t\t\tnew Vec2(0, h - r),\n\t\t\t\tnew Vec2(0, r),\n\t\t\t\t...getArcPts(new Vec2(r, r), r, r, 180, 270),\n\t\t\t]\n\n\t\t}\n\n\t\tdrawPolygon(Object.assign({}, opt, {\n\t\t\toffset,\n\t\t\tpts,\n\t\t\t...(opt.gradient ? {\n\t\t\t\tcolors: opt.horizontal ? [\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t] : [\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t],\n\t\t\t} : {}),\n\t\t}))\n\n\t}\n\n\tfunction drawLine(opt: DrawLineOpt) {\n\n\t\tconst { p1, p2 } = opt\n\n\t\tif (!p1 || !p2) {\n\t\t\tthrow new KaboomError(\"drawLine() requires properties \\\"p1\\\" and \\\"p2\\\".\")\n\t\t}\n\n\t\tconst w = opt.width || 1\n\n\t\t// the displacement from the line end point to the corner point\n\t\tconst dis = p2.sub(p1).unit().normal().scale(w * 0.5)\n\n\t\t// calculate the 4 corner points of the line polygon\n\t\tconst verts = [\n\t\t\tp1.sub(dis),\n\t\t\tp1.add(dis),\n\t\t\tp2.add(dis),\n\t\t\tp2.sub(dis),\n\t\t].map((p) => ({\n\t\t\tpos: new Vec2(p.x, p.y),\n\t\t\tuv: new Vec2(0),\n\t\t\tcolor: opt.color ?? Color.WHITE,\n\t\t\topacity: opt.opacity ?? 1,\n\t\t}))\n\n\t\tdrawRaw(verts, [0, 1, 3, 1, 2, 3], opt.fixed, gfx.defTex, opt.shader, opt.uniform)\n\n\t}\n\n\tfunction drawLines(opt: DrawLinesOpt) {\n\n\t\tconst pts = opt.pts\n\n\t\tif (!pts) {\n\t\t\tthrow new KaboomError(\"drawLines() requires property \\\"pts\\\".\")\n\t\t}\n\n\t\tif (pts.length < 2) {\n\t\t\treturn\n\t\t}\n\n\t\tif (opt.radius && pts.length >= 3) {\n\n\t\t\t// TODO: line joines\n\t\t\t// TODO: rounded vertices for arbitury polygonic shape\n\t\t\tlet minSLen = pts[0].sdist(pts[1])\n\n\t\t\tfor (let i = 1; i < pts.length - 1; i++) {\n\t\t\t\tminSLen = Math.min(pts[i].sdist(pts[i + 1]), minSLen)\n\t\t\t}\n\n\t\t\t// eslint-disable-next-line\n\t\t\tconst radius = Math.min(opt.radius, Math.sqrt(minSLen) / 2)\n\n\t\t\tdrawLine(Object.assign({}, opt, { p1: pts[0], p2: pts[1] }))\n\n\t\t\tfor (let i = 1; i < pts.length - 2; i++) {\n\t\t\t\tconst p1 = pts[i]\n\t\t\t\tconst p2 = pts[i + 1]\n\t\t\t\tdrawLine(Object.assign({}, opt, {\n\t\t\t\t\tp1: p1,\n\t\t\t\t\tp2: p2,\n\t\t\t\t}))\n\t\t\t}\n\n\t\t\tdrawLine(Object.assign({}, opt, {\n\t\t\t\tp1: pts[pts.length - 2],\n\t\t\t\tp2: pts[pts.length - 1],\n\t\t\t}))\n\n\t\t} else {\n\n\t\t\tfor (let i = 0; i < pts.length - 1; i++) {\n\t\t\t\tdrawLine(Object.assign({}, opt, {\n\t\t\t\t\tp1: pts[i],\n\t\t\t\t\tp2: pts[i + 1],\n\t\t\t\t}))\n\t\t\t\t// TODO: other line join types\n\t\t\t\tif (opt.join !== \"none\") {\n\t\t\t\t\tdrawCircle(Object.assign({}, opt, {\n\t\t\t\t\t\tpos: pts[i],\n\t\t\t\t\t\tradius: opt.width / 2,\n\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction drawTriangle(opt: DrawTriangleOpt) {\n\t\tif (!opt.p1 || !opt.p2 || !opt.p3) {\n\t\t\tthrow new KaboomError(\"drawPolygon() requires properties \\\"p1\\\", \\\"p2\\\" and \\\"p3\\\".\")\n\t\t}\n\t\treturn drawPolygon(Object.assign({}, opt, {\n\t\t\tpts: [opt.p1, opt.p2, opt.p3],\n\t\t}))\n\t}\n\n\tfunction drawCircle(opt: DrawCircleOpt) {\n\n\t\tif (typeof opt.radius !== \"number\") {\n\t\t\tthrow new KaboomError(\"drawCircle() requires property \\\"radius\\\".\")\n\t\t}\n\n\t\tif (opt.radius === 0) {\n\t\t\treturn\n\t\t}\n\n\t\tdrawEllipse(Object.assign({}, opt, {\n\t\t\tradiusX: opt.radius,\n\t\t\tradiusY: opt.radius,\n\t\t\tangle: 0,\n\t\t}))\n\n\t}\n\n\tfunction drawEllipse(opt: DrawEllipseOpt) {\n\n\t\tif (opt.radiusX === undefined || opt.radiusY === undefined) {\n\t\t\tthrow new KaboomError(\"drawEllipse() requires properties \\\"radiusX\\\" and \\\"radiusY\\\".\")\n\t\t}\n\n\t\tif (opt.radiusX === 0 || opt.radiusY === 0) {\n\t\t\treturn\n\t\t}\n\n\t\tconst start = opt.start ?? 0\n\t\tconst end = opt.end ?? 360\n\t\tconst offset = anchorPt(opt.anchor ?? \"center\").scale(new Vec2(-opt.radiusX, -opt.radiusY))\n\n\t\tconst pts = getArcPts(\n\t\t\toffset,\n\t\t\topt.radiusX,\n\t\t\topt.radiusY,\n\t\t\tstart,\n\t\t\tend,\n\t\t\topt.resolution,\n\t\t)\n\n\t\t// center\n\t\tpts.unshift(offset)\n\n\t\tconst polyOpt = Object.assign({}, opt, {\n\t\t\tpts,\n\t\t\tradius: 0,\n\t\t\t...(opt.gradient ? {\n\t\t\t\tcolors: [\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\t...Array(pts.length - 1).fill(opt.gradient[1]),\n\t\t\t\t],\n\t\t\t} : {}),\n\t\t})\n\n\t\t// full circle with outline shouldn't have the center point\n\t\tif (end - start >= 360 && opt.outline) {\n\t\t\tif (opt.fill !== false) {\n\t\t\t\tdrawPolygon(Object.assign(polyOpt, {\n\t\t\t\t\toutline: null,\n\t\t\t\t}))\n\t\t\t}\n\t\t\tdrawPolygon(Object.assign(polyOpt, {\n\t\t\t\tpts: pts.slice(1),\n\t\t\t\tfill: false,\n\t\t\t}))\n\t\t\treturn\n\t\t}\n\n\t\tdrawPolygon(polyOpt)\n\n\t}\n\n\tfunction drawPolygon(opt: DrawPolygonOpt) {\n\n\t\tif (!opt.pts) {\n\t\t\tthrow new KaboomError(\"drawPolygon() requires property \\\"pts\\\".\")\n\t\t}\n\n\t\tconst npts = opt.pts.length\n\n\t\tif (npts < 3) {\n\t\t\treturn\n\t\t}\n\n\t\tpushTransform()\n\t\tpushTranslate(opt.pos)\n\t\tpushScale(opt.scale)\n\t\tpushRotate(opt.angle)\n\t\tpushTranslate(opt.offset)\n\n\t\tif (opt.fill !== false) {\n\n\t\t\tconst color = opt.color ?? Color.WHITE\n\n\t\t\tconst verts = opt.pts.map((pt, i) => ({\n\t\t\t\tpos: new Vec2(pt.x, pt.y),\n\t\t\t\tuv: new Vec2(0, 0),\n\t\t\t\tcolor: opt.colors ? (opt.colors[i] ?? color) : color,\n\t\t\t\topacity: opt.opacity ?? 1,\n\t\t\t}))\n\n\t\t\t// TODO: better triangulation\n\t\t\tconst indices = [...Array(npts - 2).keys()]\n\t\t\t\t.map((n) => [0, n + 1, n + 2])\n\t\t\t\t.flat()\n\n\t\t\tdrawRaw(verts, opt.indices ?? indices, opt.fixed, gfx.defTex, opt.shader, opt.uniform)\n\n\t\t}\n\n\t\tif (opt.outline) {\n\t\t\tdrawLines({\n\t\t\t\tpts: [ ...opt.pts, opt.pts[0] ],\n\t\t\t\tradius: opt.radius,\n\t\t\t\twidth: opt.outline.width,\n\t\t\t\tcolor: opt.outline.color,\n\t\t\t\tjoin: opt.outline.join,\n\t\t\t\tuniform: opt.uniform,\n\t\t\t\tfixed: opt.fixed,\n\t\t\t\topacity: opt.opacity,\n\t\t\t})\n\t\t}\n\n\t\tpopTransform()\n\n\t}\n\n\tfunction drawStenciled(content: () => void, mask: () => void, test: number) {\n\n\t\tflush()\n\t\tgl.clear(gl.STENCIL_BUFFER_BIT)\n\t\tgl.enable(gl.STENCIL_TEST)\n\n\t\t// don't perform test, pure write\n\t\tgl.stencilFunc(\n\t\t\tgl.NEVER,\n\t\t\t1,\n\t\t\t0xFF,\n\t\t)\n\n\t\t// always replace since we're writing to the buffer\n\t\tgl.stencilOp(\n\t\t\tgl.REPLACE,\n\t\t\tgl.REPLACE,\n\t\t\tgl.REPLACE,\n\t\t)\n\n\t\tmask()\n\t\tflush()\n\n\t\t// perform test\n\t\tgl.stencilFunc(\n\t\t\ttest,\n\t\t\t1,\n\t\t\t0xFF,\n\t\t)\n\n\t\t// don't write since we're only testing\n\t\tgl.stencilOp(\n\t\t\tgl.KEEP,\n\t\t\tgl.KEEP,\n\t\t\tgl.KEEP,\n\t\t)\n\n\t\tcontent()\n\t\tflush()\n\t\tgl.disable(gl.STENCIL_TEST)\n\n\t}\n\n\tfunction drawMasked(content: () => void, mask: () => void) {\n\t\tdrawStenciled(content, mask, gl.EQUAL)\n\t}\n\n\tfunction drawSubtracted(content: () => void, mask: () => void) {\n\t\tdrawStenciled(content, mask, gl.NOTEQUAL)\n\t}\n\n\tfunction getViewportScale() {\n\t\treturn (gfx.viewport.width + gfx.viewport.height) / (gfx.width + gfx.height)\n\t}\n\n\tfunction drawUnscaled(content: () => void) {\n\t\tflush()\n\t\tconst ow = gfx.width\n\t\tconst oh = gfx.height\n\t\tgfx.width = gfx.viewport.width\n\t\tgfx.height = gfx.viewport.height\n\t\tcontent()\n\t\tflush()\n\t\tgfx.width = ow\n\t\tgfx.height = oh\n\t}\n\n\tfunction applyCharTransform(fchar: FormattedChar, tr: CharTransform) {\n\t\tif (tr.pos) fchar.pos = fchar.pos.add(tr.pos)\n\t\tif (tr.scale) fchar.scale = fchar.scale.scale(vec2(tr.scale))\n\t\tif (tr.angle) fchar.angle += tr.angle\n\t\tif (tr.color) fchar.color = fchar.color.mult(tr.color)\n\t\tif (tr.opacity) fchar.opacity *= tr.opacity\n\t}\n\n\t// TODO: escape\n\t// eslint-disable-next-line\n\tconst TEXT_STYLE_RE = /\\[(?<style>\\w+)\\](?<text>.*?)\\[\\/\\k<style>\\]/g\n\n\t// TODO: handle nested\n\tfunction compileStyledText(text: string): {\n\t\tcharStyleMap: Record<number, string[]>,\n\t\ttext: string,\n\t} {\n\n\t\tconst charStyleMap = {}\n\t\t// get the text without the styling syntax\n\t\tconst renderText = text.replace(TEXT_STYLE_RE, \"$2\")\n\t\tlet idxOffset = 0\n\n\t\t// put each styled char index into a map for easy access when iterating each char\n\t\tfor (const match of text.matchAll(TEXT_STYLE_RE)) {\n\t\t\tconst origIdx = match.index - idxOffset\n\t\t\tfor (let i = 0; i < match.groups.text.length; i++) {\n\t\t\t\tcharStyleMap[i + origIdx] = [match.groups.style]\n\t\t\t}\n\t\t\t// omit the style syntax in format string when calculating index\n\t\t\tidxOffset += match[0].length - match.groups.text.length\n\t\t}\n\n\t\treturn {\n\t\t\tcharStyleMap: charStyleMap,\n\t\t\ttext: renderText,\n\t\t}\n\n\t}\n\n\ttype FontAtlas = {\n\t\tfont: BitmapFontData,\n\t\tcursor: Vec2,\n\t\toutline: Outline | null,\n\t}\n\n\tconst fontAtlases: Record<string, FontAtlas> = {}\n\n\t// TODO: cache formatted text\n\t// format text and return a list of chars with their calculated position\n\tfunction formatText(opt: DrawTextOpt): FormattedText {\n\n\t\tif (opt.text === undefined) {\n\t\t\tthrow new KaboomError(\"formatText() requires property \\\"text\\\".\")\n\t\t}\n\n\t\tlet font = resolveFont(opt.font)\n\n\t\t// if it's still loading\n\t\tif (opt.text === \"\" || font instanceof Asset || !font) {\n\t\t\treturn {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tchars: [],\n\t\t\t\topt: opt,\n\t\t\t}\n\t\t}\n\n\t\tconst { charStyleMap, text } = compileStyledText(opt.text + \"\")\n\t\tconst chars = text.split(\"\")\n\n\t\t// if it's not bitmap font, we draw it with 2d canvas or use cached image\n\t\tif (font instanceof FontData || typeof font === \"string\") {\n\n\t\t\tconst fontName = font instanceof FontData ? font.fontface.family : font\n\t\t\tconst opts: {\n\t\t\t\toutline: Outline | null,\n\t\t\t\tfilter: TexFilter,\n\t\t\t} = font instanceof FontData ? {\n\t\t\t\toutline: font.outline,\n\t\t\t\tfilter: font.filter,\n\t\t\t} : {\n\t\t\t\toutline: null,\n\t\t\t\tfilter: DEF_FONT_FILTER,\n\t\t\t}\n\n\t\t\t// TODO: customizable font tex filter\n\t\t\tconst atlas: FontAtlas = fontAtlases[fontName] ?? {\n\t\t\t\tfont: {\n\t\t\t\t\ttex: new Texture(FONT_ATLAS_WIDTH, FONT_ATLAS_HEIGHT, {\n\t\t\t\t\t\tfilter: opts.filter,\n\t\t\t\t\t}),\n\t\t\t\t\tmap: {},\n\t\t\t\t\tsize: DEF_TEXT_CACHE_SIZE,\n\t\t\t\t},\n\t\t\t\tcursor: new Vec2(0),\n\t\t\t\toutline: opts.outline,\n\t\t\t}\n\n\t\t\tif (!fontAtlases[fontName]) {\n\t\t\t\tfontAtlases[fontName] = atlas\n\t\t\t}\n\n\t\t\tfont = atlas.font\n\n\t\t\tfor (const ch of chars) {\n\n\t\t\t\tif (!atlas.font.map[ch]) {\n\n\t\t\t\t\t// TODO: use assets.packer to pack font texture\n\t\t\t\t\tconst c2d = fontCacheCtx\n\t\t\t\t\tc2d.clearRect(0, 0, fontCacheCanvas.width, fontCacheCanvas.height)\n\t\t\t\t\tc2d.font = `${font.size}px ${fontName}`\n\t\t\t\t\tc2d.textBaseline = \"top\"\n\t\t\t\t\tc2d.textAlign = \"left\"\n\t\t\t\t\tc2d.fillStyle = \"#ffffff\"\n\t\t\t\t\tconst m = c2d.measureText(ch)\n\t\t\t\t\tlet w = Math.ceil(m.width)\n\t\t\t\t\tlet h = font.size\n\t\t\t\t\tif (atlas.outline) {\n\t\t\t\t\t\tc2d.lineJoin = \"round\"\n\t\t\t\t\t\tc2d.lineWidth = atlas.outline.width * 2\n\t\t\t\t\t\tc2d.strokeStyle = atlas.outline.color.toHex()\n\t\t\t\t\t\tc2d.strokeText(ch, atlas.outline.width, atlas.outline.width)\n\t\t\t\t\t\tw += atlas.outline.width * 2\n\t\t\t\t\t\th += atlas.outline.width * 3\n\t\t\t\t\t}\n\t\t\t\t\tc2d.fillText(ch, atlas.outline?.width ?? 0, atlas.outline?.width ?? 0)\n\n\t\t\t\t\tconst img = c2d.getImageData(0, 0, w, h)\n\n\t\t\t\t\t// if we are about to exceed the X axis of the texture, go to another line\n\t\t\t\t\tif (atlas.cursor.x + w > FONT_ATLAS_WIDTH) {\n\t\t\t\t\t\tatlas.cursor.x = 0\n\t\t\t\t\t\tatlas.cursor.y += h\n\t\t\t\t\t\tif (atlas.cursor.y > FONT_ATLAS_HEIGHT) {\n\t\t\t\t\t\t\t// TODO: create another atlas\n\t\t\t\t\t\t\tthrow new KaboomError(\"Font atlas exceeds character limit\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfont.tex.update(img, atlas.cursor.x, atlas.cursor.y)\n\t\t\t\t\tfont.map[ch] = new Quad(atlas.cursor.x, atlas.cursor.y, w, h)\n\t\t\t\t\tatlas.cursor.x += w\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst size = opt.size || font.size\n\t\tconst scale = vec2(opt.scale ?? 1).scale(size / font.size)\n\t\tconst lineSpacing = opt.lineSpacing ?? 0\n\t\tconst letterSpacing = opt.letterSpacing ?? 0\n\t\tlet curX = 0\n\t\tlet tw = 0\n\t\tlet th = 0\n\t\tconst lines: Array<{\n\t\t\twidth: number,\n\t\t\tchars: FormattedChar[],\n\t\t}> = []\n\t\tlet curLine: FormattedChar[] = []\n\t\tlet cursor = 0\n\t\tlet lastSpace = null\n\t\tlet lastSpaceWidth = null\n\n\t\t// TODO: word break\n\t\twhile (cursor < chars.length) {\n\n\t\t\tlet ch = chars[cursor]\n\n\t\t\t// always new line on '\\n'\n\t\t\tif (ch === \"\\n\") {\n\n\t\t\t\tth += size + lineSpacing\n\n\t\t\t\tlines.push({\n\t\t\t\t\twidth: curX - letterSpacing,\n\t\t\t\t\tchars: curLine,\n\t\t\t\t})\n\n\t\t\t\tlastSpace = null\n\t\t\t\tlastSpaceWidth = null\n\t\t\t\tcurX = 0\n\t\t\t\tcurLine = []\n\n\t\t\t} else {\n\n\t\t\t\tlet q = font.map[ch]\n\n\t\t\t\t// TODO: leave space if character not found?\n\t\t\t\tif (q) {\n\n\t\t\t\t\tlet gw = q.w * scale.x\n\n\t\t\t\t\tif (opt.width && curX + gw > opt.width) {\n\t\t\t\t\t\t// new line on last word if width exceeds\n\t\t\t\t\t\tth += size + lineSpacing\n\t\t\t\t\t\tif (lastSpace != null) {\n\t\t\t\t\t\t\tcursor -= curLine.length - lastSpace\n\t\t\t\t\t\t\tch = chars[cursor]\n\t\t\t\t\t\t\tq = font.map[ch]\n\t\t\t\t\t\t\tgw = q.w * scale.x\n\t\t\t\t\t\t\t// omit trailing space\n\t\t\t\t\t\t\tcurLine = curLine.slice(0, lastSpace - 1)\n\t\t\t\t\t\t\tcurX = lastSpaceWidth\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSpace = null\n\t\t\t\t\t\tlastSpaceWidth = null\n\t\t\t\t\t\tlines.push({\n\t\t\t\t\t\t\twidth: curX - letterSpacing,\n\t\t\t\t\t\t\tchars: curLine,\n\t\t\t\t\t\t})\n\t\t\t\t\t\tcurX = 0\n\t\t\t\t\t\tcurLine = []\n\t\t\t\t\t}\n\n\t\t\t\t\t// push char\n\t\t\t\t\tcurLine.push({\n\t\t\t\t\t\ttex: font.tex,\n\t\t\t\t\t\twidth: q.w,\n\t\t\t\t\t\theight: q.h,\n\t\t\t\t\t\t// without some padding there'll be visual artifacts on edges\n\t\t\t\t\t\tquad: new Quad(\n\t\t\t\t\t\t\tq.x / font.tex.width,\n\t\t\t\t\t\t\tq.y / font.tex.height,\n\t\t\t\t\t\t\tq.w / font.tex.width,\n\t\t\t\t\t\t\tq.h / font.tex.height,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tch: ch,\n\t\t\t\t\t\tpos: new Vec2(curX, th),\n\t\t\t\t\t\topacity: opt.opacity ?? 1,\n\t\t\t\t\t\tcolor: opt.color ?? Color.WHITE,\n\t\t\t\t\t\tscale: vec2(scale),\n\t\t\t\t\t\tangle: 0,\n\t\t\t\t\t})\n\n\t\t\t\t\tif (ch === \" \") {\n\t\t\t\t\t\tlastSpace = curLine.length\n\t\t\t\t\t\tlastSpaceWidth = curX\n\t\t\t\t\t}\n\n\t\t\t\t\tcurX += gw\n\t\t\t\t\ttw = Math.max(tw, curX)\n\t\t\t\t\tcurX += letterSpacing\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcursor++\n\n\t\t}\n\n\t\tlines.push({\n\t\t\twidth: curX - letterSpacing,\n\t\t\tchars: curLine,\n\t\t})\n\n\t\tth += size\n\n\t\tif (opt.width) {\n\t\t\ttw = opt.width\n\t\t}\n\n\t\tconst fchars: FormattedChar[] = []\n\n\t\tfor (const line of lines) {\n\n\t\t\tconst ox = (tw - line.width) * alignPt(opt.align ?? \"left\")\n\n\t\t\tfor (const fchar of line.chars) {\n\n\t\t\t\tconst q = font.map[fchar.ch]\n\t\t\t\tconst idx = fchars.length\n\n\t\t\t\tfchar.pos = fchar.pos.add(ox, 0).add(\n\t\t\t\t\tq.w * scale.x * 0.5,\n\t\t\t\t\tq.h * scale.y * 0.5,\n\t\t\t\t)\n\n\t\t\t\tif (opt.transform) {\n\t\t\t\t\tconst tr = typeof opt.transform === \"function\"\n\t\t\t\t\t\t? opt.transform(idx, fchar.ch)\n\t\t\t\t\t\t: opt.transform\n\t\t\t\t\tif (tr) {\n\t\t\t\t\t\tapplyCharTransform(fchar, tr)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (charStyleMap[idx]) {\n\t\t\t\t\tconst styles = charStyleMap[idx]\n\t\t\t\t\tfor (const name of styles) {\n\t\t\t\t\t\tconst style = opt.styles[name]\n\t\t\t\t\t\tconst tr = typeof style === \"function\"\n\t\t\t\t\t\t\t? style(idx, fchar.ch)\n\t\t\t\t\t\t\t: style\n\t\t\t\t\t\tif (tr) {\n\t\t\t\t\t\t\tapplyCharTransform(fchar, tr)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfchars.push(fchar)\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\twidth: tw,\n\t\t\theight: th,\n\t\t\tchars: fchars,\n\t\t\topt: opt,\n\t\t}\n\n\t}\n\n\tfunction drawText(opt: DrawTextOpt) {\n\t\tdrawFormattedText(formatText(opt))\n\t}\n\n\tfunction drawFormattedText(ftext: FormattedText) {\n\t\tpushTransform()\n\t\tpushTranslate(ftext.opt.pos)\n\t\tpushRotate(ftext.opt.angle)\n\t\tpushTranslate(anchorPt(ftext.opt.anchor ?? \"topleft\").add(1, 1).scale(ftext.width, ftext.height).scale(-0.5))\n\t\tftext.chars.forEach((ch) => {\n\t\t\tdrawUVQuad({\n\t\t\t\ttex: ch.tex,\n\t\t\t\twidth: ch.width,\n\t\t\t\theight: ch.height,\n\t\t\t\tpos: ch.pos,\n\t\t\t\tscale: ch.scale,\n\t\t\t\tangle: ch.angle,\n\t\t\t\tcolor: ch.color,\n\t\t\t\topacity: ch.opacity,\n\t\t\t\tquad: ch.quad,\n\t\t\t\tanchor: \"center\",\n\t\t\t\tuniform: ftext.opt.uniform,\n\t\t\t\tshader: ftext.opt.shader,\n\t\t\t\tfixed: ftext.opt.fixed,\n\t\t\t})\n\t\t})\n\t\tpopTransform()\n\t}\n\n\t// get game width\n\tfunction width(): number {\n\t\treturn gfx.width\n\t}\n\n\t// get game height\n\tfunction height(): number {\n\t\treturn gfx.height\n\t}\n\n\tconst winEvents: EventList<WindowEventMap> = {}\n\n\t// transform a point from window space to content space\n\tfunction windowToContent(pt: Vec2) {\n\t\treturn new Vec2(\n\t\t\t(pt.x - gfx.viewport.x) * width() / gfx.viewport.width,\n\t\t\t(pt.y - gfx.viewport.y) * height() / gfx.viewport.height,\n\t\t)\n\t}\n\n\t// transform a point from content space to view space\n\tfunction contentToView(pt: Vec2) {\n\t\treturn new Vec2(\n\t\t\tpt.x * gfx.viewport.width / gfx.width,\n\t\t\tpt.y * gfx.viewport.height / gfx.height,\n\t\t)\n\t}\n\n\tfunction mousePos() {\n\t\treturn windowToContent(app.mousePos())\n\t}\n\n\twinEvents.error = (e) => {\n\t\tif (e.error && e.error instanceof KaboomError) {\n\t\t\thandleErr(e.error)\n\t\t} else if (e instanceof KaboomError) {\n\t\t\thandleErr(e)\n\t\t}\n\t}\n\n\twinEvents.unhandledrejection = (e) => {\n\t\tif (e.reason instanceof KaboomError) {\n\t\t\thandleErr(e.reason)\n\t\t}\n\t}\n\n\tfor (const name in winEvents) {\n\t\twindow.addEventListener(name, winEvents[name])\n\t}\n\n\tlet debugPaused = false\n\n\tconst debug: Debug = {\n\t\tinspect: false,\n\t\ttimeScale: 1,\n\t\tshowLog: true,\n\t\tfps: () => app.fps(),\n\t\tnumFrames: () => app.numFrames(),\n\t\tstepFrame: updateFrame,\n\t\tdrawCalls: () => gfx.lastDrawCalls,\n\t\tclearLog: () => game.logs = [],\n\t\tlog: (msg) => {\n\t\t\tconst max = gopt.logMax ?? LOG_MAX\n\t\t\tgame.logs.unshift({\n\t\t\t\tmsg: msg,\n\t\t\t\ttime: app.time(),\n\t\t\t})\n\t\t\tif (game.logs.length > max) {\n\t\t\t\tgame.logs = game.logs.slice(0, max)\n\t\t\t}\n\t\t},\n\t\terror: (msg) => debug.log(new KaboomError(msg.toString ? msg.toString() : msg as string)),\n\t\tcurRecording: null,\n\t\tnumObjects: () => get(\"*\", { recursive: true }).length,\n\t\tget paused() {\n\t\t\treturn debugPaused\n\t\t},\n\t\tset paused(v) {\n\t\t\tdebugPaused = v\n\t\t\tif (v) {\n\t\t\t\taudio.ctx.suspend()\n\t\t\t} else {\n\t\t\t\taudio.ctx.resume()\n\t\t\t}\n\t\t},\n\t}\n\n\tfunction dt() {\n\t\treturn app.dt() * debug.timeScale\n\t}\n\n\tfunction camPos(...pos: Vec2Args): Vec2 {\n\t\tif (pos.length > 0) {\n\t\t\tgame.cam.pos = vec2(...pos)\n\t\t}\n\t\treturn game.cam.pos ? game.cam.pos.clone() : center()\n\t}\n\n\tfunction camScale(...scale: Vec2Args): Vec2 {\n\t\tif (scale.length > 0) {\n\t\t\tgame.cam.scale = vec2(...scale)\n\t\t}\n\t\treturn game.cam.scale.clone()\n\t}\n\n\tfunction camRot(angle: number): number {\n\t\tif (angle !== undefined) {\n\t\t\tgame.cam.angle = angle\n\t\t}\n\t\treturn game.cam.angle\n\t}\n\n\tfunction shake(intensity: number = 12) {\n\t\tgame.cam.shake += intensity\n\t}\n\n\tfunction toScreen(p: Vec2): Vec2 {\n\t\treturn game.cam.transform.multVec2(p)\n\t}\n\n\tfunction toWorld(p: Vec2): Vec2 {\n\t\treturn game.cam.transform.invert().multVec2(p)\n\t}\n\n\tfunction calcTransform(obj: GameObj): Mat4 {\n\t\tconst tr = new Mat4()\n\t\tif (obj.pos) tr.translate(obj.pos)\n\t\tif (obj.scale) tr.scale(obj.scale)\n\t\tif (obj.angle) tr.rotate(obj.angle)\n\t\treturn obj.parent ? tr.mult(obj.parent.transform) : tr\n\t}\n\n\tfunction make<T>(comps: CompList<T> = []): GameObj<T> {\n\n\t\tconst compStates = new Map()\n\t\tconst cleanups = {}\n\t\tconst events = new EventHandler()\n\t\tconst inputEvents: EventController[] = []\n\t\tlet onCurCompCleanup = null\n\t\tlet paused = false\n\n\t\t// @ts-ignore\n\t\tconst obj: GameObj = {\n\n\t\t\tid: uid(),\n\t\t\t// TODO: a nice way to hide / pause when add()-ing\n\t\t\thidden: false,\n\t\t\ttransform: new Mat4(),\n\t\t\tchildren: [],\n\t\t\tparent: null,\n\n\t\t\tset paused(p) {\n\t\t\t\tif (p === paused) return\n\t\t\t\tpaused = p\n\t\t\t\tfor (const e of inputEvents) {\n\t\t\t\t\te.paused = p\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tget paused() {\n\t\t\t\treturn paused\n\t\t\t},\n\n\t\t\tadd<T2>(a: CompList<T2> | GameObj<T2> = []): GameObj<T2> {\n\t\t\t\tconst obj = Array.isArray(a) ? make(a) : a\n\t\t\t\tif (obj.parent) {\n\t\t\t\t\tthrow new KaboomError(\"Cannot add a game obj that already has a parent.\")\n\t\t\t\t}\n\t\t\t\tobj.parent = this\n\t\t\t\tobj.transform = calcTransform(obj)\n\t\t\t\tthis.children.push(obj)\n\t\t\t\t// TODO: trigger add for children\n\t\t\t\tobj.trigger(\"add\", obj)\n\t\t\t\tgame.events.trigger(\"add\", obj)\n\t\t\t\treturn obj\n\t\t\t},\n\n\t\t\treadd(obj: GameObj): GameObj {\n\t\t\t\tconst idx = this.children.indexOf(obj)\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tthis.children.splice(idx, 1)\n\t\t\t\t\tthis.children.push(obj)\n\t\t\t\t}\n\t\t\t\treturn obj\n\t\t\t},\n\n\t\t\tremove(obj: GameObj): void {\n\t\t\t\tconst idx = this.children.indexOf(obj)\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tobj.parent = null\n\t\t\t\t\tthis.children.splice(idx, 1)\n\t\t\t\t\tconst trigger = (o) => {\n\t\t\t\t\t\to.trigger(\"destroy\")\n\t\t\t\t\t\tgame.events.trigger(\"destroy\", o)\n\t\t\t\t\t\to.children.forEach((child) => trigger(child))\n\t\t\t\t\t}\n\t\t\t\t\ttrigger(obj)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// TODO: recursive\n\t\t\tremoveAll(tag?: Tag) {\n\t\t\t\tif (tag) {\n\t\t\t\t\tthis.get(tag).forEach((obj) => this.remove(obj))\n\t\t\t\t} else {\n\t\t\t\t\tfor (const child of [...this.children]) this.remove(child)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tupdate() {\n\t\t\t\tif (this.paused) return\n\t\t\t\tthis.children\n\t\t\t\t\t.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))\n\t\t\t\t\t.forEach((child) => child.update())\n\t\t\t\tthis.trigger(\"update\")\n\t\t\t},\n\n\t\t\tdraw(this: GameObj<PosComp | ScaleComp | RotateComp | FixedComp | MaskComp>) {\n\t\t\t\tif (this.hidden) return\n\t\t\t\tconst f = gfx.fixed\n\t\t\t\tif (this.fixed) gfx.fixed = true\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(this.pos)\n\t\t\t\tpushScale(this.scale)\n\t\t\t\tpushRotate(this.angle)\n\t\t\t\tconst children = this.children.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))\n\t\t\t\t// TODO: automatically don't draw if offscreen\n\t\t\t\tif (this.mask) {\n\t\t\t\t\tconst maskFunc = {\n\t\t\t\t\t\tintersect: drawMasked,\n\t\t\t\t\t\tsubtract: drawSubtracted,\n\t\t\t\t\t}[this.mask]\n\t\t\t\t\tif (!maskFunc) {\n\t\t\t\t\t\tthrow new KaboomError(`Invalid mask func: \"${this.mask}\"`)\n\t\t\t\t\t}\n\t\t\t\t\tmaskFunc(() => {\n\t\t\t\t\t\tchildren.forEach((child) => child.draw())\n\t\t\t\t\t}, () => {\n\t\t\t\t\t\tthis.trigger(\"draw\")\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tthis.trigger(\"draw\")\n\t\t\t\t\tchildren.forEach((child) => child.draw())\n\t\t\t\t}\n\t\t\t\tpopTransform()\n\t\t\t\tgfx.fixed = f\n\t\t\t},\n\n\t\t\tdrawInspect(this: GameObj<PosComp | ScaleComp | RotateComp>) {\n\t\t\t\tif (this.hidden) return\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(this.pos)\n\t\t\t\tpushScale(this.scale)\n\t\t\t\tpushRotate(this.angle)\n\t\t\t\tthis.children\n\t\t\t\t\t.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))\n\t\t\t\t\t.forEach((child) => child.drawInspect())\n\t\t\t\tthis.trigger(\"drawInspect\")\n\t\t\t\tpopTransform()\n\t\t\t},\n\n\t\t\t// use a comp, or tag\n\t\t\tuse(comp: Comp | Tag) {\n\n\t\t\t\tif (!comp) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\t// tag\n\t\t\t\tif (typeof comp === \"string\") {\n\t\t\t\t\treturn this.use({\n\t\t\t\t\t\tid: comp,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tlet gc = []\n\n\t\t\t\t// clear if overwrite\n\t\t\t\tif (comp.id) {\n\t\t\t\t\tthis.unuse(comp.id)\n\t\t\t\t\tcleanups[comp.id] = []\n\t\t\t\t\tgc = cleanups[comp.id]\n\t\t\t\t\tcompStates.set(comp.id, comp)\n\t\t\t\t}\n\n\t\t\t\tfor (const k in comp) {\n\n\t\t\t\t\tif (COMP_DESC.has(k)) {\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\n\t\t\t\t\tconst prop = Object.getOwnPropertyDescriptor(comp, k)\n\n\t\t\t\t\tif (typeof prop.value === \"function\") {\n\t\t\t\t\t\tcomp[k] = comp[k].bind(this)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (prop.set) {\n\t\t\t\t\t\tObject.defineProperty(comp, k, {\n\t\t\t\t\t\t\tset: prop.set.bind(this),\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tif (prop.get) {\n\t\t\t\t\t\tObject.defineProperty(comp, k, {\n\t\t\t\t\t\t\tget: prop.get.bind(this),\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tif (COMP_EVENTS.has(k)) {\n\t\t\t\t\t\t// automatically clean up events created by components in add() stage\n\t\t\t\t\t\tconst func = k === \"add\" ? () => {\n\t\t\t\t\t\t\tonCurCompCleanup = (c) => gc.push(c)\n\t\t\t\t\t\t\tcomp[k]()\n\t\t\t\t\t\t\tonCurCompCleanup = null\n\t\t\t\t\t\t} : comp[k]\n\t\t\t\t\t\tgc.push(this.on(k, func).cancel)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (this[k] === undefined) {\n\t\t\t\t\t\t\t// assign comp fields to game obj\n\t\t\t\t\t\t\tObject.defineProperty(this, k, {\n\t\t\t\t\t\t\t\tget: () => comp[k],\n\t\t\t\t\t\t\t\tset: (val) => comp[k] = val,\n\t\t\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tgc.push(() => delete this[k])\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new KaboomError(`Duplicate component property: \"${k}\"`)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// check for component dependencies\n\t\t\t\tconst checkDeps = () => {\n\t\t\t\t\tif (!comp.require) return\n\t\t\t\t\tfor (const dep of comp.require) {\n\t\t\t\t\t\tif (!this.c(dep)) {\n\t\t\t\t\t\t\tthrow new KaboomError(`Component \"${comp.id}\" requires component \"${dep}\"`)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (comp.destroy) {\n\t\t\t\t\tgc.push(comp.destroy.bind(this))\n\t\t\t\t}\n\n\t\t\t\t// manually trigger add event if object already exist\n\t\t\t\tif (this.exists()) {\n\t\t\t\t\tcheckDeps()\n\t\t\t\t\tif (comp.add) {\n\t\t\t\t\t\tonCurCompCleanup = (c) => gc.push(c)\n\t\t\t\t\t\tcomp.add.call(this)\n\t\t\t\t\t\tonCurCompCleanup = null\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (comp.require) {\n\t\t\t\t\t\tgc.push(this.on(\"add\", checkDeps).cancel)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tunuse(id: Tag) {\n\t\t\t\tif (cleanups[id]) {\n\t\t\t\t\tcleanups[id].forEach((e) => e())\n\t\t\t\t\tdelete cleanups[id]\n\t\t\t\t}\n\t\t\t\tif (compStates.has(id)) {\n\t\t\t\t\tcompStates.delete(id)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tc(id: Tag): Comp {\n\t\t\t\treturn compStates.get(id)\n\t\t\t},\n\n\t\t\tget(t: Tag | Tag[], opts: GetOpt = {}): GameObj[] {\n\t\t\t\tlet list: GameObj[] = opts.recursive\n\t\t\t\t\t? this.children.flatMap(function recurse(child) {\n\t\t\t\t\t\treturn [child, ...child.children.flatMap(recurse)]\n\t\t\t\t\t})\n\t\t\t\t\t: this.children\n\t\t\t\tlist = list.filter((child) => t ? child.is(t) : true)\n\t\t\t\tif (opts.liveUpdate) {\n\t\t\t\t\tconst isChild = (obj) => {\n\t\t\t\t\t\treturn opts.recursive\n\t\t\t\t\t\t\t? this.isAncestorOf(obj)\n\t\t\t\t\t\t\t: obj.parent === this\n\t\t\t\t\t}\n\t\t\t\t\tconst events = []\n\t\t\t\t\t// TODO: handle when object add / remove tags\n\t\t\t\t\t// TODO: clean up when obj destroyed\n\t\t\t\t\tevents.push(onAdd((obj) => {\n\t\t\t\t\t\tif (isChild(obj) && obj.is(t)) {\n\t\t\t\t\t\t\tlist.push(obj)\n\t\t\t\t\t\t}\n\t\t\t\t\t}))\n\t\t\t\t\tevents.push(onDestroy((obj) => {\n\t\t\t\t\t\tif (isChild(obj) && obj.is(t)) {\n\t\t\t\t\t\t\tconst idx = list.findIndex((o) => o.id === obj.id)\n\t\t\t\t\t\t\tif (idx !== -1) {\n\t\t\t\t\t\t\t\tlist.splice(idx, 1)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}))\n\t\t\t\t\tthis.onDestroy(() => {\n\t\t\t\t\t\tfor (const ev of events) {\n\t\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\treturn list\n\t\t\t},\n\n\t\t\tisAncestorOf(obj: GameObj) {\n\t\t\t\tif (!obj.parent) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\treturn obj.parent === this || this.isAncestorOf(obj.parent)\n\t\t\t},\n\n\t\t\texists(): boolean {\n\t\t\t\treturn game.root.isAncestorOf(this)\n\t\t\t},\n\n\t\t\tis(tag: Tag | Tag[]): boolean {\n\t\t\t\tif (tag === \"*\") {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(tag)) {\n\t\t\t\t\tfor (const t of tag) {\n\t\t\t\t\t\tif (!this.c(t)) {\n\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn true\n\t\t\t\t} else {\n\t\t\t\t\treturn this.c(tag) != null\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ton(name: string, action: (...args) => void): EventController {\n\t\t\t\tconst ctrl = events.on(name, action.bind(this))\n\t\t\t\tif (onCurCompCleanup) {\n\t\t\t\t\tonCurCompCleanup(() => ctrl.cancel())\n\t\t\t\t}\n\t\t\t\treturn ctrl\n\t\t\t},\n\n\t\t\ttrigger(name: string, ...args): void {\n\t\t\t\tevents.trigger(name, ...args)\n\t\t\t\tgame.objEvents.trigger(name, this, ...args)\n\t\t\t},\n\n\t\t\tdestroy() {\n\t\t\t\tif (this.parent) {\n\t\t\t\t\tthis.parent.remove(this)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\tconst info = {}\n\t\t\t\tfor (const [tag, comp] of compStates) {\n\t\t\t\t\tinfo[tag] = comp.inspect ? comp.inspect() : null\n\t\t\t\t}\n\t\t\t\treturn info\n\t\t\t},\n\n\t\t\tonAdd(cb: () => void): EventController {\n\t\t\t\treturn this.on(\"add\", cb)\n\t\t\t},\n\n\t\t\tonUpdate(cb: () => void): EventController {\n\t\t\t\treturn this.on(\"update\", cb)\n\t\t\t},\n\n\t\t\tonDraw(cb: () => void): EventController {\n\t\t\t\treturn this.on(\"draw\", cb)\n\t\t\t},\n\n\t\t\tonDestroy(action: () => void): EventController {\n\t\t\t\treturn this.on(\"destroy\", action)\n\t\t\t},\n\n\t\t\tclearEvents() {\n\t\t\t\tevents.clear()\n\t\t\t},\n\n\t\t}\n\n\t\t// TODO: type with as const\n\t\tconst evs = [\n\t\t\t\"onKeyPress\",\n\t\t\t\"onKeyPressRepeat\",\n\t\t\t\"onKeyDown\",\n\t\t\t\"onKeyRelease\",\n\t\t\t\"onMousePress\",\n\t\t\t\"onMouseDown\",\n\t\t\t\"onMouseRelease\",\n\t\t\t\"onMouseMove\",\n\t\t\t\"onCharInput\",\n\t\t\t\"onMouseMove\",\n\t\t\t\"onTouchStart\",\n\t\t\t\"onTouchMove\",\n\t\t\t\"onTouchEnd\",\n\t\t\t\"onScroll\",\n\t\t\t\"onGamepadButtonPress\",\n\t\t\t\"onGamepadButtonDown\",\n\t\t\t\"onGamepadButtonRelease\",\n\t\t\t\"onGamepadStick\",\n\t\t]\n\n\t\tfor (const e of evs) {\n\t\t\tobj[e] = (...args) => {\n\t\t\t\tconst ev = app[e](...args)\n\t\t\t\tinputEvents.push(ev)\n\t\t\t\t// TODO: what if the game object is destroy and re-added\n\t\t\t\tobj.onDestroy(() => ev.cancel())\n\t\t\t\treturn ev\n\t\t\t}\n\t\t}\n\n\t\tfor (const comp of comps) {\n\t\t\tobj.use(comp)\n\t\t}\n\n\t\treturn obj as unknown as GameObj<T>\n\n\t}\n\n\t// add an event to a tag\n\tfunction on(event: string, tag: Tag, cb: (obj: GameObj, ...args) => void): EventController {\n\t\tif (!game.objEvents[event]) {\n\t\t\tgame.objEvents[event] = new IDList()\n\t\t}\n\t\treturn game.objEvents.on(event, (obj, ...args) => {\n\t\t\tif (obj.is(tag)) {\n\t\t\t\tcb(obj, ...args)\n\t\t\t}\n\t\t})\n\t}\n\n\t// add update event to a tag or global update\n\tconst onUpdate = ((tag: Tag | (() => void), action?: (obj: GameObj) => void) => {\n\t\tif (typeof tag === \"function\" && action === undefined) {\n\t\t\tconst obj = add([{ update: tag }])\n\t\t\treturn {\n\t\t\t\tget paused() {\n\t\t\t\t\treturn obj.paused\n\t\t\t\t},\n\t\t\t\tset paused(p) {\n\t\t\t\t\tobj.paused = p\n\t\t\t\t},\n\t\t\t\tcancel: () => obj.destroy(),\n\t\t\t}\n\t\t} else if (typeof tag === \"string\") {\n\t\t\treturn on(\"update\", tag, action)\n\t\t}\n\t}) as KaboomCtx[\"onUpdate\"]\n\n\t// add draw event to a tag or global draw\n\tconst onDraw = ((tag: Tag | (() => void), action?: (obj: GameObj) => void) => {\n\t\tif (typeof tag === \"function\" && action === undefined) {\n\t\t\tconst obj = add([{ draw: tag }])\n\t\t\treturn {\n\t\t\t\tget paused() {\n\t\t\t\t\treturn obj.hidden\n\t\t\t\t},\n\t\t\t\tset paused(p) {\n\t\t\t\t\tobj.hidden = p\n\t\t\t\t},\n\t\t\t\tcancel: () => obj.destroy(),\n\t\t\t}\n\t\t} else if (typeof tag === \"string\") {\n\t\t\treturn on(\"draw\", tag, action)\n\t\t}\n\t}) as KaboomCtx[\"onDraw\"]\n\n\tfunction onAdd(tag: Tag | ((obj: GameObj) => void), action?: (obj: GameObj) => void) {\n\t\tif (typeof tag === \"function\" && action === undefined) {\n\t\t\treturn game.events.on(\"add\", tag)\n\t\t} else if (typeof tag === \"string\") {\n\t\t\treturn on(\"add\", tag, action)\n\t\t}\n\t}\n\n\tfunction onDestroy(tag: Tag | ((obj: GameObj) => void), action?: (obj: GameObj) => void) {\n\t\tif (typeof tag === \"function\" && action === undefined) {\n\t\t\treturn game.events.on(\"destroy\", tag)\n\t\t} else if (typeof tag === \"string\") {\n\t\t\treturn on(\"destroy\", tag, action)\n\t\t}\n\t}\n\n\t// add an event that runs with objs with t1 collides with objs with t2\n\tfunction onCollide(\n\t\tt1: Tag,\n\t\tt2: Tag,\n\t\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n\t): EventController {\n\t\treturn on(\"collide\", t1, (a, b, col) => b.is(t2) && f(a, b, col))\n\t}\n\n\tfunction onCollideUpdate(\n\t\tt1: Tag,\n\t\tt2: Tag,\n\t\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n\t): EventController {\n\t\treturn on(\"collideUpdate\", t1, (a, b, col) => b.is(t2) && f(a, b, col))\n\t}\n\n\tfunction onCollideEnd(\n\t\tt1: Tag,\n\t\tt2: Tag,\n\t\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n\t): EventController {\n\t\treturn on(\"collideEnd\", t1, (a, b, col) => b.is(t2) && f(a, b, col))\n\t}\n\n\tfunction forAllCurrentAndFuture(t: Tag, action: (obj: GameObj) => void) {\n\t\tget(t, { recursive: true }).forEach(action)\n\t\tonAdd(t, action)\n\t}\n\n\t// add an event that runs when objs with tag t is clicked\n\tfunction onClick(tag: Tag | (() => void), action?: (obj: GameObj) => void): EventController {\n\t\tif (typeof tag === \"function\") {\n\t\t\treturn app.onMousePress(tag)\n\t\t} else {\n\t\t\tconst events = []\n\t\t\tforAllCurrentAndFuture(tag, (obj) => {\n\t\t\t\tif (!obj.area)\n\t\t\t\t\tthrow new KaboomError(\"onClick() requires the object to have area() component\")\n\t\t\t\tevents.push(obj.onClick(() => action(obj)))\n\t\t\t})\n\t\t\treturn EventController.join(events)\n\t\t}\n\t}\n\n\t// add an event that runs once when objs with tag t is hovered\n\tfunction onHover(t: Tag, action: (obj: GameObj) => void): EventController {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(t, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new KaboomError(\"onHover() requires the object to have area() component\")\n\t\t\tevents.push(obj.onHover(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t}\n\n\t// add an event that runs once when objs with tag t is hovered\n\tfunction onHoverUpdate(t: Tag, action: (obj: GameObj) => void): EventController {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(t, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new KaboomError(\"onHoverUpdate() requires the object to have area() component\")\n\t\t\tevents.push(obj.onHoverUpdate(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t}\n\n\t// add an event that runs once when objs with tag t is unhovered\n\tfunction onHoverEnd(t: Tag, action: (obj: GameObj) => void): EventController {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(t, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new KaboomError(\"onHoverEnd() requires the object to have area() component\")\n\t\t\tevents.push(obj.onHoverEnd(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t}\n\n\t// TODO: use PromiseLike?\n\t// TODO: use root game object and timer()?\n\t// add an event that'd be run after t\n\tfunction wait(time: number, action?: () => void): TimerController {\n\t\tlet t = 0\n\t\tconst actions = []\n\t\tif (action) actions.push(action)\n\t\tconst ev = onUpdate(() => {\n\t\t\tt += dt()\n\t\t\tif (t >= time) {\n\t\t\t\tev.cancel()\n\t\t\t\tactions.forEach((action) => action())\n\t\t\t}\n\t\t})\n\t\treturn {\n\t\t\tpaused: ev.paused,\n\t\t\tcancel: ev.cancel,\n\t\t\tonEnd(action) {\n\t\t\t\tactions.push(action)\n\t\t\t},\n\t\t\tthen(action) {\n\t\t\t\tthis.onEnd(action)\n\t\t\t\treturn this\n\t\t\t},\n\t\t}\n\t}\n\n\t// add an event that's run every t seconds\n\tfunction loop(t: number, action: () => void): EventController {\n\n\t\tlet curTimer: null | TimerController = null\n\n\t\tconst newAction = () => {\n\t\t\t// TODO: should f be execute right away as loop() is called?\n\t\t\tcurTimer = wait(t, newAction)\n\t\t\taction()\n\t\t}\n\n\t\tcurTimer = wait(0, newAction)\n\n\t\treturn {\n\t\t\tget paused() {\n\t\t\t\treturn curTimer.paused\n\t\t\t},\n\t\t\tset paused(p) {\n\t\t\t\tcurTimer.paused = p\n\t\t\t},\n\t\t\tcancel: () => curTimer.cancel(),\n\t\t}\n\n\t}\n\n\tfunction enterDebugMode() {\n\n\t\tapp.onKeyPress(\"f1\", () => {\n\t\t\tdebug.inspect = !debug.inspect\n\t\t})\n\n\t\tapp.onKeyPress(\"f2\", () => {\n\t\t\tdebug.clearLog()\n\t\t})\n\n\t\tapp.onKeyPress(\"f8\", () => {\n\t\t\tdebug.paused = !debug.paused\n\t\t})\n\n\t\tapp.onKeyPress(\"f7\", () => {\n\t\t\tdebug.timeScale = toFixed(clamp(debug.timeScale - 0.2, 0, 2), 1)\n\t\t})\n\n\t\tapp.onKeyPress(\"f9\", () => {\n\t\t\tdebug.timeScale = toFixed(clamp(debug.timeScale + 0.2, 0, 2), 1)\n\t\t})\n\n\t\tapp.onKeyPress(\"f10\", () => {\n\t\t\tdebug.stepFrame()\n\t\t})\n\n\t}\n\n\tfunction enterBurpMode() {\n\t\tapp.onKeyPress(\"b\", () => burp())\n\t}\n\n\tfunction setGravity(g: number) {\n\t\tgame.gravity = g\n\t}\n\n\tfunction getGravity() {\n\t\treturn game.gravity\n\t}\n\n\tfunction setBackground(...args) {\n\t\tif (args.length === 1 || args.length === 2) {\n\t\t\tgfx.bgColor = rgb(args[0])\n\t\t\tif (args[1]) gfx.bgAlpha = args[1]\n\t\t} else if (args.length === 3 || args.length === 4) {\n\t\t\tgfx.bgColor = rgb(args[0], args[1], args[2])\n\t\t\tif (args[3]) gfx.bgAlpha = args[3]\n\t\t}\n\t\tgl.clearColor(\n\t\t\tgfx.bgColor.r / 255,\n\t\t\tgfx.bgColor.g / 255,\n\t\t\tgfx.bgColor.b / 255,\n\t\t\tgfx.bgAlpha,\n\t\t)\n\t}\n\n\tfunction getBackground() {\n\t\treturn gfx.bgColor.clone()\n\t}\n\n\t// TODO: manage global velocity here?\n\tfunction pos(...args: Vec2Args): PosComp {\n\n\t\treturn {\n\n\t\t\tid: \"pos\",\n\t\t\tpos: vec2(...args),\n\n\t\t\tmoveBy(...args: Vec2Args) {\n\t\t\t\tthis.pos = this.pos.add(vec2(...args))\n\t\t\t},\n\n\t\t\t// move with velocity (pixels per second)\n\t\t\tmove(...args: Vec2Args) {\n\t\t\t\tthis.moveBy(vec2(...args).scale(dt()))\n\t\t\t},\n\n\t\t\t// move to a destination, with optional speed\n\t\t\tmoveTo(...args) {\n\t\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\t\treturn this.moveTo(vec2(args[0], args[1]), args[2])\n\t\t\t\t}\n\t\t\t\tconst dest = args[0]\n\t\t\t\tconst speed = args[1]\n\t\t\t\tif (speed === undefined) {\n\t\t\t\t\tthis.pos = vec2(dest)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tconst diff = dest.sub(this.pos)\n\t\t\t\tif (diff.len() <= speed * dt()) {\n\t\t\t\t\tthis.pos = vec2(dest)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tthis.move(diff.unit().scale(speed))\n\t\t\t},\n\n\t\t\tworldPos(this: GameObj<PosComp>): Vec2 {\n\t\t\t\treturn this.parent\n\t\t\t\t\t? this.parent.transform.multVec2(this.pos)\n\t\t\t\t\t: this.pos\n\t\t\t},\n\n\t\t\t// get the screen position (transformed by camera)\n\t\t\tscreenPos(this: GameObj<PosComp | FixedComp>): Vec2 {\n\t\t\t\tconst pos = this.worldPos()\n\t\t\t\treturn isFixed(this)\n\t\t\t\t\t? pos\n\t\t\t\t\t: toScreen(pos)\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\treturn `(${Math.round(this.pos.x)}, ${Math.round(this.pos.y)})`\n\t\t\t},\n\n\t\t\tdrawInspect() {\n\t\t\t\tdrawCircle({\n\t\t\t\t\tcolor: rgb(255, 0, 0),\n\t\t\t\t\tradius: 4 / getViewportScale(),\n\t\t\t\t})\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\t// TODO: allow single number assignment\n\tfunction scale(...args: Vec2Args): ScaleComp {\n\t\tif (args.length === 0) {\n\t\t\treturn scale(1)\n\t\t}\n\t\treturn {\n\t\t\tid: \"scale\",\n\t\t\tscale: vec2(...args),\n\t\t\tscaleTo(...args: Vec2Args) {\n\t\t\t\tthis.scale = vec2(...args)\n\t\t\t},\n\t\t\tscaleBy(...args: Vec2Args) {\n\t\t\t\tthis.scale.scale(vec2(...args))\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `(${toFixed(this.scale.x, 2)}, ${toFixed(this.scale.y, 2)})`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction rotate(r: number): RotateComp {\n\t\treturn {\n\t\t\tid: \"rotate\",\n\t\t\tangle: r ?? 0,\n\t\t\trotateBy(angle: number) {\n\t\t\t\tthis.angle += angle\n\t\t\t},\n\t\t\trotateTo(angle: number) {\n\t\t\t\tthis.angle = angle\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.round(this.angle)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction color(...args): ColorComp {\n\t\treturn {\n\t\t\tid: \"color\",\n\t\t\tcolor: rgb(...args),\n\t\t\tinspect() {\n\t\t\t\treturn this.color.toString()\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction toFixed(n: number, f: number) {\n\t\treturn Number(n.toFixed(f))\n\t}\n\n\t// TODO: fadeIn here?\n\tfunction opacity(a: number): OpacityComp {\n\t\treturn {\n\t\t\tid: \"opacity\",\n\t\t\topacity: a ?? 1,\n\t\t\tinspect() {\n\t\t\t\treturn `${toFixed(this.opacity, 1)}`\n\t\t\t},\n\t\t\tfadeOut(time = 1, easeFunc = easings.linear): TweenController {\n\t\t\t\treturn tween(this.opacity, 0, time, (a) => this.opacity = a, easeFunc)\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction anchor(o: Anchor | Vec2): AnchorComp {\n\t\tif (!o) {\n\t\t\tthrow new KaboomError(\"Please define an anchor\")\n\t\t}\n\t\treturn {\n\t\t\tid: \"anchor\",\n\t\t\tanchor: o,\n\t\t\tinspect() {\n\t\t\t\tif (typeof this.anchor === \"string\") {\n\t\t\t\t\treturn this.anchor\n\t\t\t\t} else {\n\t\t\t\t\treturn this.anchor.toString()\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction z(z: number): ZComp {\n\t\treturn {\n\t\t\tid: \"z\",\n\t\t\tz: z,\n\t\t\tinspect() {\n\t\t\t\treturn `${this.z}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction follow(obj: GameObj, offset?: Vec2): FollowComp {\n\t\treturn {\n\t\t\tid: \"follow\",\n\t\t\trequire: [ \"pos\" ],\n\t\t\tfollow: {\n\t\t\t\tobj: obj,\n\t\t\t\toffset: offset ?? vec2(0),\n\t\t\t},\n\t\t\tadd(this: GameObj<FollowComp | PosComp>) {\n\t\t\t\tif (obj.exists()) {\n\t\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset)\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate(this: GameObj<FollowComp | PosComp>) {\n\t\t\t\tif (obj.exists()) {\n\t\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset)\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction move(dir: number | Vec2, speed: number): EmptyComp {\n\t\tconst d = typeof dir === \"number\" ? Vec2.fromAngle(dir) : dir.unit()\n\t\treturn {\n\t\t\tid: \"move\",\n\t\t\trequire: [ \"pos\" ],\n\t\t\tupdate(this: GameObj<PosComp>) {\n\t\t\t\tthis.move(d.scale(speed))\n\t\t\t},\n\t\t}\n\t}\n\n\tconst DEF_OFFSCREEN_DIS = 200\n\n\tfunction offscreen(opt: OffScreenCompOpt = {}): OffScreenComp {\n\t\tconst distance = opt.distance ?? DEF_OFFSCREEN_DIS\n\t\tlet isOut = false\n\t\treturn {\n\t\t\tid: \"offscreen\",\n\t\t\trequire: [ \"pos\" ],\n\t\t\tisOffScreen(this: GameObj<PosComp>): boolean {\n\t\t\t\tconst pos = this.screenPos()\n\t\t\t\tconst screenRect = new Rect(vec2(0), width(), height())\n\t\t\t\treturn !testRectPoint(screenRect, pos)\n\t\t\t\t\t&& screenRect.sdistToPoint(pos) > distance * distance\n\t\t\t},\n\t\t\tonExitScreen(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"exitView\", action)\n\t\t\t},\n\t\t\tonEnterScreen(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"enterView\", action)\n\t\t\t},\n\t\t\tupdate(this: GameObj) {\n\t\t\t\tif (this.isOffScreen()) {\n\t\t\t\t\tif (!isOut) {\n\t\t\t\t\t\tthis.trigger(\"exitView\")\n\t\t\t\t\t\tisOut = true\n\t\t\t\t\t}\n\t\t\t\t\tif (opt.hide) this.hidden = true\n\t\t\t\t\tif (opt.pause) this.paused = true\n\t\t\t\t\tif (opt.destroy) this.destroy()\n\t\t\t\t} else {\n\t\t\t\t\tif (isOut) {\n\t\t\t\t\t\tthis.trigger(\"enterView\")\n\t\t\t\t\t\tisOut = false\n\t\t\t\t\t}\n\t\t\t\t\tif (opt.hide) this.hidden = false\n\t\t\t\t\tif (opt.pause) this.paused = false\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction isFixed(obj: GameObj) {\n\t\tif (obj.fixed) return true\n\t\treturn obj.parent ? isFixed(obj.parent) : false\n\t}\n\n\tfunction area(opt: AreaCompOpt = {}): AreaComp {\n\n\t\tconst colliding = {}\n\t\tconst collidingThisFrame = new Set()\n\n\t\treturn {\n\n\t\t\tid: \"area\",\n\t\t\tcollisionIgnore: opt.collisionIgnore ?? [],\n\n\t\t\tadd(this: GameObj<AreaComp>) {\n\n\t\t\t\tif (this.area.cursor) {\n\t\t\t\t\tthis.onHover(() => app.setCursor(this.area.cursor))\n\t\t\t\t}\n\n\t\t\t\tthis.onCollideUpdate((obj, col) => {\n\t\t\t\t\tif (!colliding[obj.id]) {\n\t\t\t\t\t\tthis.trigger(\"collide\", obj, col)\n\t\t\t\t\t}\n\t\t\t\t\tcolliding[obj.id] = col\n\t\t\t\t\tcollidingThisFrame.add(obj.id)\n\t\t\t\t})\n\n\t\t\t},\n\n\t\t\tupdate(this: GameObj<AreaComp>) {\n\t\t\t\tfor (const id in colliding) {\n\t\t\t\t\tif (!collidingThisFrame.has(Number(id))) {\n\t\t\t\t\t\tthis.trigger(\"collideEnd\", colliding[id].target)\n\t\t\t\t\t\tdelete colliding[id]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcollidingThisFrame.clear()\n\t\t\t},\n\n\t\t\tdrawInspect(this: GameObj<AreaComp | AnchorComp | FixedComp>) {\n\n\t\t\t\tconst a = this.localArea()\n\n\t\t\t\tpushTransform()\n\t\t\t\tpushScale(this.area.scale)\n\t\t\t\tpushTranslate(this.area.offset)\n\n\t\t\t\tconst opts = {\n\t\t\t\t\toutline: {\n\t\t\t\t\t\twidth: 4 / getViewportScale(),\n\t\t\t\t\t\tcolor: rgb(0, 0, 255),\n\t\t\t\t\t},\n\t\t\t\t\tanchor: this.anchor,\n\t\t\t\t\tfill: false,\n\t\t\t\t\tfixed: isFixed(this),\n\t\t\t\t}\n\n\t\t\t\tif (a instanceof Rect) {\n\t\t\t\t\tdrawRect({\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tpos: a.pos,\n\t\t\t\t\t\twidth: a.width,\n\t\t\t\t\t\theight: a.height,\n\t\t\t\t\t})\n\t\t\t\t} else if (a instanceof Polygon) {\n\t\t\t\t\tdrawPolygon({\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tpts: a.pts,\n\t\t\t\t\t})\n\t\t\t\t} else if (a instanceof Circle) {\n\t\t\t\t\tdrawCircle({\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tpos: a.center,\n\t\t\t\t\t\tradius: a.radius,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tpopTransform()\n\n\t\t\t},\n\n\t\t\tarea: {\n\t\t\t\tshape: opt.shape ?? null,\n\t\t\t\tscale: opt.scale ? vec2(opt.scale) : vec2(1),\n\t\t\t\toffset: opt.offset ?? vec2(0),\n\t\t\t\tcursor: opt.cursor ?? null,\n\t\t\t},\n\n\t\t\tisClicked(): boolean {\n\t\t\t\treturn app.isMousePressed() && this.isHovering()\n\t\t\t},\n\n\t\t\tisHovering(this: GameObj) {\n\t\t\t\tconst mpos = isFixed(this) ? mousePos() : toWorld(mousePos())\n\t\t\t\treturn this.hasPoint(mpos)\n\t\t\t},\n\n\t\t\tcheckCollision(this: GameObj, other: GameObj<AreaComp>) {\n\t\t\t\treturn colliding[other.id] ?? null\n\t\t\t},\n\n\t\t\tgetCollisions() {\n\t\t\t\treturn Object.values(colliding)\n\t\t\t},\n\n\t\t\t// TODO: perform check instead of use cache\n\t\t\tisColliding(other: GameObj<AreaComp>) {\n\t\t\t\treturn Boolean(colliding[other.id])\n\t\t\t},\n\n\t\t\tisOverlapping(other) {\n\t\t\t\tconst col = colliding[other.id]\n\t\t\t\treturn col && col.hasOverlap()\n\t\t\t},\n\n\t\t\tonClick(this: GameObj<AreaComp>, f: () => void): EventController {\n\t\t\t\tconst e = app.onMousePress(\"left\", () => {\n\t\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\t\tf()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tthis.onDestroy(() => e.cancel())\n\t\t\t\treturn e\n\t\t\t},\n\n\t\t\tonHover(this: GameObj, action: () => void): EventController {\n\t\t\t\tlet hovering = false\n\t\t\t\treturn this.onUpdate(() => {\n\t\t\t\t\tif (!hovering) {\n\t\t\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\t\t\thovering = true\n\t\t\t\t\t\t\taction()\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\thovering = this.isHovering()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tonHoverUpdate(this: GameObj, onHover: () => void): EventController {\n\t\t\t\treturn this.onUpdate(() => {\n\t\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\t\tonHover()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tonHoverEnd(this: GameObj, action: () => void): EventController {\n\t\t\t\tlet hovering = false\n\t\t\t\treturn this.onUpdate(() => {\n\t\t\t\t\tif (hovering) {\n\t\t\t\t\t\tif (!this.isHovering()) {\n\t\t\t\t\t\t\thovering = false\n\t\t\t\t\t\t\taction()\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\thovering = this.isHovering()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tonCollide(\n\t\t\t\tthis: GameObj,\n\t\t\t\ttag: Tag | ((obj: GameObj, col?: Collision) => void),\n\t\t\t\tcb?: (obj: GameObj, col?: Collision) => void,\n\t\t\t): EventController {\n\t\t\t\tif (typeof tag === \"function\" && cb === undefined) {\n\t\t\t\t\treturn this.on(\"collide\", tag)\n\t\t\t\t} else if (typeof tag === \"string\") {\n\t\t\t\t\treturn this.onCollide((obj, col) => {\n\t\t\t\t\t\tif (obj.is(tag)) {\n\t\t\t\t\t\t\tcb(obj, col)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonCollideUpdate(\n\t\t\t\tthis: GameObj<AreaComp>,\n\t\t\t\ttag: Tag | ((obj: GameObj, col?: Collision) => void),\n\t\t\t\tcb?: (obj: GameObj, col?: Collision) => void,\n\t\t\t): EventController {\n\t\t\t\tif (typeof tag === \"function\" && cb === undefined) {\n\t\t\t\t\treturn this.on(\"collideUpdate\", tag)\n\t\t\t\t} else if (typeof tag === \"string\") {\n\t\t\t\t\treturn this.on(\"collideUpdate\", (obj, col) => obj.is(tag) && cb(obj, col))\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonCollideEnd(\n\t\t\t\tthis: GameObj<AreaComp>,\n\t\t\t\ttag: Tag | ((obj: GameObj) => void),\n\t\t\t\tcb?: (obj: GameObj) => void,\n\t\t\t): EventController {\n\t\t\t\tif (typeof tag === \"function\" && cb === undefined) {\n\t\t\t\t\treturn this.on(\"collideEnd\", tag)\n\t\t\t\t} else if (typeof tag === \"string\") {\n\t\t\t\t\treturn this.on(\"collideEnd\", (obj) => obj.is(tag) && cb(obj))\n\t\t\t\t}\n\t\t\t},\n\n\t\t\thasPoint(pt: Vec2): boolean {\n\t\t\t\t// TODO: convert to pt to local space instead\n\t\t\t\treturn testPolygonPoint(this.worldArea(), pt)\n\t\t\t},\n\n\t\t\t// push an obj out of another if they're overlapped\n\t\t\tresolveCollision(this: GameObj<AreaComp | PosComp>, obj: GameObj<AreaComp>) {\n\t\t\t\tconst col = this.checkCollision(obj)\n\t\t\t\tif (col && !col.resolved) {\n\t\t\t\t\tthis.pos = this.pos.add(col.displacement)\n\t\t\t\t\tcol.resolved = true\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tlocalArea(this: GameObj<AreaComp | { renderArea(): Shape }>): Shape {\n\t\t\t\treturn this.area.shape\n\t\t\t\t\t? this.area.shape\n\t\t\t\t\t: this.renderArea()\n\t\t\t},\n\n\t\t\t// TODO: cache\n\t\t\tworldArea(this: GameObj<AreaComp | AnchorComp>): Polygon {\n\n\t\t\t\tconst localArea = this.localArea()\n\n\t\t\t\tif (!(localArea instanceof Polygon || localArea instanceof Rect)) {\n\t\t\t\t\tthrow new KaboomError(\"Only support polygon and rect shapes for now\")\n\t\t\t\t}\n\n\t\t\t\tconst transform = this.transform\n\t\t\t\t\t.clone()\n\t\t\t\t\t.scale(vec2(this.area.scale ?? 1))\n\t\t\t\t\t.translate(this.area.offset)\n\n\t\t\t\tif (localArea instanceof Rect) {\n\t\t\t\t\tconst offset = anchorPt(this.anchor || DEF_ANCHOR)\n\t\t\t\t\t\t.add(1, 1)\n\t\t\t\t\t\t.scale(-0.5)\n\t\t\t\t\t\t.scale(localArea.width, localArea.height)\n\t\t\t\t\ttransform.translate(offset)\n\t\t\t\t}\n\n\t\t\t\treturn localArea.transform(transform) as Polygon\n\n\t\t\t},\n\n\t\t\tscreenArea(this: GameObj<AreaComp | FixedComp>): Polygon {\n\t\t\t\tconst area = this.worldArea()\n\t\t\t\tif (isFixed(this)) {\n\t\t\t\t\treturn area\n\t\t\t\t} else {\n\t\t\t\t\treturn area.transform(game.cam.transform)\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction getRenderProps(obj: GameObj<any>) {\n\t\treturn {\n\t\t\tcolor: obj.color,\n\t\t\topacity: obj.opacity,\n\t\t\tanchor: obj.anchor,\n\t\t\toutline: obj.outline,\n\t\t\tshader: obj.shader,\n\t\t\tuniform: obj.uniform,\n\t\t}\n\t}\n\n\t// TODO: clean\n\tfunction sprite(\n\t\tsrc: string | SpriteData | Asset<SpriteData>,\n\t\topt: SpriteCompOpt = {},\n\t): SpriteComp {\n\n\t\tlet spriteData: SpriteData | null = null\n\t\tlet curAnim: SpriteCurAnim | null = null\n\t\t// 1  - from small index to large index\n\t\t// -1 - reverse\n\t\tlet curAnimDir: -1 | 1 | null = null\n\t\tconst spriteLoadedEvent = new Event<[SpriteData]>()\n\n\t\tif (!src) {\n\t\t\tthrow new KaboomError(\"Please pass the resource name or data to sprite()\")\n\t\t}\n\n\t\tconst calcTexScale = (tex: Texture, q: Quad, w?: number, h?: number): Vec2 => {\n\t\t\tconst scale = vec2(1, 1)\n\t\t\tif (w && h) {\n\t\t\t\tscale.x = w / (tex.width * q.w)\n\t\t\t\tscale.y = h / (tex.height * q.h)\n\t\t\t} else if (w) {\n\t\t\t\tscale.x = w / (tex.width * q.w)\n\t\t\t\tscale.y = scale.x\n\t\t\t} else if (h) {\n\t\t\t\tscale.y = h / (tex.height * q.h)\n\t\t\t\tscale.x = scale.y\n\t\t\t}\n\t\t\treturn scale\n\t\t}\n\n\t\treturn {\n\n\t\t\tid: \"sprite\",\n\t\t\t// TODO: allow update\n\t\t\twidth: 0,\n\t\t\theight: 0,\n\t\t\tframe: opt.frame || 0,\n\t\t\tquad: opt.quad || new Quad(0, 0, 1, 1),\n\t\t\tanimSpeed: opt.animSpeed ?? 1,\n\t\t\tflipX: opt.flipX ?? false,\n\t\t\tflipY: opt.flipY ?? false,\n\n\t\t\tdraw(this: GameObj<SpriteComp>) {\n\n\t\t\t\tif (!spriteData) return\n\n\t\t\t\tconst q = spriteData.frames[this.frame ?? 0]\n\n\t\t\t\tif (!q) {\n\t\t\t\t\tthrow new KaboomError(`Frame not found: ${this.frame ?? 0}`)\n\t\t\t\t}\n\n\t\t\t\tif (spriteData.slice9) {\n\t\t\t\t\t// TODO: tile\n\t\t\t\t\t// TODO: use scale or width / height, or both?\n\t\t\t\t\tconst { left, right, top, bottom } = spriteData.slice9\n\t\t\t\t\tconst tw = spriteData.tex.width * q.w\n\t\t\t\t\tconst th = spriteData.tex.height * q.h\n\t\t\t\t\tconst iw = this.width - left - right\n\t\t\t\t\tconst ih = this.height - top - bottom\n\t\t\t\t\tconst w1 = left / tw\n\t\t\t\t\tconst w3 = right / tw\n\t\t\t\t\tconst w2 = 1 - w1 - w3\n\t\t\t\t\tconst h1 = top / th\n\t\t\t\t\tconst h3 = bottom / th\n\t\t\t\t\tconst h2 = 1 - h1 - h3\n\t\t\t\t\tconst quads = [\n\t\t\t\t\t\t// uv\n\t\t\t\t\t\tquad(0,       0,       w1, h1),\n\t\t\t\t\t\tquad(w1,      0,       w2, h1),\n\t\t\t\t\t\tquad(w1 + w2, 0,       w3, h1),\n\t\t\t\t\t\tquad(0,       h1,      w1, h2),\n\t\t\t\t\t\tquad(w1,      h1,      w2, h2),\n\t\t\t\t\t\tquad(w1 + w2, h1,      w3, h2),\n\t\t\t\t\t\tquad(0,       h1 + h2, w1, h3),\n\t\t\t\t\t\tquad(w1,      h1 + h2, w2, h3),\n\t\t\t\t\t\tquad(w1 + w2, h1 + h2, w3, h3),\n\t\t\t\t\t\t// transform\n\t\t\t\t\t\tquad(0,         0,        left,  top),\n\t\t\t\t\t\tquad(left,      0,        iw,    top),\n\t\t\t\t\t\tquad(left + iw, 0,        right, top),\n\t\t\t\t\t\tquad(0,         top,      left,  ih),\n\t\t\t\t\t\tquad(left,      top,      iw,    ih),\n\t\t\t\t\t\tquad(left + iw, top,      right, ih),\n\t\t\t\t\t\tquad(0,         top + ih, left,  bottom),\n\t\t\t\t\t\tquad(left,      top + ih, iw,    bottom),\n\t\t\t\t\t\tquad(left + iw, top + ih, right, bottom),\n\t\t\t\t\t]\n\t\t\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\t\t\tconst uv = quads[i]\n\t\t\t\t\t\tconst transform = quads[i + 9]\n\t\t\t\t\t\tdrawTexture(Object.assign(getRenderProps(this), {\n\t\t\t\t\t\t\tpos: transform.pos(),\n\t\t\t\t\t\t\ttex: spriteData.tex,\n\t\t\t\t\t\t\tquad: q.scale(uv),\n\t\t\t\t\t\t\tflipX: this.flipX,\n\t\t\t\t\t\t\tflipY: this.flipY,\n\t\t\t\t\t\t\ttiled: opt.tiled,\n\t\t\t\t\t\t\twidth: transform.w,\n\t\t\t\t\t\t\theight: transform.h,\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tdrawTexture(Object.assign(getRenderProps(this), {\n\t\t\t\t\t\ttex: spriteData.tex,\n\t\t\t\t\t\tquad: q.scale(this.quad ?? new Quad(0, 0, 1, 1)),\n\t\t\t\t\t\tflipX: this.flipX,\n\t\t\t\t\t\tflipY: this.flipY,\n\t\t\t\t\t\ttiled: opt.tiled,\n\t\t\t\t\t\twidth: this.width,\n\t\t\t\t\t\theight: this.height,\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tadd(this: GameObj<SpriteComp>) {\n\n\t\t\t\tconst setSpriteData = (spr) => {\n\n\t\t\t\t\tlet q = spr.frames[0].clone()\n\n\t\t\t\t\tif (opt.quad) {\n\t\t\t\t\t\tq = q.scale(opt.quad)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst scale = calcTexScale(spr.tex, q, opt.width, opt.height)\n\n\t\t\t\t\tthis.width = spr.tex.width * q.w * scale.x\n\t\t\t\t\tthis.height = spr.tex.height * q.h * scale.y\n\n\t\t\t\t\tif (opt.anim) {\n\t\t\t\t\t\tthis.play(opt.anim)\n\t\t\t\t\t}\n\n\t\t\t\t\tspriteData = spr\n\t\t\t\t\tspriteLoadedEvent.trigger(spriteData)\n\n\t\t\t\t}\n\n\t\t\t\tconst spr = resolveSprite(src)\n\n\t\t\t\tif (spr) {\n\t\t\t\t\tspr.onLoad(setSpriteData)\n\t\t\t\t} else {\n\t\t\t\t\tonLoad(() => setSpriteData(resolveSprite(src).data))\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tupdate(this: GameObj<SpriteComp>) {\n\n\t\t\t\tif (!curAnim) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst anim = spriteData.anims[curAnim.name]\n\n\t\t\t\tif (typeof anim === \"number\") {\n\t\t\t\t\tthis.frame = anim\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (anim.speed === 0) {\n\t\t\t\t\tthrow new KaboomError(\"Sprite anim speed cannot be 0\")\n\t\t\t\t}\n\n\t\t\t\tcurAnim.timer += dt() * this.animSpeed\n\n\t\t\t\tif (curAnim.timer >= (1 / curAnim.speed)) {\n\n\t\t\t\t\tcurAnim.timer = 0\n\t\t\t\t\tthis.frame += curAnimDir\n\n\t\t\t\t\tif (this.frame < Math.min(anim.from, anim.to) ||\n\t\t\t\t\t\tthis.frame > Math.max(anim.from, anim.to)) {\n\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\tif (curAnim.pingpong) {\n\t\t\t\t\t\t\t\tthis.frame -= curAnimDir\n\t\t\t\t\t\t\t\tcurAnimDir *= -1\n\t\t\t\t\t\t\t\tthis.frame += curAnimDir\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.frame = anim.from\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.frame = anim.to\n\t\t\t\t\t\t\tcurAnim.onEnd()\n\t\t\t\t\t\t\tthis.stop()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tplay(this: GameObj<SpriteComp>, name: string, opt: SpriteAnimPlayOpt = {}) {\n\n\t\t\t\tif (!spriteData) {\n\t\t\t\t\tspriteLoadedEvent.add(() => this.play(name, opt))\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst anim = spriteData.anims[name]\n\n\t\t\t\tif (anim === undefined) {\n\t\t\t\t\tthrow new KaboomError(`Anim not found: ${name}`)\n\t\t\t\t}\n\n\t\t\t\tif (curAnim) {\n\t\t\t\t\tthis.stop()\n\t\t\t\t}\n\n\t\t\t\tcurAnim = typeof anim === \"number\"\n\t\t\t\t\t? {\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\ttimer: 0,\n\t\t\t\t\t\tloop: false,\n\t\t\t\t\t\tpingpong: false,\n\t\t\t\t\t\tspeed: 0,\n\t\t\t\t\t\tonEnd: () => {},\n\t\t\t\t\t}\n\t\t\t\t\t: {\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\ttimer: 0,\n\t\t\t\t\t\tloop: opt.loop ?? anim.loop ?? false,\n\t\t\t\t\t\tpingpong: opt.pingpong ?? anim.pingpong ?? false,\n\t\t\t\t\t\tspeed: opt.speed ?? anim.speed ?? 10,\n\t\t\t\t\t\tonEnd: opt.onEnd ?? (() => {}),\n\t\t\t\t\t}\n\n\t\t\t\tcurAnimDir = typeof anim === \"number\"\n\t\t\t\t\t? null\n\t\t\t\t\t: anim.from < anim.to ? 1 : -1\n\n\t\t\t\tthis.frame = typeof anim === \"number\"\n\t\t\t\t\t? anim\n\t\t\t\t\t: anim.from\n\n\t\t\t\tthis.trigger(\"animStart\", name)\n\n\t\t\t},\n\n\t\t\tstop(this: GameObj<SpriteComp>) {\n\t\t\t\tif (!curAnim) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tconst prevAnim = curAnim.name\n\t\t\t\tcurAnim = null\n\t\t\t\tthis.trigger(\"animEnd\", prevAnim)\n\t\t\t},\n\n\t\t\tnumFrames() {\n\t\t\t\treturn spriteData?.frames.length ?? 0\n\t\t\t},\n\n\t\t\tcurAnim() {\n\t\t\t\treturn curAnim?.name\n\t\t\t},\n\n\t\t\tonAnimEnd(\n\t\t\t\tthis: GameObj<SpriteComp>,\n\t\t\t\taction: (name: string) => void,\n\t\t\t): EventController {\n\t\t\t\treturn this.on(\"animEnd\", action)\n\t\t\t},\n\n\t\t\tonAnimStart(\n\t\t\t\tthis: GameObj<SpriteComp>,\n\t\t\t\taction: (name: string) => void,\n\t\t\t): EventController {\n\t\t\t\treturn this.on(\"animStart\", action)\n\t\t\t},\n\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\tif (typeof src === \"string\") {\n\t\t\t\t\treturn `\"${src}\"`\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction text(t: string, opt: TextCompOpt = {}): TextComp {\n\n\t\tfunction update(obj: GameObj<TextComp | any>) {\n\n\t\t\tconst ftext = formatText(Object.assign(getRenderProps(obj), {\n\t\t\t\ttext: obj.text + \"\",\n\t\t\t\tsize: obj.textSize,\n\t\t\t\tfont: obj.font,\n\t\t\t\twidth: opt.width && obj.width,\n\t\t\t\talign: obj.align,\n\t\t\t\tletterSpacing: obj.letterSpacing,\n\t\t\t\tlineSpacing: obj.lineSpacing,\n\t\t\t\t// TODO: shouldn't run when object / ancestor is paused\n\t\t\t\ttransform: obj.textTransform,\n\t\t\t\tstyles: obj.textStyles,\n\t\t\t}))\n\n\t\t\tif (!opt.width) {\n\t\t\t\tobj.width = ftext.width / (obj.scale?.x || 1)\n\t\t\t}\n\n\t\t\tobj.height = ftext.height / (obj.scale?.y || 1)\n\n\t\t\treturn ftext\n\n\t\t}\n\n\t\tconst obj = {\n\n\t\t\tid: \"text\",\n\t\t\tset text(nt) {\n\t\t\t\tt = nt\n\t\t\t\t// @ts-ignore\n\t\t\t\tupdate(this)\n\t\t\t},\n\t\t\tget text() {\n\t\t\t\treturn t\n\t\t\t},\n\t\t\ttextSize: opt.size ?? DEF_TEXT_SIZE,\n\t\t\tfont: opt.font,\n\t\t\twidth: opt.width ?? 0,\n\t\t\theight: 0,\n\t\t\talign: opt.align,\n\t\t\tlineSpacing: opt.lineSpacing,\n\t\t\tletterSpacing: opt.letterSpacing,\n\t\t\ttextTransform: opt.transform,\n\t\t\ttextStyles: opt.styles,\n\n\t\t\tadd(this: GameObj<TextComp>) {\n\t\t\t\tonLoad(() => update(this))\n\t\t\t},\n\n\t\t\tdraw(this: GameObj<TextComp>) {\n\t\t\t\tdrawFormattedText(update(this))\n\t\t\t},\n\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\n\t\t}\n\n\t\t// @ts-ignore\n\t\tupdate(obj)\n\n\t\treturn obj\n\n\t}\n\n\tfunction rect(w: number, h: number, opt: RectCompOpt = {}): RectComp {\n\t\treturn {\n\t\t\tid: \"rect\",\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tradius: opt.radius || 0,\n\t\t\tdraw(this: GameObj<RectComp>) {\n\t\t\t\tdrawRect(Object.assign(getRenderProps(this), {\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\tradius: this.radius,\n\t\t\t\t\tfill: opt.fill,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction uvquad(w: number, h: number): UVQuadComp {\n\t\treturn {\n\t\t\tid: \"rect\",\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tdraw(this: GameObj<UVQuadComp>) {\n\t\t\t\tdrawUVQuad(Object.assign(getRenderProps(this), {\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\theight: this.height,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction circle(radius: number, opt: CircleCompOpt = {}): CircleComp {\n\t\treturn {\n\t\t\tid: \"circle\",\n\t\t\tradius: radius,\n\t\t\tdraw(this: GameObj<CircleComp>) {\n\t\t\t\tdrawCircle(Object.assign(getRenderProps(this), {\n\t\t\t\t\tradius: this.radius,\n\t\t\t\t\tfill: opt.fill,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea(this: GameObj<AnchorComp | CircleComp>) {\n\t\t\t\treturn new Rect(new Vec2(this.anchor ? 0 : -this.radius), this.radius * 2, this.radius * 2)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.ceil(this.radius)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction outline(width: number = 1, color: Color = rgb(0, 0, 0)): OutlineComp {\n\t\treturn {\n\t\t\tid: \"outline\",\n\t\t\toutline: {\n\t\t\t\twidth,\n\t\t\t\tcolor,\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction timer(): TimerComp {\n\t\treturn {\n\t\t\tid: \"timer\",\n\t\t\twait(this: GameObj<TimerComp>, time: number, action?: () => void): TimerController {\n\t\t\t\tconst actions = []\n\t\t\t\tif (action) actions.push(action)\n\t\t\t\tlet t = 0\n\t\t\t\tconst ev = this.onUpdate(() => {\n\t\t\t\t\tt += dt()\n\t\t\t\t\tif (t >= time) {\n\t\t\t\t\t\tactions.forEach((f) => f())\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn {\n\t\t\t\t\tget paused() {\n\t\t\t\t\t\treturn ev.paused\n\t\t\t\t\t},\n\t\t\t\t\tset paused(p) {\n\t\t\t\t\t\tev.paused = p\n\t\t\t\t\t},\n\t\t\t\t\tcancel: ev.cancel,\n\t\t\t\t\tonEnd(action) {\n\t\t\t\t\t\tactions.push(action)\n\t\t\t\t\t},\n\t\t\t\t\tthen(action) {\n\t\t\t\t\t\tthis.onEnd(action)\n\t\t\t\t\t\treturn this\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t\tloop(t: number, action: () => void): EventController {\n\t\t\t\tlet curTimer: null | TimerController = null\n\t\t\t\tconst newAction = () => {\n\t\t\t\t\t// TODO: should f be execute right away as loop() is called?\n\t\t\t\t\tcurTimer = this.wait(t, newAction)\n\t\t\t\t\taction()\n\t\t\t\t}\n\t\t\t\tcurTimer = this.wait(0, newAction)\n\t\t\t\treturn {\n\t\t\t\t\tget paused() {\n\t\t\t\t\t\treturn curTimer.paused\n\t\t\t\t\t},\n\t\t\t\t\tset paused(p) {\n\t\t\t\t\t\tcurTimer.paused = p\n\t\t\t\t\t},\n\t\t\t\t\tcancel: () => curTimer.cancel(),\n\t\t\t\t}\n\t\t\t},\n\t\t\ttween<V extends LerpValue>(\n\t\t\t\tthis: GameObj<TimerComp>,\n\t\t\t\tfrom: V,\n\t\t\t\tto: V,\n\t\t\t\tduration: number,\n\t\t\t\tsetValue: (value: V) => void,\n\t\t\t\teaseFunc = easings.linear,\n\t\t\t) {\n\t\t\t\tlet curTime = 0\n\t\t\t\tconst onEndEvents: Array<() => void> = []\n\t\t\t\tconst ev = this.onUpdate(() => {\n\t\t\t\t\tcurTime += dt()\n\t\t\t\t\tconst t = Math.min(curTime / duration, 1)\n\t\t\t\t\tsetValue(lerp(from, to, easeFunc(t)))\n\t\t\t\t\tif (t === 1) {\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t\tsetValue(to)\n\t\t\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn {\n\t\t\t\t\tget paused() {\n\t\t\t\t\t\treturn ev.paused\n\t\t\t\t\t},\n\t\t\t\t\tset paused(p) {\n\t\t\t\t\t\tev.paused = p\n\t\t\t\t\t},\n\t\t\t\t\tonEnd(action: () => void) {\n\t\t\t\t\t\tonEndEvents.push(action)\n\t\t\t\t\t},\n\t\t\t\t\tthen(action: () => void) {\n\t\t\t\t\t\tthis.onEnd(action)\n\t\t\t\t\t\treturn this\n\t\t\t\t\t},\n\t\t\t\t\tcancel() {\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t},\n\t\t\t\t\tfinish() {\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t\tsetValue(to)\n\t\t\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\t// maximum y velocity with body()\n\tconst DEF_JUMP_FORCE = 640\n\tconst MAX_VEL = 65536\n\n\t// TODO: land on wall\n\tfunction body(opt: BodyCompOpt = {}): BodyComp {\n\n\t\tconst vel = vec2(0)\n\t\tlet curPlatform: GameObj<PosComp | AreaComp | BodyComp> | null = null\n\t\tlet lastPlatformPos = null\n\t\tlet wantFall = false\n\n\t\treturn {\n\n\t\t\tid: \"body\",\n\t\t\trequire: [ \"pos\", \"area\" ],\n\t\t\tjumpForce: opt.jumpForce ?? DEF_JUMP_FORCE,\n\t\t\tgravityScale: opt.gravityScale ?? 1,\n\t\t\tisStatic: opt.isStatic ?? false,\n\t\t\t// TODO: prefer density * area()\n\t\t\tmass: opt.mass ?? 1,\n\n\t\t\tadd(this: GameObj<PosComp | BodyComp | AreaComp>) {\n\n\t\t\t\tif (this.mass === 0) {\n\t\t\t\t\tthrow new KaboomError(\"Can't set body mass to 0\")\n\t\t\t\t}\n\n\t\t\t\t// static vs static: don't resolve\n\t\t\t\t// static vs non-static: always resolve non-static\n\t\t\t\t// non-static vs non-static: resolve the first one\n\t\t\t\tthis.onCollideUpdate((other: GameObj<PosComp | BodyComp>, col) => {\n\n\t\t\t\t\tif (!other.is(\"body\")) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tif (col.resolved) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.trigger(\"beforePhysicsResolve\", col)\n\t\t\t\t\tother.trigger(\"beforePhysicsResolve\", col.reverse())\n\n\t\t\t\t\t// user can mark 'resolved' in beforePhysicsResolve to stop a resolution\n\t\t\t\t\tif (col.resolved) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.isStatic && other.isStatic) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t} else if (!this.isStatic && !other.isStatic) {\n\t\t\t\t\t\t// TODO: update all children transform?\n\t\t\t\t\t\tconst tmass = this.mass + other.mass\n\t\t\t\t\t\tthis.pos = this.pos.add(col.displacement.scale(other.mass / tmass))\n\t\t\t\t\t\tother.pos = other.pos.add(col.displacement.scale(-this.mass / tmass))\n\t\t\t\t\t\tthis.transform = calcTransform(this)\n\t\t\t\t\t\tother.transform = calcTransform(other)\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// if one is static and on is not, resolve the non static one\n\t\t\t\t\t\tconst col2 = (!this.isStatic && other.isStatic) ? col : col.reverse()\n\t\t\t\t\t\tcol2.source.pos = col2.source.pos.add(col2.displacement)\n\t\t\t\t\t\tcol2.source.transform = calcTransform(col2.source)\n\t\t\t\t\t}\n\n\t\t\t\t\tcol.resolved = true\n\t\t\t\t\tthis.trigger(\"physicsResolve\", col)\n\t\t\t\t\tother.trigger(\"physicsResolve\", col.reverse())\n\n\t\t\t\t})\n\n\t\t\t\tthis.onPhysicsResolve((col) => {\n\t\t\t\t\tif (game.gravity) {\n\t\t\t\t\t\tif (col.isBottom() && this.isFalling()) {\n\t\t\t\t\t\t\tvel.y = 0\n\t\t\t\t\t\t\tcurPlatform = col.target as GameObj<PosComp | BodyComp | AreaComp>\n\t\t\t\t\t\t\tlastPlatformPos = col.target.pos\n\t\t\t\t\t\t\tif (wantFall) {\n\t\t\t\t\t\t\t\twantFall = false\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.trigger(\"ground\", curPlatform)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (col.isTop() && this.isJumping()) {\n\t\t\t\t\t\t\tvel.y = 0\n\t\t\t\t\t\t\tthis.trigger(\"headbutt\", col.target)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t},\n\n\t\t\tupdate(this: GameObj<PosComp | BodyComp | AreaComp>) {\n\n\t\t\t\tif (!game.gravity) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (this.isStatic) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (wantFall) {\n\t\t\t\t\tcurPlatform = null\n\t\t\t\t\tlastPlatformPos = null\n\t\t\t\t\tthis.trigger(\"fallOff\")\n\t\t\t\t\twantFall = false\n\t\t\t\t}\n\n\t\t\t\tif (curPlatform) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.isOverlapping(curPlatform)\n\t\t\t\t\t\t|| !curPlatform.exists()\n\t\t\t\t\t\t|| !curPlatform.is(\"body\")\n\t\t\t\t\t) {\n\t\t\t\t\t\twantFall = true\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!curPlatform.pos.eq(lastPlatformPos)\n\t\t\t\t\t\t\t&& opt.stickToPlatform !== false\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.moveBy(curPlatform.pos.sub(lastPlatformPos))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastPlatformPos = curPlatform.pos\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst prevVelY = vel.y\n\t\t\t\tvel.y += game.gravity * this.gravityScale * dt()\n\t\t\t\tvel.y = Math.min(vel.y, opt.maxVelocity ?? MAX_VEL)\n\t\t\t\tif (prevVelY < 0 && vel.y >= 0) {\n\t\t\t\t\tthis.trigger(\"fall\")\n\t\t\t\t}\n\t\t\t\tthis.move(vel)\n\n\t\t\t},\n\n\t\t\tonPhysicsResolve(this: GameObj, action) {\n\t\t\t\treturn this.on(\"physicsResolve\", action)\n\t\t\t},\n\n\t\t\tonBeforePhysicsResolve(this: GameObj, action) {\n\t\t\t\treturn this.on(\"beforePhysicsResolve\", action)\n\t\t\t},\n\n\t\t\tcurPlatform(): GameObj | null {\n\t\t\t\treturn curPlatform\n\t\t\t},\n\n\t\t\tisGrounded() {\n\t\t\t\treturn curPlatform !== null\n\t\t\t},\n\n\t\t\tisFalling(): boolean {\n\t\t\t\treturn vel.y > 0\n\t\t\t},\n\n\t\t\tisJumping(): boolean {\n\t\t\t\treturn vel.y < 0\n\t\t\t},\n\n\t\t\tjump(force: number) {\n\t\t\t\tcurPlatform = null\n\t\t\t\tlastPlatformPos = null\n\t\t\t\tvel.y = -force || -this.jumpForce\n\t\t\t},\n\n\t\t\tonGround(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"ground\", action)\n\t\t\t},\n\n\t\t\tonFall(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"fall\", action)\n\t\t\t},\n\n\t\t\tonFallOff(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"fallOff\", action)\n\t\t\t},\n\n\t\t\tonHeadbutt(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"headbutt\", action)\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction doubleJump(numJumps: number = 2): DoubleJumpComp {\n\t\tlet jumpsLeft = numJumps\n\t\treturn {\n\t\t\tid: \"doubleJump\",\n\t\t\trequire: [ \"body\" ],\n\t\t\tnumJumps: numJumps,\n\t\t\tadd(this: GameObj<BodyComp | DoubleJumpComp>) {\n\t\t\t\tthis.onGround(() => {\n\t\t\t\t\tjumpsLeft = this.numJumps\n\t\t\t\t})\n\t\t\t},\n\t\t\tdoubleJump(this: GameObj<BodyComp | DoubleJumpComp>, force?: number) {\n\t\t\t\tif (jumpsLeft <= 0) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (jumpsLeft < this.numJumps) {\n\t\t\t\t\tthis.trigger(\"doubleJump\")\n\t\t\t\t}\n\t\t\t\tjumpsLeft--\n\t\t\t\tthis.jump(force)\n\t\t\t},\n\t\t\tonDoubleJump(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"doubleJump\", action)\n\t\t\t},\n\t\t\tinspect(this: GameObj<BodyComp | DoubleJumpComp>) {\n\t\t\t\treturn `${jumpsLeft}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction shader(id: string, uniform?: Uniform | (() => Uniform)): ShaderComp {\n\t\treturn {\n\t\t\tid: \"shader\",\n\t\t\tshader: id,\n\t\t\t...(typeof uniform === \"function\" ? {\n\t\t\t\tuniform: uniform(),\n\t\t\t\tupdate() {\n\t\t\t\t\tthis.uniform = uniform()\n\t\t\t\t},\n\t\t\t} : {\n\t\t\t\tuniform: uniform,\n\t\t\t}),\n\t\t}\n\t}\n\n\tfunction fixed(): FixedComp {\n\t\treturn {\n\t\t\tid: \"fixed\",\n\t\t\tfixed: true,\n\t\t}\n\t}\n\n\tfunction stay(scenesToStay?: string[]): StayComp {\n\t\treturn {\n\t\t\tid: \"stay\",\n\t\t\tstay: true,\n\t\t\tscenesToStay: scenesToStay,\n\t\t}\n\t}\n\n\tfunction health(hp: number): HealthComp {\n\t\tif (hp == null) {\n\t\t\tthrow new KaboomError(\"health() requires the initial amount of hp\")\n\t\t}\n\t\tconst maxHP = hp\n\t\treturn {\n\t\t\tid: \"health\",\n\t\t\thurt(this: GameObj, n: number = 1) {\n\t\t\t\tthis.setHP(hp - n)\n\t\t\t\tthis.trigger(\"hurt\", n)\n\t\t\t},\n\t\t\theal(this: GameObj, n: number = 1) {\n\t\t\t\tthis.setHP(hp + n)\n\t\t\t\tthis.trigger(\"heal\", n)\n\t\t\t},\n\t\t\thp(): number {\n\t\t\t\treturn hp\n\t\t\t},\n\t\t\tmaxHP(): number {\n\t\t\t\treturn maxHP\n\t\t\t},\n\t\t\tsetHP(this: GameObj, n: number) {\n\t\t\t\thp = n\n\t\t\t\tif (hp <= 0) {\n\t\t\t\t\tthis.trigger(\"death\")\n\t\t\t\t}\n\t\t\t},\n\t\t\tonHurt(this: GameObj, action: (amount?: number) => void): EventController {\n\t\t\t\treturn this.on(\"hurt\", action)\n\t\t\t},\n\t\t\tonHeal(this: GameObj, action: (amount?: number) => void): EventController {\n\t\t\t\treturn this.on(\"heal\", action)\n\t\t\t},\n\t\t\tonDeath(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"death\", action)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${hp}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction lifespan(time: number, opt: LifespanCompOpt = {}): EmptyComp {\n\t\tif (time == null) {\n\t\t\tthrow new KaboomError(\"lifespan() requires time\")\n\t\t}\n\t\tconst fade = opt.fade ?? 0\n\t\treturn {\n\t\t\tid: \"lifespan\",\n\t\t\tasync add(this: GameObj<OpacityComp>) {\n\t\t\t\tawait wait(time)\n\t\t\t\t// TODO: this secretively requires opacity comp, make opacity on every game obj?\n\t\t\t\tif (fade > 0 && this.opacity) {\n\t\t\t\t\tawait tween(this.opacity, 0, fade, (a) => this.opacity = a, easings.linear)\n\t\t\t\t}\n\t\t\t\tthis.destroy()\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction state(\n\t\tinitState: string,\n\t\tstateList?: string[],\n\t\ttransitions?: Record<string, string | string[]>,\n\t): StateComp {\n\n\t\tif (!initState) {\n\t\t\tthrow new KaboomError(\"state() requires an initial state\")\n\t\t}\n\n\t\tconst events = {}\n\n\t\tfunction initStateEvents(state: string) {\n\t\t\tif (!events[state]) {\n\t\t\t\tevents[state] = {\n\t\t\t\t\tenter: new Event(),\n\t\t\t\t\tend: new Event(),\n\t\t\t\t\tupdate: new Event(),\n\t\t\t\t\tdraw: new Event(),\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction on(event, state, action) {\n\t\t\tinitStateEvents(state)\n\t\t\treturn events[state][event].add(action)\n\t\t}\n\n\t\tfunction trigger(event, state, ...args) {\n\t\t\tinitStateEvents(state)\n\t\t\tevents[state][event].trigger(...args)\n\t\t}\n\n\t\tlet didFirstEnter = false\n\n\t\treturn {\n\n\t\t\tid: \"state\",\n\t\t\tstate: initState,\n\n\t\t\tenterState(state: string, ...args) {\n\n\t\t\t\tdidFirstEnter = true\n\n\t\t\t\tif (stateList && !stateList.includes(state)) {\n\t\t\t\t\tthrow new KaboomError(`State not found: ${state}`)\n\t\t\t\t}\n\n\t\t\t\tconst oldState = this.state\n\n\t\t\t\tif (transitions) {\n\n\t\t\t\t\t// check if the transition is legal, if transition graph is defined\n\t\t\t\t\tif (!transitions?.[oldState]) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tconst available = typeof transitions[oldState] === \"string\"\n\t\t\t\t\t\t? [transitions[oldState]]\n\t\t\t\t\t\t: transitions[oldState] as string[]\n\n\t\t\t\t\tif (!available.includes(state)) {\n\t\t\t\t\t\tthrow new KaboomError(`Cannot transition state from \"${oldState}\" to \"${state}\". Available transitions: ${available.map((s) => `\"${s}\"`).join(\", \")}`)\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttrigger(\"end\", oldState, ...args)\n\t\t\t\tthis.state = state\n\t\t\t\ttrigger(\"enter\", state, ...args)\n\t\t\t\ttrigger(\"enter\", `${oldState} -> ${state}`, ...args)\n\n\t\t\t},\n\n\t\t\tonStateTransition(from: string, to: string, action: () => void): EventController {\n\t\t\t\treturn on(\"enter\", `${from} -> ${to}`, action)\n\t\t\t},\n\n\t\t\tonStateEnter(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"enter\", state, action)\n\t\t\t},\n\n\t\t\tonStateUpdate(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"update\", state, action)\n\t\t\t},\n\n\t\t\tonStateDraw(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"draw\", state, action)\n\t\t\t},\n\n\t\t\tonStateEnd(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"end\", state, action)\n\t\t\t},\n\n\t\t\tupdate() {\n\t\t\t\t// execute the enter event for initState\n\t\t\t\tif (!didFirstEnter) {\n\t\t\t\t\ttrigger(\"enter\", initState)\n\t\t\t\t\tdidFirstEnter = true\n\t\t\t\t}\n\t\t\t\ttrigger(\"update\", this.state)\n\t\t\t},\n\n\t\t\tdraw() {\n\t\t\t\ttrigger(\"draw\", this.state)\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\treturn this.state\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction fadeIn(time: number = 1): Comp {\n\t\tlet t = 0\n\t\tlet done = false\n\t\treturn {\n\t\t\trequire: [ \"opacity\" ],\n\t\t\tadd(this: GameObj<OpacityComp>) {\n\t\t\t\tthis.opacity = 0\n\t\t\t},\n\t\t\tupdate(this: GameObj<OpacityComp>) {\n\t\t\t\tif (done) return\n\t\t\t\tt += dt()\n\t\t\t\tthis.opacity = map(t, 0, time, 0, 1)\n\t\t\t\tif (t >= time) {\n\t\t\t\t\tthis.opacity = 1\n\t\t\t\t\tdone = true\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction mask(m: Mask = \"intersect\"): MaskComp {\n\t\treturn {\n\t\t\tid: \"mask\",\n\t\t\tmask: m,\n\t\t}\n\t}\n\n\tfunction onLoad(cb: () => void): void {\n\t\tif (assets.loaded) {\n\t\t\tcb()\n\t\t} else {\n\t\t\tgame.events.on(\"load\", cb)\n\t\t}\n\t}\n\n\tfunction scene(id: SceneName, def: SceneDef) {\n\t\tgame.scenes[id] = def\n\t}\n\n\tfunction go(name: SceneName, ...args) {\n\n\t\tif (!game.scenes[name]) {\n\t\t\tthrow new KaboomError(`Scene not found: ${name}`)\n\t\t}\n\n\t\tgame.events.onOnce(\"frameEnd\", () => {\n\n\t\t\tgame.events.trigger(\"sceneLeave\", name)\n\t\t\tapp.events.clear()\n\t\t\tgame.events.clear()\n\t\t\tgame.objEvents.clear()\n\n\t\t\t;[...game.root.children].forEach((obj) => {\n\t\t\t\tif (\n\t\t\t\t\t!obj.stay\n\t\t\t\t\t|| (obj.scenesToStay && !obj.scenesToStay.includes(name))\n\t\t\t\t) {\n\t\t\t\t\tgame.root.remove(obj)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tgame.root.clearEvents()\n\t\t\tinitEvents()\n\n\t\t\t// cam\n\t\t\tgame.cam = {\n\t\t\t\tpos: null,\n\t\t\t\tscale: vec2(1),\n\t\t\t\tangle: 0,\n\t\t\t\tshake: 0,\n\t\t\t\ttransform: new Mat4(),\n\t\t\t}\n\n\t\t\tgame.scenes[name](...args)\n\n\t\t})\n\n\t}\n\n\tfunction onSceneLeave(action: (newScene?: string) => void): EventController {\n\t\treturn game.events.on(\"sceneLeave\", action)\n\t}\n\n\tfunction getData<T>(key: string, def?: T): T {\n\t\ttry {\n\t\t\treturn JSON.parse(window.localStorage[key])\n\t\t} catch {\n\t\t\tif (def) {\n\t\t\t\tsetData(key, def)\n\t\t\t\treturn def\n\t\t\t} else {\n\t\t\t\treturn null\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction setData(key: string, data: any) {\n\t\twindow.localStorage[key] = JSON.stringify(data)\n\t}\n\n\tfunction plug<T extends Record<string, any>>(plugin: KaboomPlugin<T>, ...args: any): KaboomCtx & T {\n\t\tconst funcs = plugin(ctx)\n\t\tlet funcsObj: T\n\t\tif (typeof funcs === \"function\") {\n\t\t\tconst plugWithOptions = funcs(...args)\n\t\t\tfuncsObj = plugWithOptions(ctx)\n\t\t}\n\t\telse {\n\t\t\tfuncsObj = funcs\n\t\t}\n\t\tfor (const k in funcsObj) {\n\t\t\t// @ts-ignore\n\t\t\tctx[k] = funcsObj[k]\n\t\t\tif (gopt.global !== false) {\n\t\t\t\t// @ts-ignore\n\t\t\t\twindow[k] = funcsObj[k]\n\t\t\t}\n\t\t}\n\t\treturn ctx as KaboomCtx & T\n\t}\n\n\tfunction center(): Vec2 {\n\t\treturn vec2(width() / 2, height() / 2)\n\t}\n\n\tenum EdgeMask {\n\t\tNone = 0,\n\t\tLeft = 1,\n\t\tTop = 2,\n\t\tLeftTop = 3,\n\t\tRight = 4,\n\t\tHorizontal = 5,\n\t\tRightTop = 6,\n\t\tHorizontalTop = 7,\n\t\tBottom = 8,\n\t\tLeftBottom = 9,\n\t\tVertical = 10,\n\t\tLeftVertical = 11,\n\t\tRightBottom = 12,\n\t\tHorizontalBottom = 13,\n\t\tRightVertical = 14,\n\t\tAll = 15,\n\t}\n\n\tfunction tile(opts: TileCompOpt = {}): TileComp {\n\n\t\tlet tilePos = vec2(0)\n\t\tlet isObstacle = opts.isObstacle ?? false\n\t\tlet cost = opts.cost ?? 0\n\t\tlet edges = opts.edges ?? []\n\n\t\tconst getEdgeMask = () => {\n\t\t\tconst loopup = {\n\t\t\t\t\"left\": EdgeMask.Left,\n\t\t\t\t\"top\": EdgeMask.Top,\n\t\t\t\t\"right\": EdgeMask.Right,\n\t\t\t\t\"bottom\": EdgeMask.Bottom,\n\t\t\t}\n\t\t\treturn edges.map(s => loopup[s] || 0).reduce((mask, dir) => mask | dir, 0)\n\t\t}\n\n\t\tlet edgeMask = getEdgeMask()\n\n\t\treturn {\n\n\t\t\tid: \"tile\",\n\t\t\ttilePosOffset: opts.offset ?? vec2(0),\n\n\t\t\tset tilePos(p: Vec2) {\n\t\t\t\tconst level = this.getLevel()\n\t\t\t\ttilePos = p.clone()\n\t\t\t\t// @ts-ignore\n\t\t\t\tthis.pos = vec2(\n\t\t\t\t\tthis.tilePos.x * level.tileWidth(),\n\t\t\t\t\tthis.tilePos.y * level.tileHeight(),\n\t\t\t\t).add(this.tilePosOffset)\n\t\t\t},\n\n\t\t\tget tilePos() {\n\t\t\t\treturn tilePos\n\t\t\t},\n\n\t\t\tset isObstacle(is: boolean) {\n\t\t\t\tif (isObstacle === is) return\n\t\t\t\tisObstacle = is\n\t\t\t\tthis.getLevel().invalidateNavigationMap()\n\t\t\t},\n\n\t\t\tget isObstacle() {\n\t\t\t\treturn isObstacle\n\t\t\t},\n\n\t\t\tset cost(n: number) {\n\t\t\t\tif (cost === n) return\n\t\t\t\tcost = n\n\t\t\t\tthis.getLevel().invalidateNavigationMap()\n\t\t\t},\n\n\t\t\tget cost() {\n\t\t\t\treturn cost\n\t\t\t},\n\n\t\t\tset edges(e: Edge[]) {\n\t\t\t\tedges = e\n\t\t\t\tedgeMask = getEdgeMask()\n\t\t\t\tthis.getLevel().invalidateNavigationMap()\n\t\t\t},\n\n\t\t\tget edges() {\n\t\t\t\treturn edges\n\t\t\t},\n\n\t\t\tget edgeMask() {\n\t\t\t\treturn edgeMask\n\t\t\t},\n\n\t\t\tgetLevel(this: GameObj) {\n\t\t\t\treturn this.parent as GameObj<LevelComp>\n\t\t\t},\n\n\t\t\tmoveLeft() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(-1, 0))\n\t\t\t},\n\n\t\t\tmoveRight() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(1, 0))\n\t\t\t},\n\n\t\t\tmoveUp() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(0, -1))\n\t\t\t},\n\n\t\t\tmoveDown() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(0, 1))\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction addLevel(map: string[], opt: LevelOpt): GameObj<PosComp | LevelComp> {\n\n\t\tif (!opt.tileWidth || !opt.tileHeight) {\n\t\t\tthrow new KaboomError(\"Must provide tileWidth and tileHeight.\")\n\t\t}\n\n\t\t// TODO: custom parent\n\t\tconst level = add([\n\t\t\tpos(opt.pos ?? vec2(0)),\n\t\t]) as GameObj<PosComp | LevelComp>\n\n\t\tconst numRows = map.length\n\t\tlet numColumns = 0\n\n\t\t// The spatial map keeps track of the objects at each location\n\t\tlet spatialMap: GameObj[][] | null = null\n\t\tlet costMap: number[] | null = null\n\t\tlet edgeMap: number[] | null = null\n\t\tlet connectivityMap: number[] | null = null\n\n\t\tconst tile2Hash = (tilePos: Vec2) => tilePos.x + tilePos.y * numColumns\n\t\tconst hash2Tile = (hash: number) => vec2(\n\t\t\tMath.floor(hash % numColumns),\n\t\t\tMath.floor(hash / numColumns),\n\t\t)\n\n\t\tconst createSpatialMap = () => {\n\t\t\tspatialMap = []\n\t\t\tfor (const child of level.children) {\n\t\t\t\tinsertIntoSpatialMap(child)\n\t\t\t}\n\t\t}\n\n\t\tconst insertIntoSpatialMap = (obj: GameObj) => {\n\t\t\tconst i = tile2Hash(obj.tilePos)\n\t\t\tif (spatialMap[i]) {\n\t\t\t\tspatialMap[i].push(obj)\n\t\t\t} else {\n\t\t\t\tspatialMap[i] = [obj]\n\t\t\t}\n\t\t}\n\n\t\tconst removeFromSpatialMap = (obj: GameObj) => {\n\t\t\tconst i = tile2Hash(obj.tilePos)\n\t\t\tif (spatialMap[i]) {\n\t\t\t\tconst index = spatialMap[i].indexOf(obj)\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tspatialMap[i].splice(index, 1)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst updateSpatialMap = () => {\n\t\t\tlet spatialMapChanged = false\n\t\t\tfor (const child of level.children) {\n\t\t\t\tconst tilePos = level.pos2Tile(child.pos)\n\t\t\t\tif (child.tilePos.x != tilePos.x || child.tilePos.y != tilePos.y) {\n\t\t\t\t\tspatialMapChanged = true\n\t\t\t\t\tremoveFromSpatialMap(child)\n\t\t\t\t\tchild.tilePos.x = tilePos.x\n\t\t\t\t\tchild.tilePos.y = tilePos.y\n\t\t\t\t\tinsertIntoSpatialMap(child)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (spatialMapChanged) {\n\t\t\t\tlevel.trigger(\"spatial_map_changed\")\n\t\t\t}\n\t\t}\n\n\t\t// The obstacle map tells which tiles are accessible\n\t\t// Cost: accessible with cost\n\t\t// Infinite: inaccessible\n\t\tconst createCostMap = () => {\n\t\t\tconst spatialMap = level.getSpatialMap()\n\t\t\tconst size = level.numRows() * level.numColumns()\n\t\t\tif (!costMap) {\n\t\t\t\tcostMap = new Array<number>(size)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcostMap.length = size\n\t\t\t}\n\t\t\tcostMap.fill(1, 0, size)\n\t\t\tfor (let i = 0; i < spatialMap.length; i++) {\n\t\t\t\tconst objects = spatialMap[i]\n\t\t\t\tif (objects) {\n\t\t\t\t\tlet cost = 0\n\t\t\t\t\tfor (const obj of objects) {\n\t\t\t\t\t\tif (obj.isObstacle) {\n\t\t\t\t\t\t\tcost = Infinity\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcost += obj.cost\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcostMap[i] = cost || 1\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// The edge map tells which edges between nodes are walkable\n\t\tconst createEdgeMap = () => {\n\t\t\tconst spatialMap = level.getSpatialMap()\n\t\t\tconst size = level.numRows() * level.numColumns()\n\t\t\tif (!edgeMap) {\n\t\t\t\tedgeMap = new Array<number>(size)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tedgeMap.length = size\n\t\t\t}\n\t\t\tedgeMap.fill(EdgeMask.All, 0, size)\n\t\t\tfor (let i = 0; i < spatialMap.length; i++) {\n\t\t\t\tconst objects = spatialMap[i]\n\t\t\t\tif (objects) {\n\t\t\t\t\tconst len = objects.length\n\t\t\t\t\tlet mask = EdgeMask.All\n\t\t\t\t\tfor (let j = 0; j < len; j++) {\n\t\t\t\t\t\tmask |= objects[j].edgeMask\n\t\t\t\t\t}\n\t\t\t\t\tedgeMap[i] = mask\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// The connectivity map is used to see whether two locations are connected\n\t\t// -1: inaccesible n: connectivity group\n\t\tconst createConnectivityMap = () => {\n\t\t\tconst size = level.numRows() * level.numColumns()\n\t\t\tconst traverse = (i: number, index: number) => {\n\t\t\t\tconst frontier: number[] = []\n\t\t\t\tfrontier.push(i)\n\t\t\t\twhile (frontier.length > 0) {\n\t\t\t\t\tconst i = frontier.pop()\n\t\t\t\t\tgetNeighbours(i).forEach((i) => {\n\t\t\t\t\t\tif (connectivityMap[i] < 0) {\n\t\t\t\t\t\t\tconnectivityMap[i] = index\n\t\t\t\t\t\t\tfrontier.push(i)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!connectivityMap) {\n\t\t\t\tconnectivityMap = new Array<number>(size)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconnectivityMap.length = size\n\t\t\t}\n\t\t\tconnectivityMap.fill(-1, 0, size)\n\t\t\tlet index = 0\n\t\t\tfor (let i = 0; i < costMap.length; i++) {\n\t\t\t\tif (connectivityMap[i] >= 0) { index++; continue }\n\t\t\t\ttraverse(i, index)\n\t\t\t\tindex++\n\t\t\t}\n\t\t}\n\n\t\tconst getCost = (node: number, neighbour: number) => {\n\t\t\t// Cost of destination tile\n\t\t\treturn costMap[neighbour]\n\t\t}\n\n\t\tconst getHeuristic = (node: number, goal: number) => {\n\t\t\t// Euclidian distance to target\n\t\t\tconst p1 = hash2Tile(node)\n\t\t\tconst p2 = hash2Tile(goal)\n\t\t\treturn p1.dist(p2)\n\t\t}\n\n\t\tconst getNeighbours = (node: number, diagonals?: boolean) => {\n\t\t\tconst n = []\n\t\t\tconst x = Math.floor(node % numColumns)\n\t\t\tconst left = x > 0 &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Left) &&\n\t\t\t\tcostMap[node - 1] !== Infinity\n\t\t\tconst top = node >= numColumns &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Top) &&\n\t\t\t\tcostMap[node - numColumns] !== Infinity\n\t\t\tconst right = x < numColumns - 1 &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Right) &&\n\t\t\t\tcostMap[node + 1] !== Infinity\n\t\t\tconst bottom = node < numColumns * numRows - numColumns - 1 &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Bottom) &&\n\t\t\t\tcostMap[node + numColumns] !== Infinity\n\t\t\tif (diagonals) {\n\t\t\t\tif (left) {\n\t\t\t\t\tif (top) { n.push(node - numColumns - 1) }\n\t\t\t\t\tn.push(node - 1)\n\t\t\t\t\tif (bottom) { n.push(node + numColumns - 1) }\n\t\t\t\t}\n\t\t\t\tif (top) {\n\t\t\t\t\tn.push(node - numColumns)\n\t\t\t\t}\n\t\t\t\tif (right) {\n\t\t\t\t\tif (top) { n.push(node - numColumns + 1) }\n\t\t\t\t\tn.push(node + 1)\n\t\t\t\t\tif (bottom) { n.push(node + numColumns + 1) }\n\t\t\t\t}\n\t\t\t\tif (bottom) {\n\t\t\t\t\tn.push(node + numColumns)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (left) {\n\t\t\t\t\tn.push(node - 1)\n\t\t\t\t}\n\t\t\t\tif (top) {\n\t\t\t\t\tn.push(node - numColumns)\n\t\t\t\t}\n\t\t\t\tif (right) {\n\t\t\t\t\tn.push(node + 1)\n\t\t\t\t}\n\t\t\t\tif (bottom) {\n\t\t\t\t\tn.push(node + numColumns)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn n\n\t\t}\n\n\t\tconst levelComp: LevelComp = {\n\n\t\t\tid: \"level\",\n\n\t\t\ttileWidth() {\n\t\t\t\treturn opt.tileWidth\n\t\t\t},\n\n\t\t\ttileHeight() {\n\t\t\t\treturn opt.tileHeight\n\t\t\t},\n\n\t\t\tspawn(this: GameObj<LevelComp>, key: string | CompList<any>, ...args: Vec2Args): GameObj | null {\n\n\t\t\t\tconst p = vec2(...args)\n\n\t\t\t\tconst comps = (() => {\n\t\t\t\t\tif (typeof key === \"string\") {\n\t\t\t\t\t\tif (opt.tiles[key]) {\n\t\t\t\t\t\t\tif (typeof opt.tiles[key] !== \"function\") {\n\t\t\t\t\t\t\t\tthrow new KaboomError(\"Level symbol def must be a function returning a component list\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn opt.tiles[key](p)\n\t\t\t\t\t\t} else if (opt.wildcardTile) {\n\t\t\t\t\t\t\treturn opt.wildcardTile(key, p)\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (Array.isArray(key)) {\n\t\t\t\t\t\treturn key\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new KaboomError(\"Expected a symbol or a component list\")\n\t\t\t\t\t}\n\t\t\t\t})()\n\n\t\t\t\t// empty tile\n\t\t\t\tif (!comps) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\tlet hasPos = false\n\t\t\t\tlet hasTile = false\n\n\t\t\t\tfor (const comp of comps) {\n\t\t\t\t\tif (comp.id === \"tile\") hasTile = true\n\t\t\t\t\tif (comp.id === \"pos\") hasPos = true\n\t\t\t\t}\n\n\t\t\t\tif (!hasPos) comps.push(pos())\n\t\t\t\tif (!hasTile) comps.push(tile())\n\n\t\t\t\tconst obj = level.add(comps)\n\n\t\t\t\tif (hasPos) {\n\t\t\t\t\tobj.tilePosOffset = obj.pos.clone()\n\t\t\t\t}\n\n\t\t\t\tobj.tilePos = p\n\n\t\t\t\tif (spatialMap) {\n\t\t\t\t\tinsertIntoSpatialMap(obj)\n\t\t\t\t\tthis.trigger(\"spatial_map_changed\")\n\t\t\t\t\tthis.trigger(\"navigation_map_invalid\")\n\t\t\t\t}\n\n\t\t\t\treturn obj\n\n\t\t\t},\n\n\t\t\tnumColumns() {\n\t\t\t\treturn numColumns\n\t\t\t},\n\n\t\t\tnumRows() {\n\t\t\t\treturn numRows\n\t\t\t},\n\n\t\t\tlevelWidth() {\n\t\t\t\treturn numColumns * this.tileWidth()\n\t\t\t},\n\n\t\t\tlevelHeight() {\n\t\t\t\treturn numRows * this.tileHeight()\n\t\t\t},\n\n\t\t\ttile2Pos(...args: Vec2Args) {\n\t\t\t\treturn vec2(...args).scale(this.tileWidth(), this.tileHeight())\n\t\t\t},\n\n\t\t\tpos2Tile(...args: Vec2Args) {\n\t\t\t\tconst p = vec2(...args)\n\t\t\t\treturn vec2(\n\t\t\t\t\tMath.floor(p.x / this.tileWidth()),\n\t\t\t\t\tMath.floor(p.y / this.tileHeight()),\n\t\t\t\t)\n\t\t\t},\n\n\t\t\tgetSpatialMap() {\n\t\t\t\tif (!spatialMap) {\n\t\t\t\t\tcreateSpatialMap()\n\t\t\t\t}\n\t\t\t\treturn spatialMap\n\t\t\t},\n\n\t\t\tonSpatialMapChanged(this: GameObj<LevelComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"spatial_map_changed\", cb)\n\t\t\t},\n\n\t\t\tonNavigationMapInvalid(this: GameObj<LevelComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation_map_invalid\", cb)\n\t\t\t},\n\n\t\t\tgetAt(tilePos: Vec2) {\n\t\t\t\tif (!spatialMap) {\n\t\t\t\t\tcreateSpatialMap()\n\t\t\t\t}\n\t\t\t\tconst hash = tile2Hash(tilePos)\n\t\t\t\treturn spatialMap[hash] || []\n\t\t\t},\n\n\t\t\tupdate() {\n\t\t\t\tif (spatialMap) {\n\t\t\t\t\tupdateSpatialMap()\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tinvalidateNavigationMap() {\n\t\t\t\tcostMap = null\n\t\t\t\tedgeMap = null\n\t\t\t\tconnectivityMap = null\n\t\t\t},\n\n\t\t\tonNavigationMapChanged(this: GameObj<LevelComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation_map_changed\", cb)\n\t\t\t},\n\n\t\t\tgetTilePath(this: GameObj<LevelComp>, from: Vec2, to: Vec2, opts: PathFindOpt = {}) {\n\t\t\t\tif (!costMap) {\n\t\t\t\t\tcreateCostMap()\n\t\t\t\t}\n\t\t\t\tif (!edgeMap) {\n\t\t\t\t\tcreateEdgeMap()\n\t\t\t\t}\n\t\t\t\tif (!connectivityMap) {\n\t\t\t\t\tcreateConnectivityMap()\n\t\t\t\t}\n\n\t\t\t\t// Tiles are outside the grid\n\t\t\t\tif (from.x < 0 || from.x >= numColumns ||\n\t\t\t\t\tfrom.y < 0 || from.y >= numRows) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t\tif (to.x < 0 || to.x >= numColumns ||\n\t\t\t\t\tto.y < 0 || to.y >= numRows) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\tconst start = tile2Hash(from)\n\t\t\t\tconst goal = tile2Hash(to)\n\n\t\t\t\t// Tiles are not accessible\n\t\t\t\t// If we test the start tile, we may get stuck\n\t\t\t\t/*if (costMap[start] === Infinity) {\n\t\t\t\t\treturn null\n\t\t\t\t}*/\n\t\t\t\tif (costMap[goal] === Infinity) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\t// Same Tile, no waypoints needed\n\t\t\t\tif (start === goal) {\n\t\t\t\t\treturn []\n\t\t\t\t}\n\n\t\t\t\t// Tiles are not within the same section\n\t\t\t\t// If we test the start tile when invalid, we may get stuck\n\t\t\t\tif (connectivityMap[start] != -1 && connectivityMap[start] !== connectivityMap[goal]) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\t// Find a path\n\t\t\t\tinterface CostNode { cost: number, node: number }\n\t\t\t\tconst frontier = new BinaryHeap<CostNode>((a, b) => a.cost < b.cost)\n\t\t\t\tfrontier.insert({ cost: 0, node: start })\n\n\t\t\t\tconst cameFrom = new Map<number, number>()\n\t\t\t\tcameFrom.set(start, start)\n\t\t\t\tconst costSoFar = new Map<number, number>()\n\t\t\t\tcostSoFar.set(start, 0)\n\n\t\t\t\twhile (frontier.length !== 0) {\n\t\t\t\t\tconst current = frontier.remove()?.node\n\n\t\t\t\t\tif (current === goal)\n\t\t\t\t\t\tbreak\n\n\t\t\t\t\tconst neighbours = getNeighbours(current, opts.allowDiagonals)\n\t\t\t\t\tfor (const next of neighbours) {\n\t\t\t\t\t\tconst newCost = (costSoFar.get(current) || 0) +\n\t\t\t\t\t\t\tgetCost(current, next) +\n\t\t\t\t\t\t\tgetHeuristic(next, goal)\n\t\t\t\t\t\tif (!costSoFar.has(next) || newCost < costSoFar.get(next)) {\n\t\t\t\t\t\t\tcostSoFar.set(next, newCost)\n\t\t\t\t\t\t\tfrontier.insert({ cost: newCost, node: next })\n\t\t\t\t\t\t\tcameFrom.set(next, current)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst path = []\n\t\t\t\tlet node = goal\n\t\t\t\tconst p = hash2Tile(node)\n\t\t\t\tpath.push(p)\n\t\t\t\twhile (node !== start) {\n\t\t\t\t\tnode = cameFrom.get(node)\n\t\t\t\t\tconst p = hash2Tile(node)\n\t\t\t\t\tpath.push(p)\n\t\t\t\t}\n\t\t\t\treturn path.reverse()\n\t\t\t},\n\n\t\t\tgetPath(this: GameObj<LevelComp>, from: Vec2, to: Vec2, opts: PathFindOpt = {}) {\n\t\t\t\tconst tw = this.tileWidth()\n\t\t\t\tconst th = this.tileHeight()\n\t\t\t\tconst path = this.getTilePath(\n\t\t\t\t\tthis.pos2Tile(from),\n\t\t\t\t\tthis.pos2Tile(to),\n\t\t\t\t\topts,\n\t\t\t\t)\n\t\t\t\tif (path) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\tfrom,\n\t\t\t\t\t\t...path\n\t\t\t\t\t\t\t.slice(1, -1)\n\t\t\t\t\t\t\t.map((tilePos) => tilePos.scale(tw, th).add(tw / 2, th / 2)),\n\t\t\t\t\t\tto,\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t\tlevel.use(levelComp)\n\n\t\tlevel.onNavigationMapInvalid(() => {\n\t\t\tlevel.invalidateNavigationMap()\n\t\t\tlevel.trigger(\"navigation_map_changed\")\n\t\t})\n\n\t\tmap.forEach((row, i) => {\n\t\t\tconst keys = row.split(\"\")\n\t\t\tnumColumns = Math.max(keys.length, numColumns)\n\t\t\tkeys.forEach((key, j) => {\n\t\t\t\tlevel.spawn(key, vec2(j, i))\n\t\t\t})\n\t\t})\n\n\t\treturn level\n\n\t}\n\n\tfunction agent(opts: AgentCompOpt = {}) : AgentComp {\n\t\tlet target: Vec2 | null = null\n\t\tlet path: Vec2[] | null = null\n\t\tlet index: number | null = null\n\t\tlet navMapChangedEvent: EventController | null = null\n\t\treturn {\n\t\t\tid: \"agent\",\n\t\t\trequire: [\"pos\", \"tile\"],\n\t\t\tagentSpeed: opts.speed ?? 100,\n\t\t\tallowDiagonals: opts.allowDiagonals ?? true,\n\t\t\tgetDistanceToTarget(this: GameObj<AgentComp | PosComp>) {\n\t\t\t\treturn target ? this.pos.dist(target) : 0\n\t\t\t},\n\t\t\tgetNextLocation() {\n\t\t\t\treturn path && index ? path[index] : null\n\t\t\t},\n\t\t\tgetPath() {\n\t\t\t\treturn path ? path.slice() : null\n\t\t\t},\n\t\t\tgetTarget() {\n\t\t\t\treturn target\n\t\t\t},\n\t\t\tisNavigationFinished() {\n\t\t\t\treturn path ? index === null : true\n\t\t\t},\n\t\t\tisTargetReachable() {\n\t\t\t\treturn path !== null\n\t\t\t},\n\t\t\tisTargetReached(this: GameObj<AgentComp | PosComp>) {\n\t\t\t\treturn target ? this.pos.eq(target) : true\n\t\t\t},\n\t\t\tsetTarget(this: GameObj<AgentComp | TileComp | PosComp>, p: Vec2) {\n\t\t\t\ttarget = p\n\t\t\t\tpath = this.getLevel().getPath(this.pos, target, {\n\t\t\t\t\tallowDiagonals: this.allowDiagonals,\n\t\t\t\t})\n\t\t\t\tindex = path ? 0 : null\n\t\t\t\tif (path) {\n\t\t\t\t\tif (!navMapChangedEvent) {\n\t\t\t\t\t\tnavMapChangedEvent = this.getLevel().onNavigationMapChanged(() => {\n\t\t\t\t\t\t\tif (path && index !== null) {\n\t\t\t\t\t\t\t\tpath = this.getLevel().getPath(this.pos, target, {\n\t\t\t\t\t\t\t\t\tallowDiagonals: this.allowDiagonals,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tindex = path ? 0 : null\n\t\t\t\t\t\t\t\tif (path) {\n\t\t\t\t\t\t\t\t\tthis.trigger(\"navigation-next\", this, path[index])\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.trigger(\"navigation-ended\", this)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tthis.onDestroy(() => navMapChangedEvent.cancel())\n\t\t\t\t\t}\n\t\t\t\t\tthis.trigger(\"navigation-started\", this)\n\t\t\t\t\tthis.trigger(\"navigation-next\", this, path[index])\n\t\t\t\t} else {\n\t\t\t\t\tthis.trigger(\"navigation-ended\", this)\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate(this: GameObj<AgentComp | PosComp>) {\n\t\t\t\tif (path && index !== null) {\n\t\t\t\t\tif (this.pos.sdist(path[index]) < 2) {\n\t\t\t\t\t\tif (index === path.length - 1) {\n\t\t\t\t\t\t\tthis.pos = target.clone()\n\t\t\t\t\t\t\tindex = null\n\t\t\t\t\t\t\tthis.trigger(\"navigation-ended\", this)\n\t\t\t\t\t\t\tthis.trigger(\"target-reached\", this)\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex++\n\t\t\t\t\t\t\tthis.trigger(\"navigation-next\", this, path[index])\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tthis.moveTo(path[index], this.agentSpeed)\n\t\t\t\t}\n\t\t\t},\n\t\t\tonNavigationStarted(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation-started\", cb)\n\t\t\t},\n\t\t\tonNavigationNext(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation-next\", cb)\n\t\t\t},\n\t\t\tonNavigationEnded(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation-ended\", cb)\n\t\t\t},\n\t\t\tonTargetReached(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"target-reached\", cb)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn JSON.stringify({\n\t\t\t\t\ttarget: JSON.stringify(target),\n\t\t\t\t\tpath: JSON.stringify(path),\n\t\t\t\t})\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction record(frameRate?): Recording {\n\n\t\tconst stream = app.canvas().captureStream(frameRate)\n\t\tconst audioDest = audio.ctx.createMediaStreamDestination()\n\n\t\taudio.masterNode.connect(audioDest)\n\n\t\t// TODO: Enabling audio results in empty video if no audio received\n\t\t// const audioStream = audioDest.stream\n\t\t// const [firstAudioTrack] = audioStream.getAudioTracks()\n\n\t\t// stream.addTrack(firstAudioTrack);\n\n\t\tconst recorder = new MediaRecorder(stream)\n\t\tconst chunks = []\n\n\t\trecorder.ondataavailable = (e) => {\n\t\t\tif (e.data.size > 0) {\n\t\t\t\tchunks.push(e.data)\n\t\t\t}\n\t\t}\n\n\t\trecorder.onerror = () => {\n\t\t\taudio.masterNode.disconnect(audioDest)\n\t\t\tstream.getTracks().forEach(t => t.stop())\n\t\t}\n\n\t\trecorder.start()\n\n\t\treturn {\n\n\t\t\tresume() {\n\t\t\t\trecorder.resume()\n\t\t\t},\n\n\t\t\tpause() {\n\t\t\t\trecorder.pause()\n\t\t\t},\n\n\t\t\tstop(): Promise<Blob> {\n\t\t\t\trecorder.stop()\n\t\t\t\t// cleanup\n\t\t\t\taudio.masterNode.disconnect(audioDest)\n\t\t\t\tstream.getTracks().forEach(t => t.stop())\n\t\t\t\treturn new Promise((resolve) => {\n\t\t\t\t\trecorder.onstop = () => {\n\t\t\t\t\t\tresolve(new Blob(chunks, {\n\t\t\t\t\t\t\ttype: \"video/mp4\",\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tdownload(filename = \"kaboom.mp4\") {\n\t\t\t\tthis.stop().then((blob) => downloadBlob(filename, blob))\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction isFocused(): boolean {\n\t\treturn document.activeElement === app.canvas()\n\t}\n\n\tfunction destroy(obj: GameObj) {\n\t\tobj.destroy()\n\t}\n\n\t// aliases for root game obj operations\n\tconst add: KaboomCtx[\"add\"] = game.root.add.bind(game.root)\n\tconst readd: KaboomCtx[\"readd\"] = game.root.readd.bind(game.root)\n\tconst destroyAll: KaboomCtx[\"destroyAll\"] = game.root.removeAll.bind(game.root)\n\tconst get: KaboomCtx[\"get\"] = game.root.get.bind(game.root)\n\n\tfunction boom(speed: number = 2, size: number = 1): Comp {\n\t\tlet time = 0\n\t\treturn {\n\t\t\tid: \"boom\",\n\t\t\trequire: [ \"scale\" ],\n\t\t\tupdate(this: GameObj<ScaleComp>) {\n\t\t\t\tconst s = Math.sin(time * speed) * size\n\t\t\t\tif (s < 0) {\n\t\t\t\t\tthis.destroy()\n\t\t\t\t}\n\t\t\t\tthis.scale = vec2(s)\n\t\t\t\ttime += dt()\n\t\t\t},\n\t\t}\n\t}\n\n\tconst kaSprite = loadSprite(null, kaSpriteSrc)\n\tconst boomSprite = loadSprite(null, boomSpriteSrc)\n\n\tfunction addKaboom(p: Vec2, opt: BoomOpt = {}): GameObj {\n\n\t\tconst kaboom = add([\n\t\t\tpos(p),\n\t\t\tstay(),\n\t\t])\n\n\t\tconst speed = (opt.speed || 1) * 5\n\t\tconst s = opt.scale || 1\n\n\t\tkaboom.add([\n\t\t\tsprite(boomSprite),\n\t\t\tscale(0),\n\t\t\tanchor(\"center\"),\n\t\t\tboom(speed, s),\n\t\t\t...opt.comps ?? [],\n\t\t])\n\n\t\tconst ka = kaboom.add([\n\t\t\tsprite(kaSprite),\n\t\t\tscale(0),\n\t\t\tanchor(\"center\"),\n\t\t\ttimer(),\n\t\t\t...opt.comps ?? [],\n\t\t])\n\n\t\tka.wait(0.4 / speed, () => ka.use(boom(speed, s)))\n\t\tka.onDestroy(() => kaboom.destroy())\n\n\t\treturn kaboom\n\n\t}\n\n\tfunction updateFrame() {\n\t\t// update every obj\n\t\tgame.root.update()\n\t}\n\n\tclass Collision {\n\t\tsource: GameObj\n\t\ttarget: GameObj\n\t\tdisplacement: Vec2\n\t\tresolved: boolean = false\n\t\tconstructor(source: GameObj, target: GameObj, dis: Vec2, resolved = false) {\n\t\t\tthis.source = source\n\t\t\tthis.target = target\n\t\t\tthis.displacement = dis\n\t\t\tthis.resolved = resolved\n\t\t}\n\t\treverse() {\n\t\t\treturn new Collision(\n\t\t\t\tthis.target,\n\t\t\t\tthis.source,\n\t\t\t\tthis.displacement.scale(-1),\n\t\t\t\tthis.resolved,\n\t\t\t)\n\t\t}\n\t\thasOverlap() {\n\t\t\treturn !this.displacement.isZero()\n\t\t}\n\t\tisLeft() {\n\t\t\treturn this.displacement.x > 0\n\t\t}\n\t\tisRight() {\n\t\t\treturn this.displacement.x < 0\n\t\t}\n\t\tisTop() {\n\t\t\treturn this.displacement.y > 0\n\t\t}\n\t\tisBottom() {\n\t\t\treturn this.displacement.y < 0\n\t\t}\n\t\tpreventResolution() {\n\t\t\tthis.resolved = true\n\t\t}\n\t}\n\n\tfunction checkFrame() {\n\n\t\t// TODO: persistent grid?\n\t\t// start a spatial hash grid for more efficient collision detection\n\t\tconst grid: Record<number, Record<number, GameObj<AreaComp>[]>> = {}\n\t\tconst cellSize = gopt.hashGridSize || DEF_HASH_GRID_SIZE\n\n\t\t// current transform\n\t\tlet tr = new Mat4()\n\n\t\t// a local transform stack\n\t\tconst stack = []\n\n\t\tfunction checkObj(obj: GameObj) {\n\n\t\t\tstack.push(tr.clone())\n\n\t\t\t// Update object transform here. This will be the transform later used in rendering.\n\t\t\tif (obj.pos) tr.translate(obj.pos)\n\t\t\tif (obj.scale) tr.scale(obj.scale)\n\t\t\tif (obj.angle) tr.rotate(obj.angle)\n\t\t\tobj.transform = tr.clone()\n\n\t\t\tif (obj.c(\"area\") && !obj.paused) {\n\n\t\t\t\t// TODO: only update worldArea if transform changed\n\t\t\t\tconst aobj = obj as GameObj<AreaComp>\n\t\t\t\tconst area = aobj.worldArea()\n\t\t\t\tconst bbox = area.bbox()\n\n\t\t\t\t// Get spatial hash grid coverage\n\t\t\t\tconst xmin = Math.floor(bbox.pos.x / cellSize)\n\t\t\t\tconst ymin = Math.floor(bbox.pos.y / cellSize)\n\t\t\t\tconst xmax = Math.ceil((bbox.pos.x + bbox.width) / cellSize)\n\t\t\t\tconst ymax = Math.ceil((bbox.pos.y + bbox.height) / cellSize)\n\n\t\t\t\t// Cache objs that are already checked\n\t\t\t\tconst checked = new Set()\n\n\t\t\t\t// insert & check against all covered grids\n\t\t\t\tfor (let x = xmin; x <= xmax; x++) {\n\t\t\t\t\tfor (let y = ymin; y <= ymax; y++) {\n\t\t\t\t\t\tif(!grid[x]) {\n\t\t\t\t\t\t\tgrid[x] = {}\n\t\t\t\t\t\t\tgrid[x][y] = [aobj]\n\t\t\t\t\t\t} else if(!grid[x][y]) {\n\t\t\t\t\t\t\tgrid[x][y] = [aobj]\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst cell = grid[x][y]\n\t\t\t\t\t\t\tcheck: for (const other of cell) {\n\t\t\t\t\t\t\t\tif (other.paused) continue\n\t\t\t\t\t\t\t\tif (!other.exists()) continue\n\t\t\t\t\t\t\t\tif (checked.has(other.id)) continue\n\t\t\t\t\t\t\t\tfor (const tag of aobj.collisionIgnore) {\n\t\t\t\t\t\t\t\t\tif (other.is(tag)) {\n\t\t\t\t\t\t\t\t\t\tcontinue check\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor (const tag of other.collisionIgnore) {\n\t\t\t\t\t\t\t\t\tif (aobj.is(tag)) {\n\t\t\t\t\t\t\t\t\t\tcontinue check\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// TODO: cache the world area here\n\t\t\t\t\t\t\t\tconst res = sat(aobj.worldArea(), other.worldArea())\n\t\t\t\t\t\t\t\tif (res) {\n\t\t\t\t\t\t\t\t\t// TODO: rehash if the object position is changed after resolution?\n\t\t\t\t\t\t\t\t\tconst col1 = new Collision(aobj, other, res)\n\t\t\t\t\t\t\t\t\taobj.trigger(\"collideUpdate\", other, col1)\n\t\t\t\t\t\t\t\t\tconst col2 = col1.reverse()\n\t\t\t\t\t\t\t\t\t// resolution only has to happen once\n\t\t\t\t\t\t\t\t\tcol2.resolved = col1.resolved\n\t\t\t\t\t\t\t\t\tother.trigger(\"collideUpdate\", aobj, col2)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tchecked.add(other.id)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcell.push(aobj)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tobj.children.forEach(checkObj)\n\t\t\ttr = stack.pop()\n\n\t\t}\n\n\t\tcheckObj(game.root)\n\n\t}\n\n\tfunction drawFrame() {\n\n\t\t// calculate camera matrix\n\t\tconst cam = game.cam\n\t\tconst shake = Vec2.fromAngle(rand(0, 360)).scale(cam.shake)\n\n\t\tcam.shake = lerp(cam.shake, 0, 5 * dt())\n\t\tcam.transform = new Mat4()\n\t\t\t.translate(center())\n\t\t\t.scale(cam.scale)\n\t\t\t.rotate(cam.angle)\n\t\t\t.translate((cam.pos ?? center()).scale(-1).add(shake))\n\n\t\tgame.root.draw()\n\t\tflush()\n\n\t}\n\n\tfunction drawLoadScreen() {\n\n\t\tconst progress = loadProgress()\n\n\t\tif (game.events.numListeners(\"loading\") > 0) {\n\t\t\tgame.events.trigger(\"loading\", progress)\n\t\t} else {\n\t\t\tdrawUnscaled(() => {\n\t\t\t\tconst w = width() / 2\n\t\t\t\tconst h = 24\n\t\t\t\tconst pos = vec2(width() / 2, height() / 2).sub(vec2(w / 2, h / 2))\n\t\t\t\tdrawRect({\n\t\t\t\t\tpos: vec2(0),\n\t\t\t\t\twidth: width(),\n\t\t\t\t\theight: height(),\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t})\n\t\t\t\tdrawRect({\n\t\t\t\t\tpos: pos,\n\t\t\t\t\twidth: w,\n\t\t\t\t\theight: h,\n\t\t\t\t\tfill: false,\n\t\t\t\t\toutline: {\n\t\t\t\t\t\twidth: 4,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\tdrawRect({\n\t\t\t\t\tpos: pos,\n\t\t\t\t\twidth: w * progress,\n\t\t\t\t\theight: h,\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t}\n\n\tfunction drawInspectText(pos, txt) {\n\n\t\tdrawUnscaled(() => {\n\n\t\t\tconst pad = vec2(8)\n\n\t\t\tpushTransform()\n\t\t\tpushTranslate(pos)\n\n\t\t\tconst ftxt = formatText({\n\t\t\t\ttext: txt,\n\t\t\t\tfont: DBG_FONT,\n\t\t\t\tsize: 16,\n\t\t\t\tpos: pad,\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\tfixed: true,\n\t\t\t})\n\n\t\t\tconst bw = ftxt.width + pad.x * 2\n\t\t\tconst bh = ftxt.height + pad.x * 2\n\n\t\t\tif (pos.x + bw >= width()) {\n\t\t\t\tpushTranslate(vec2(-bw, 0))\n\t\t\t}\n\n\t\t\tif (pos.y + bh >= height()) {\n\t\t\t\tpushTranslate(vec2(0, -bh))\n\t\t\t}\n\n\t\t\tdrawRect({\n\t\t\t\twidth: bw,\n\t\t\t\theight: bh,\n\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\tradius: 4,\n\t\t\t\topacity: 0.8,\n\t\t\t\tfixed: true,\n\t\t\t})\n\n\t\t\tdrawFormattedText(ftxt)\n\t\t\tpopTransform()\n\n\t\t})\n\n\t}\n\n\tfunction drawDebug() {\n\n\t\tif (debug.inspect) {\n\n\t\t\tlet inspecting = null\n\n\t\t\tfor (const obj of game.root.get(\"*\", { recursive: true })) {\n\t\t\t\tif (obj.c(\"area\") && obj.isHovering()) {\n\t\t\t\t\tinspecting = obj\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgame.root.drawInspect()\n\n\t\t\tif (inspecting) {\n\n\t\t\t\tconst lines = []\n\t\t\t\tconst data = inspecting.inspect()\n\n\t\t\t\tfor (const tag in data) {\n\t\t\t\t\tif (data[tag]) {\n\t\t\t\t\t\tlines.push(`${tag}: ${data[tag]}`)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlines.push(`${tag}`)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdrawInspectText(contentToView(mousePos()), lines.join(\"\\n\"))\n\n\t\t\t}\n\n\t\t\tdrawInspectText(vec2(8), `FPS: ${debug.fps()}`)\n\n\t\t}\n\n\t\tif (debug.paused) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\t// top right corner\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(width(), 0)\n\t\t\t\tpushTranslate(-8, 8)\n\n\t\t\t\tconst size = 32\n\n\t\t\t\t// bg\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: size,\n\t\t\t\t\theight: size,\n\t\t\t\t\tanchor: \"topright\",\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t\topacity: 0.8,\n\t\t\t\t\tradius: 4,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\t// pause icon\n\t\t\t\tfor (let i = 1; i <= 2; i++) {\n\t\t\t\t\tdrawRect({\n\t\t\t\t\t\twidth: 4,\n\t\t\t\t\t\theight: size * 0.6,\n\t\t\t\t\t\tanchor: \"center\",\n\t\t\t\t\t\tpos: vec2(-size / 3 * i, size * 0.5),\n\t\t\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\t\t\tradius: 2,\n\t\t\t\t\t\tfixed: true,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t\tif (debug.timeScale !== 1) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\t// bottom right corner\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(width(), height())\n\t\t\t\tpushTranslate(-8, -8)\n\n\t\t\t\tconst pad = 8\n\n\t\t\t\t// format text first to get text size\n\t\t\t\tconst ftxt = formatText({\n\t\t\t\t\ttext: debug.timeScale.toFixed(1),\n\t\t\t\t\tfont: DBG_FONT,\n\t\t\t\t\tsize: 16,\n\t\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\t\tpos: vec2(-pad),\n\t\t\t\t\tanchor: \"botright\",\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\t// bg\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: ftxt.width + pad * 2 + pad * 4,\n\t\t\t\t\theight: ftxt.height + pad * 2,\n\t\t\t\t\tanchor: \"botright\",\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t\topacity: 0.8,\n\t\t\t\t\tradius: 4,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\t// fast forward / slow down icon\n\t\t\t\tfor (let i = 0; i < 2; i++) {\n\t\t\t\t\tconst flipped = debug.timeScale < 1\n\t\t\t\t\tdrawTriangle({\n\t\t\t\t\t\tp1: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad),\n\t\t\t\t\t\tp2: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad - ftxt.height),\n\t\t\t\t\t\tp3: vec2(-ftxt.width - pad * (flipped ? 3.5 : 2), -pad - ftxt.height / 2),\n\t\t\t\t\t\tpos: vec2(-i * pad * 1 + (flipped ? -pad * 0.5 : 0), 0),\n\t\t\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\t\t\tfixed: true,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t// text\n\t\t\t\tdrawFormattedText(ftxt)\n\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t\tif (debug.curRecording) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(0, height())\n\t\t\t\tpushTranslate(24, -24)\n\n\t\t\t\tdrawCircle({\n\t\t\t\t\tradius: 12,\n\t\t\t\t\tcolor: rgb(255, 0, 0),\n\t\t\t\t\topacity: wave(0, 1, app.time() * 4),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t\tif (debug.showLog && game.logs.length > 0) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(0, height())\n\t\t\t\tpushTranslate(8, -8)\n\n\t\t\t\tconst pad = 8\n\t\t\t\tconst logs = []\n\n\t\t\t\tfor (const log of game.logs) {\n\t\t\t\t\tlet str = \"\"\n\t\t\t\t\tconst style = log.msg instanceof Error ? \"error\" : \"info\"\n\t\t\t\t\tstr += `[time]${log.time.toFixed(2)}[/time]`\n\t\t\t\t\tstr += \" \"\n\t\t\t\t\tstr += `[${style}]${log.msg?.toString ? log.msg.toString() : log.msg}[/${style}]`\n\t\t\t\t\tlogs.push(str)\n\t\t\t\t}\n\n\t\t\t\tgame.logs = game.logs\n\t\t\t\t\t.filter((log) => app.time() - log.time < (gopt.logTime || LOG_TIME))\n\n\t\t\t\tconst ftext = formatText({\n\t\t\t\t\ttext: logs.join(\"\\n\"),\n\t\t\t\t\tfont: DBG_FONT,\n\t\t\t\t\tpos: vec2(pad, -pad),\n\t\t\t\t\tanchor: \"botleft\",\n\t\t\t\t\tsize: 16,\n\t\t\t\t\twidth: width() * 0.6,\n\t\t\t\t\tlineSpacing: pad / 2,\n\t\t\t\t\tfixed: true,\n\t\t\t\t\tstyles: {\n\t\t\t\t\t\t\"time\": { color: rgb(127, 127, 127) },\n\t\t\t\t\t\t\"info\": { color: rgb(255, 255, 255) },\n\t\t\t\t\t\t\"error\": { color: rgb(255, 0, 127) },\n\t\t\t\t\t},\n\t\t\t\t})\n\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: ftext.width + pad * 2,\n\t\t\t\t\theight: ftext.height + pad * 2,\n\t\t\t\t\tanchor: \"botleft\",\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t\tradius: 4,\n\t\t\t\t\topacity: 0.8,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tdrawFormattedText(ftext)\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t}\n\n\tfunction onLoading(action: (progress: number) => void) {\n\t\tgame.events.on(\"loading\", action)\n\t}\n\n\tfunction onResize(action: () => void) {\n\t\tapp.onResize(action)\n\t}\n\n\tfunction onError(action: (err: Error) => void) {\n\t\tgame.events.on(\"error\", action)\n\t}\n\n\tfunction handleErr(err: Error) {\n\n\t\taudio.ctx.suspend()\n\n\t\t// TODO: this should only run once\n\t\tapp.run(() => {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\tconst pad = 32\n\t\t\t\tconst gap = 16\n\t\t\t\tconst gw = width()\n\t\t\t\tconst gh = height()\n\n\t\t\t\tconst textStyle = {\n\t\t\t\t\tsize: 36,\n\t\t\t\t\twidth: gw - pad * 2,\n\t\t\t\t\tletterSpacing: 4,\n\t\t\t\t\tlineSpacing: 4,\n\t\t\t\t\tfont: DBG_FONT,\n\t\t\t\t\tfixed: true,\n\t\t\t\t}\n\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: gw,\n\t\t\t\t\theight: gh,\n\t\t\t\t\tcolor: rgb(0, 0, 255),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tconst title = formatText({\n\t\t\t\t\t...textStyle,\n\t\t\t\t\ttext: \"Error\",\n\t\t\t\t\tpos: vec2(pad),\n\t\t\t\t\tcolor: rgb(255, 128, 0),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tdrawFormattedText(title)\n\n\t\t\t\tdrawText({\n\t\t\t\t\t...textStyle,\n\t\t\t\t\ttext: err.message,\n\t\t\t\t\tpos: vec2(pad, pad + title.height + gap),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tpopTransform()\n\t\t\t\tgame.events.trigger(\"error\", err)\n\n\t\t\t})\n\n\t\t})\n\n\t}\n\n\tfunction onCleanup(action: () => void) {\n\t\tgc.push(action)\n\t}\n\n\tfunction quit() {\n\n\t\tgame.events.onOnce(\"frameEnd\", () => {\n\n\t\t\tapp.quit()\n\n\t\t\tfor (const name in winEvents) {\n\t\t\t\twindow.removeEventListener(name, winEvents[name])\n\t\t\t}\n\n\t\t\t// clear canvas\n\t\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT)\n\n\t\t\t// unbind everything\n\t\t\tconst numTextureUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)\n\n\t\t\tfor (let unit = 0; unit < numTextureUnits; unit++) {\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + unit)\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, null)\n\t\t\t\tgl.bindTexture(gl.TEXTURE_CUBE_MAP, null)\n\t\t\t}\n\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null)\n\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null)\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null)\n\n\t\t\t// run all scattered gc events\n\t\t\tgc.forEach((f) => f())\n\n\t\t\t// delete webgl buffers\n\t\t\tgl.deleteBuffer(gfx.vbuf)\n\t\t\tgl.deleteBuffer(gfx.ibuf)\n\n\t\t})\n\n\t}\n\n\tfunction tween<V extends LerpValue>(\n\t\tfrom: V,\n\t\tto: V,\n\t\tduration: number,\n\t\tsetValue: (value: V) => void,\n\t\teaseFunc = easings.linear,\n\t): TweenController {\n\t\tlet curTime = 0\n\t\tconst onEndEvents: Array<() => void> = []\n\t\tconst ev = onUpdate(() => {\n\t\t\tcurTime += dt()\n\t\t\tconst t = Math.min(curTime / duration, 1)\n\t\t\tsetValue(lerp(from, to, easeFunc(t)))\n\t\t\tif (t === 1) {\n\t\t\t\tev.cancel()\n\t\t\t\tsetValue(to)\n\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t}\n\t\t})\n\t\treturn {\n\t\t\tget paused() {\n\t\t\t\treturn ev.paused\n\t\t\t},\n\t\t\tset paused(p) {\n\t\t\t\tev.paused = p\n\t\t\t},\n\t\t\tonEnd(action: () => void) {\n\t\t\t\tonEndEvents.push(action)\n\t\t\t},\n\t\t\tthen(action: () => void) {\n\t\t\t\tthis.onEnd(action)\n\t\t\t\treturn this\n\t\t\t},\n\t\t\tcancel() {\n\t\t\t\tev.cancel()\n\t\t\t},\n\t\t\tfinish() {\n\t\t\t\tev.cancel()\n\t\t\t\tsetValue(to)\n\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t},\n\t\t}\n\t}\n\n\tlet isFirstFrame = true\n\n\t// main game loop\n\tapp.run(() => {\n\n\t\tif (!assets.loaded) {\n\t\t\tif (loadProgress() === 1 && !isFirstFrame) {\n\t\t\t\tassets.loaded = true\n\t\t\t\tgame.events.trigger(\"load\")\n\t\t\t}\n\t\t}\n\n\t\tif (!assets.loaded && gopt.loadingScreen !== false || isFirstFrame) {\n\t\t\tframeStart()\n\t\t\t// TODO: Currently if assets are not initially loaded no updates or timers will be run, however they will run if loadingScreen is set to false. What's the desired behavior or should we make them consistent?\n\t\t\tdrawLoadScreen()\n\t\t\tframeEnd()\n\t\t} else {\n\t\t\tif (!debug.paused) updateFrame()\n\t\t\tcheckFrame()\n\t\t\tframeStart()\n\t\t\tdrawFrame()\n\t\t\tif (gopt.debug !== false) drawDebug()\n\t\t\tframeEnd()\n\t\t}\n\n\t\tif (isFirstFrame) {\n\t\t\tisFirstFrame = false\n\t\t}\n\n\t\tgame.events.trigger(\"frameEnd\")\n\n\t})\n\n\t// update viewport based on user setting and fullscreen state\n\tfunction updateViewport() {\n\n\t\t// content size (scaled content size, with scale, stretch and letterbox)\n\t\t// view size (unscaled viewport size)\n\t\t// window size (will be the same as view size except letterbox mode)\n\n\t\t// canvas size\n\t\tconst pd = pixelDensity\n\t\tconst cw = gl.drawingBufferWidth / pd\n\t\tconst ch = gl.drawingBufferHeight / pd\n\n\t\tif (gopt.letterbox) {\n\n\t\t\tif (!gopt.width || !gopt.height) {\n\t\t\t\tthrow new KaboomError(\"Letterboxing requires width and height defined.\")\n\t\t\t}\n\n\t\t\tconst rc = cw / ch\n\t\t\tconst rg = gopt.width / gopt.height\n\n\t\t\tif (rc > rg) {\n\t\t\t\tconst sw = ch * rg\n\t\t\t\tconst x = (cw - sw) / 2\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: x,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: sw,\n\t\t\t\t\theight: ch,\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst sh = cw / rg\n\t\t\t\tconst y = (ch - sh) / 2\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: y,\n\t\t\t\t\twidth: cw,\n\t\t\t\t\theight: sh,\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn\n\n\t\t}\n\n\t\tif (gopt.stretch) {\n\t\t\tif (!gopt.width || !gopt.height) {\n\t\t\t\tthrow new KaboomError(\"Stretching requires width and height defined.\")\n\t\t\t}\n\t\t}\n\n\t\tgfx.viewport = {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: cw,\n\t\t\theight: ch,\n\t\t}\n\n\t}\n\n\tfunction initEvents() {\n\n\t\tapp.onHide(() => {\n\t\t\tif (!gopt.backgroundAudio) {\n\t\t\t\taudio.ctx.suspend()\n\t\t\t}\n\t\t})\n\n\t\tapp.onShow(() => {\n\t\t\tif (!gopt.backgroundAudio) {\n\t\t\t\taudio.ctx.resume()\n\t\t\t}\n\t\t})\n\n\t\tapp.onResize(() => {\n\t\t\tif (app.isFullscreen()) return\n\t\t\tconst fixedSize = gopt.width && gopt.height\n\t\t\tif (fixedSize && !gopt.stretch && !gopt.letterbox) return\n\t\t\tcanvas.width = canvas.offsetWidth * pixelDensity\n\t\t\tcanvas.height = canvas.offsetHeight * pixelDensity\n\t\t\tupdateViewport()\n\t\t\tif (!fixedSize) {\n\t\t\t\tgfx.frameBuffer.free()\n\t\t\t\tgfx.frameBuffer = new FrameBuffer(gl.drawingBufferWidth, gl.drawingBufferHeight)\n\t\t\t\tgfx.width = gl.drawingBufferWidth / pixelDensity\n\t\t\t\tgfx.height = gl.drawingBufferHeight / pixelDensity\n\t\t\t}\n\t\t})\n\n\t\tif (gopt.debug !== false) {\n\t\t\tenterDebugMode()\n\t\t}\n\n\t\tif (gopt.burp) {\n\t\t\tenterBurpMode()\n\t\t}\n\n\t}\n\n\tupdateViewport()\n\tinitEvents()\n\n\t// the exported ctx handle\n\tconst ctx: KaboomCtx = {\n\t\tVERSION,\n\t\t// asset load\n\t\tloadRoot,\n\t\tloadProgress,\n\t\tloadSprite,\n\t\tloadSpriteAtlas,\n\t\tloadSound,\n\t\tloadBitmapFont,\n\t\tloadFont,\n\t\tloadShader,\n\t\tloadShaderURL,\n\t\tloadAseprite,\n\t\tloadPedit,\n\t\tloadBean,\n\t\tloadJSON,\n\t\tload,\n\t\tgetSprite,\n\t\tgetSound,\n\t\tgetFont,\n\t\tgetBitmapFont,\n\t\tgetShader,\n\t\tgetAsset,\n\t\tAsset,\n\t\tSpriteData,\n\t\tSoundData,\n\t\t// query\n\t\twidth,\n\t\theight,\n\t\tcenter,\n\t\tdt,\n\t\ttime: app.time,\n\t\tscreenshot: app.screenshot,\n\t\trecord,\n\t\tisFocused,\n\t\tsetCursor: app.setCursor,\n\t\tgetCursor: app.getCursor,\n\t\tsetCursorLocked: app.setCursorLocked,\n\t\tisCursorLocked: app.isCursorLocked,\n\t\tsetFullscreen: app.setFullscreen,\n\t\tisFullscreen: app.isFullscreen,\n\t\tisTouchscreen: app.isTouchscreen,\n\t\tonLoad,\n\t\tonLoading,\n\t\tonResize,\n\t\tonGamepadConnect: app.onGamepadConnect,\n\t\tonGamepadDisconnect: app.onGamepadDisconnect,\n\t\tonError,\n\t\tonCleanup,\n\t\t// misc\n\t\tcamPos,\n\t\tcamScale,\n\t\tcamRot,\n\t\tshake,\n\t\ttoScreen,\n\t\ttoWorld,\n\t\tsetGravity,\n\t\tgetGravity,\n\t\tsetBackground,\n\t\tgetBackground,\n\t\tgetGamepads: app.getGamepads,\n\t\t// obj\n\t\tadd,\n\t\tmake,\n\t\tdestroy,\n\t\tdestroyAll,\n\t\tget,\n\t\treadd,\n\t\t// comps\n\t\tpos,\n\t\tscale,\n\t\trotate,\n\t\tcolor,\n\t\topacity,\n\t\tanchor,\n\t\tarea,\n\t\tsprite,\n\t\ttext,\n\t\trect,\n\t\tcircle,\n\t\tuvquad,\n\t\toutline,\n\t\tbody,\n\t\tdoubleJump,\n\t\tshader,\n\t\ttimer,\n\t\tfixed,\n\t\tstay,\n\t\thealth,\n\t\tlifespan,\n\t\tz,\n\t\tmove,\n\t\toffscreen,\n\t\tfollow,\n\t\tstate,\n\t\tfadeIn,\n\t\tmask,\n\t\ttile,\n\t\tagent,\n\t\t// group events\n\t\ton,\n\t\tonUpdate,\n\t\tonDraw,\n\t\tonAdd,\n\t\tonDestroy,\n\t\tonClick,\n\t\tonCollide,\n\t\tonCollideUpdate,\n\t\tonCollideEnd,\n\t\tonHover,\n\t\tonHoverUpdate,\n\t\tonHoverEnd,\n\t\t// input\n\t\tonKeyDown: app.onKeyDown,\n\t\tonKeyPress: app.onKeyPress,\n\t\tonKeyPressRepeat: app.onKeyPressRepeat,\n\t\tonKeyRelease: app.onKeyRelease,\n\t\tonMouseDown: app.onMouseDown,\n\t\tonMousePress: app.onMousePress,\n\t\tonMouseRelease: app.onMouseRelease,\n\t\tonMouseMove: app.onMouseMove,\n\t\tonCharInput: app.onCharInput,\n\t\tonTouchStart: app.onTouchStart,\n\t\tonTouchMove: app.onTouchMove,\n\t\tonTouchEnd: app.onTouchEnd,\n\t\tonScroll: app.onScroll,\n\t\tonHide: app.onHide,\n\t\tonShow: app.onShow,\n\t\tonGamepadButtonDown: app.onGamepadButtonDown,\n\t\tonGamepadButtonPress: app.onGamepadButtonPress,\n\t\tonGamepadButtonRelease: app.onGamepadButtonRelease,\n\t\tonGamepadStick: app.onGamepadStick,\n\t\tmousePos: mousePos,\n\t\tmouseDeltaPos: app.mouseDeltaPos,\n\t\tisKeyDown: app.isKeyDown,\n\t\tisKeyPressed: app.isKeyPressed,\n\t\tisKeyPressedRepeat: app.isKeyPressedRepeat,\n\t\tisKeyReleased: app.isKeyReleased,\n\t\tisMouseDown: app.isMouseDown,\n\t\tisMousePressed: app.isMousePressed,\n\t\tisMouseReleased: app.isMouseReleased,\n\t\tisMouseMoved: app.isMouseMoved,\n\t\tisGamepadButtonPressed: app.isGamepadButtonPressed,\n\t\tisGamepadButtonDown: app.isGamepadButtonDown,\n\t\tisGamepadButtonReleased: app.isGamepadButtonReleased,\n\t\t// getGamepadStick,\n\t\tcharInputted: app.charInputted,\n\t\t// timer\n\t\tloop,\n\t\twait,\n\t\t// audio\n\t\tplay,\n\t\tvolume,\n\t\tburp,\n\t\taudioCtx: audio.ctx,\n\t\t// math\n\t\tTimer,\n\t\tLine,\n\t\tRect,\n\t\tCircle,\n\t\tPolygon,\n\t\tVec2,\n\t\tColor,\n\t\tMat4,\n\t\tQuad,\n\t\tRNG,\n\t\trand,\n\t\trandi,\n\t\trandSeed,\n\t\tvec2,\n\t\trgb,\n\t\thsl2rgb,\n\t\tquad,\n\t\tchoose,\n\t\tchance,\n\t\tlerp,\n\t\ttween,\n\t\teasings,\n\t\tmap,\n\t\tmapc,\n\t\twave,\n\t\tdeg2rad,\n\t\trad2deg,\n\t\tclamp,\n\t\ttestLineLine,\n\t\ttestRectRect,\n\t\ttestRectLine,\n\t\ttestRectPoint,\n\t\ttestCirclePolygon,\n\t\ttestLinePoint,\n\t\ttestLineCircle,\n\t\t// raw draw\n\t\tdrawSprite,\n\t\tdrawText,\n\t\tformatText,\n\t\tdrawRect,\n\t\tdrawLine,\n\t\tdrawLines,\n\t\tdrawTriangle,\n\t\tdrawCircle,\n\t\tdrawEllipse,\n\t\tdrawUVQuad,\n\t\tdrawPolygon,\n\t\tdrawFormattedText,\n\t\tdrawMasked,\n\t\tdrawSubtracted,\n\t\tpushTransform,\n\t\tpopTransform,\n\t\tpushTranslate,\n\t\tpushScale,\n\t\tpushRotate,\n\t\tpushMatrix,\n\t\tusePostEffect,\n\t\t// debug\n\t\tdebug,\n\t\t// scene\n\t\tscene,\n\t\tgo,\n\t\tonSceneLeave,\n\t\t// level\n\t\taddLevel,\n\t\t// storage\n\t\tgetData,\n\t\tsetData,\n\t\tdownload,\n\t\tdownloadJSON,\n\t\tdownloadText,\n\t\tdownloadBlob,\n\t\t// plugin\n\t\tplug,\n\t\t// char sets\n\t\tASCII_CHARS,\n\t\t// dom\n\t\tcanvas: app.canvas(),\n\t\t// misc\n\t\taddKaboom,\n\t\t// dirs\n\t\tLEFT: Vec2.LEFT,\n\t\tRIGHT: Vec2.RIGHT,\n\t\tUP: Vec2.UP,\n\t\tDOWN: Vec2.DOWN,\n\t\t// colors\n\t\tRED: Color.RED,\n\t\tGREEN: Color.GREEN,\n\t\tBLUE: Color.BLUE,\n\t\tYELLOW: Color.YELLOW,\n\t\tMAGENTA: Color.MAGENTA,\n\t\tCYAN: Color.CYAN,\n\t\tWHITE: Color.WHITE,\n\t\tBLACK: Color.BLACK,\n\t\tquit,\n\t\t// helpers\n\t\tEvent,\n\t\tEventHandler,\n\t\tEventController,\n\t\tKaboomError,\n\t}\n\n\tif (gopt.plugins) {\n\t\tgopt.plugins.forEach(plug)\n\t}\n\n\t// export everything to window if global is set\n\tif (gopt.global !== false) {\n\t\tfor (const k in ctx) {\n\t\t\twindow[k] = ctx[k]\n\t\t}\n\t}\n\n\tif (gopt.focus !== false) {\n\t\tapp.canvas().focus()\n\t}\n\n\treturn ctx\n\n}\n", "// === AUTHORHEADER ===\n// @SpcFORK\n// $desc: Kernel\n// === ===\n\nimport kaboom from \"kaboom\"\nimport \"kaboom/global\"\n\nimport \"./kernel/filesys\"\n\n// ---\n\nkaboom()\n\nlet L$ = (url = '') => location.href + url\n\n// @ Loading Fonts\n{\n\n  var resFont = async (fontName = '', as = fontName) => {\n    return loadFont(\n      as,\n      L$('code/fonts/' + fontName + '.ttf')\n    )\n  }\n\n  var handleRubik = async (instance = '') => {\n    let newp = 'Rubik_' + instance\n    return resFont(\n      newp + '/' + newp,\n      newp\n    )\n  }\n\n  // ---\n\n  let tempFontArr = [\n    'Vinyl',\n    'Spray_Paint',\n    'Broken_Fax',\n    // 'Iso',\n    'Puddles',\n  ]\n\n  tempFontArr.map((inst) => handleRubik(inst))\n\n}\n\nconst fonts_ = {\n  CASE: (fontName = '') => 'Rubik_' + fontName,\n  Vinyl: () => fonts_.CASE('Vinyl'),\n  Spray_Paint: () => fonts_.CASE('Spray_Paint'),\n  Broken_Fax: () => fonts_.CASE('Broken_Fax'),\n  // Iso: () => fonts_.CASE('Iso'),\n  Puddles: () => fonts_.CASE('Puddles'),\n}\n\n// ---\n\nfunction createBeatHandler() {\n  let lastBeatTime = 0;\n\n  return {\n    activateBeat: function(bpm) {\n      const beatInterval = 60000 / bpm;\n      let currentTime = time(); // Kaboom's time() function returns the current game time in seconds\n      if (currentTime - lastBeatTime > beatInterval / 1000) { // Convert beatInterval to seconds\n        lastBeatTime = currentTime;\n        return true;\n      } else {\n        return false;\n      }\n    }\n  };\n}\n\nfunction segPosCenter(pos: number, divs: number, width: number, ind: number) {\n  return (pos / divs) * ind + (width / 2);\n}\n\nfunction When(conditionFunction, actionFunction) {\n  return new Promise((resolve, reject) => {\n    if (typeof conditionFunction !== 'function') {\n      reject(new Error('Arg 1; MUST BE FUNCTION!!!'));\n      return\n    }\n\n    const interval = setInterval(() => {\n      let cond = conditionFunction()\n      if (cond) {\n        clearInterval(interval);\n        actionFunction?.();\n        resolve(true);\n      }\n    }, 100); // Check the condition every 100 milliseconds.\n  });\n}\n\n\nasync function sleep(ms) {\n  return await new Promise<any>(resolve => setTimeout(resolve, ms));\n}\n\nfunction msToS(ms) {\n  return ms / 1000;\n}\n\nfunction sToMs(s) {\n  return s * 1000;\n}\n\n\nasync function drainOpacity(sprite, duration: number): Promise<void> {\n  return new Promise((resolve) => {\n    sprite.use(opacity(1));\n    let currentOpacity = 1;\n    const fadeAmount = 1 / (duration / 100);\n\n    const interval = setInterval(() => {\n      currentOpacity -= fadeAmount;\n      if (currentOpacity <= 0) {\n        sprite.use(opacity(0));\n        clearInterval(interval);\n        resolve();\n      } else {\n        sprite.use(opacity(currentOpacity));\n      }\n    }, 10);\n  });\n}\n\n\nasync function createFG() {\n  let fg = add([\n    rect(width(), height()),\n    color(0, 0, 0),\n  ])\n  return fg\n}\n\nasync function makeTransition(color?: any, time = 0.5) {\n  let fg = await createFG();\n  if (color) fg.use(color)\n  fg.use(opacity(0))\n  fg.use(fadeIn(time))\n\n  await sleep(800)\n\n  return fg;\n}\n\nasync function makeIntroTransition(color?: any, time = 2) {\n  let fg = await createFG()\n  if (color) fg.use(color)\n  await drainOpacity(fg, sToMs(time))\n  fg.destroy()\n  return fg;\n}\n\nasync function fadeInByAmmout(sprite, duration: number, mult: number) {\n  return new Promise((resolve) => {\n    sprite.use(opacity(0));\n    let currentOpacity = 1;\n\n    const fadeAmount = 1 / (duration / 100);\n    const interval = setInterval(() => {\n      currentOpacity += fadeAmount;\n      if (currentOpacity <= 0) {\n        sprite.use(opacity(0));\n        clearInterval(interval);\n        resolve(null);\n      } else {\n        sprite.use(opacity(currentOpacity * mult));\n      }\n    }, 10);\n\n  })\n}\n\nasync function fadeOutByAmmout(sprite, duration: number, mult: number) {\n  return new Promise((resolve) => {\n    sprite.use(opacity(1));\n    let currentOpacity = 1;\n\n    const fadeAmount = 1 / (duration / 100);\n    const interval = setInterval(() => {\n      currentOpacity -= fadeAmount;\n      if (currentOpacity <= 0) {\n        sprite.use(opacity(0));\n        clearInterval(interval);\n        resolve(null);\n      } else {\n        sprite.use(opacity(currentOpacity * mult));\n      }\n    }, 10);\n\n  })\n}\n\n// ---\n\n// @Display\n\nconst displays = {\n  pos: {\n    bottomBar: {\n      x: width() + 25,\n      y: 60 + 25,\n      w: width() / 2,\n      h: height() - 30 + 25,\n\n      WHEN_UNDER: {\n        x: width() + 25,\n        y: 60 + 50 + 75,\n        w: width() / 2,\n        h: height() - 30 + 25,\n      }\n    }\n  },\n\n  bottomBar: () => {\n\n    let apps = [\n      {\n        name: 'Calculator',\n      }\n    ]\n    \n    let om = {\n      bg: add([\n        rect(displays.pos.bottomBar.x, displays.pos.bottomBar.y),\n        pos(displays.pos.bottomBar.w, displays.pos.bottomBar.h),\n        color(0, 0, 0),\n        outline(2, WHITE),\n        anchor('center'),\n      ]),\n\n      bottomRight: {\n        time: add([\n          text('', {\n            size: 17,\n            font: fonts_.Spray_Paint(),\n          }),\n          pos(width() - 17, displays.pos.bottomBar.h - 16),\n          anchor('right'),\n        ]),\n\n        update: requestAnimationFrame(function temp() {\n          requestAnimationFrame(temp);\n          let t = new Date();\n          // xxxx-xx-xx xx:xx:xx\n          let time = t.toLocaleDateString() + '   |   ' + t.toLocaleTimeString();\n          om.bottomRight.time.text = time;\n\n        })\n      },\n\n      async tweenUp() {\n        return tween(\n          (displays.pos.bottomBar.WHEN_UNDER.x, displays.pos.bottomBar.WHEN_UNDER.y),\n          (displays.pos.bottomBar.x, displays.pos.bottomBar.y),\n          sToMs(0.5),\n          easings.easeOutQuad,\n          (pos: number) => {\n            return om.bg.pos.y = pos;\n          }\n        )\n      },\n\n      async tweenDown() {\n        return tween(\n          (displays.pos.bottomBar.x, displays.pos.bottomBar.y),\n          (displays.pos.bottomBar.WHEN_UNDER.x, displays.pos.bottomBar.WHEN_UNDER.y),\n          sToMs(0.5),\n          easings.easeOutQuad,\n          (pos: number) => {\n            return om.bg.pos.y = pos;\n          }\n        )\n      },\n\n    }\n\n    om.bg.add([\n      pos(-width() / 2, displays.pos.bottomBar.y-2),\n      anchor('left'),\n    ])\n\n    return om;\n  },\n}\n\n// ---\n\nscene('intro', async () => {\n\n  await createFG()\n\n  let bottomBar = displays.bottomBar()\n\n  await makeIntroTransition(rgb(0, 0, 0), 25)\n\n  let fnt = fonts_.Puddles()\n\n  let title = add([\n    text('FrontierWOS.', {\n      size: 48,\n      font: fnt,\n    }),\n    pos(width() / 2, height() / 2),\n    anchor('center'),\n    scale(1.5),\n    color(255, 255, 255),\n    z(99),\n\n    opacity(0),\n    fadeIn(0.5),\n  ])\n\n})\n\ngo('intro')"],
  "mappings": "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",
  "names": ["deg2rad", "deg", "rad2deg", "rad", "clamp", "val", "min", "max", "lerp", "a", "b", "t", "Vec2", "Color", "map", "v", "l1", "h1", "l2", "h2", "mapc", "vec2", "args", "rgb", "quad", "x", "y", "w", "h", "Quad", "wave", "lo", "hi", "f", "randSeed", "seed", "defRNG", "rand", "randi", "chance", "p", "choose", "list", "testRectRect", "r1", "r2", "testLineLineT", "denom", "ua", "ub", "testLineLine", "testRectLine", "l", "testRectPoint", "pts", "Line", "pt", "testLinePoint", "v1", "v2", "testLineCircle", "circle", "centerToOrigin", "c", "dis", "t1", "t2", "testCirclePoint", "testCirclePolygon", "prev", "cur", "testPolygonPoint", "poly", "i", "j", "sat", "p1", "p2", "overlap", "displacement", "axisProj", "min1", "max1", "q", "min2", "max2", "o", "o1", "o2", "deepEq", "k1", "k2", "k", "base64ToArrayBuffer", "base64", "binstr", "len", "bytes", "dataURLToArrayBuffer", "url", "download", "filename", "downloadText", "text", "downloadJSON", "data", "downloadBlob", "blob", "anchorPt", "orig", "alignPt", "align", "createEmptyAudioBuffer", "ctx", "hsl2rgb", "Mat4", "A", "C", "M", "RNG", "Rect", "Circle", "Ellipse", "Polygon", "IDList", "EventController", "Event", "EventHandler", "isDataURL", "getExt", "uid", "BinaryHeap", "gamepad_default", "ButtonState", "GamepadState", "FPSCounter", "app_default", "c2", "c3", "c4", "c5", "easings", "easings_default", "Timer", "VERSION", "ASCII_CHARS", "DEF_ANCHOR", "BG_GRID_SIZE", "DEF_FONT", "DBG_FONT", "DEF_TEXT_SIZE", "DEF_TEXT_CACHE_SIZE", "MAX_TEXT_CACHE_SIZE", "FONT_ATLAS_WIDTH", "FONT_ATLAS_HEIGHT", "SPRITE_ATLAS_WIDTH", "SPRITE_ATLAS_HEIGHT", "UV_PAD", "DEF_HASH_GRID_SIZE", "DEF_FONT_FILTER", "LOG_MAX", "LOG_TIME", "VERTEX_FORMAT", "STRIDE", "MAX_BATCHED_QUAD", "MAX_BATCHED_VERTS", "MAX_BATCHED_INDICES", "VERT_TEMPLATE", "FRAG_TEMPLATE", "DEF_VERT", "DEF_FRAG", "COMP_DESC", "COMP_EVENTS", "kaboom_default", "__name", "angle", "_Vec2", "s", "normal", "on", "dest", "cos", "sin", "n", "m", "other", "_a", "r", "g", "arr", "_Color", "hex", "result", "hue2rgb", "d", "_Quad", "_Mat4", "m0", "m1", "m4", "m5", "out", "det", "f00", "f01", "f02", "f03", "f04", "f05", "f06", "f07", "f08", "f09", "f10", "f11", "f12", "f13", "f14", "f15", "f16", "f17", "f18", "_Line", "pos", "width", "height", "_Rect", "dx", "dy", "center", "radius", "tr", "_Circle", "rx", "ry", "_Ellipse", "_Polygon", "total", "id", "cancel", "events", "ev", "_EventController", "e", "action", "res", "name", "str", "compareFn", "item", "lastItem", "parent", "child", "index1", "index2", "btn", "dt", "opt", "state", "canvas", "time", "fps", "numFrames", "screenshot", "setCursor", "getCursor", "setCursorLocked", "isCursorLocked", "enterFullscreen", "el", "exitFullscreen", "getFullscreenElement", "setFullscreen", "isFullscreen", "quit", "canvasEvents", "docEvents", "winEvents", "resizeObserver", "run", "accumulatedDt", "frame", "loopTime", "realDt", "desiredDt", "processInput", "resetInput", "isTouchscreen", "mousePos", "mouseDeltaPos", "isMousePressed", "isMouseDown", "isMouseReleased", "isMouseMoved", "isKeyPressed", "isKeyPressedRepeat", "isKeyDown", "isKeyReleased", "isGamepadButtonPressed", "isGamepadButtonDown", "isGamepadButtonReleased", "onResize", "onKeyDown", "key", "onKeyPress", "onKeyPressRepeat", "onKeyRelease", "onMouseDown", "mouse", "onMousePress", "onMouseRelease", "onMouseMove", "onCharInput", "onTouchStart", "onTouchMove", "onTouchEnd", "onScroll", "onHide", "onShow", "onGamepadButtonDown", "onGamepadButtonPress", "onGamepadButtonRelease", "onGamepadStick", "stick", "onGamepadConnect", "onGamepadDisconnect", "getGamepadStick", "charInputted", "getGamepads", "processGamepad", "registerGamepad", "browserGamepad", "gamepad", "removeGamepad", "gamepadState", "stickName", "value", "pd", "cw", "ch", "ww", "wh", "rw", "rc", "ratio", "offset", "MOUSE_BUTTONS", "PREVENT_DEFAULT_KEYS", "KEY_ALIAS", "touches", "box", "kbGamepad", "entries", "entry", "sum", "gopt", "root", "gscale", "fixedSize", "styles", "pixelDensity", "fontCacheCanvas", "fontCacheCtx", "app", "gc", "gl", "genBindFunc", "func", "bindings", "ty", "stack", "glTextureBinder", "glFramebufferBinder", "glRenderbufferBinder", "Texture", "filter", "wrap", "img", "tex", "KaboomError", "msg", "TexPacker", "FrameBuffer", "bytesPerRow", "temp", "topOffset", "bottomOffset", "gfx", "defShader", "makeShader", "emptyTex", "frameBuffer", "bgColor", "bgAlpha", "vbuf", "ibuf", "bgTex", "SpriteData", "frames", "anims", "slice9", "src", "assets", "slice", "loadImg", "SoundData", "buf", "resolve", "reject", "audio", "fetchArrayBuffer", "masterNode", "burpSnd", "burp_default", "err", "Asset", "loader", "asset", "AssetBucket", "handle", "loaded", "game", "make", "load", "prom", "loadProgress", "buckets", "bucket", "loadRoot", "path", "fetchURL", "fetchJSON", "fetchText", "loadJSON", "FontData", "face", "loadFont", "font", "loadBitmapFont", "gw", "gh", "makeFont", "qw", "qh", "loadSpriteAtlas", "rej", "json", "atlas", "info", "spr", "createSpriteSheet", "images", "merged", "loadSprite", "loadPedit", "loadAseprite", "imgSrc", "jsonSrc", "resolveJSON", "size", "anim", "loadShader", "vert", "frag", "loadShaderURL", "resolveUrl", "vcode", "fcode", "loadSound", "loadBean", "bean_default", "getSprite", "getSound", "getFont", "getBitmapFont", "getShader", "getAsset", "resolveSprite", "resolveSound", "snd", "resolveShader", "shader", "resolveFont", "bfont", "volume", "play", "paused", "srcNode", "onEndEvents", "gainNode", "startTime", "stopTime", "started", "getTime", "start", "cloneNode", "oldNode", "newNode", "burp", "vertSrc", "fragSrc", "vertShader", "fragShader", "prog", "formatShaderError", "FMT", "match", "vertError", "fragError", "uniform", "loc", "chars", "cols", "charMap", "drawRaw", "verts", "indices", "fixed", "shaderSrc", "flush", "transform", "screen2ndc", "frameStart", "drawUnscaled", "drawUVQuad", "usePostEffect", "frameEnd", "ow", "oh", "drawTexture", "pushMatrix", "pushTranslate", "pushScale", "pushRotate", "pushTransform", "popTransform", "color", "opacity", "uvPadX", "uvPadY", "qx", "qy", "scale", "repX", "repY", "drawSprite", "getArcPts", "radiusX", "radiusY", "end", "nverts", "step", "drawRect", "drawPolygon", "drawLine", "drawLines", "minSLen", "drawCircle", "drawTriangle", "drawEllipse", "polyOpt", "npts", "drawStenciled", "content", "mask", "test", "drawMasked", "drawSubtracted", "getViewportScale", "applyCharTransform", "fchar", "TEXT_STYLE_RE", "compileStyledText", "charStyleMap", "renderText", "idxOffset", "origIdx", "fontAtlases", "formatText", "fontName", "opts", "c2d", "lineSpacing", "letterSpacing", "curX", "tw", "th", "lines", "curLine", "cursor", "lastSpace", "lastSpaceWidth", "fchars", "line", "ox", "idx", "style", "drawText", "drawFormattedText", "ftext", "windowToContent", "contentToView", "handleErr", "debugPaused", "debug", "updateFrame", "get", "camPos", "camScale", "camRot", "shake", "intensity", "toScreen", "toWorld", "calcTransform", "obj", "comps", "compStates", "cleanups", "inputEvents", "onCurCompCleanup", "trigger", "tag", "children", "maskFunc", "comp", "prop", "checkDeps", "dep", "recurse", "isChild", "onAdd", "onDestroy", "ctrl", "cb", "evs", "event", "onUpdate", "add", "onDraw", "onCollide", "col", "onCollideUpdate", "onCollideEnd", "forAllCurrentAndFuture", "onClick", "onHover", "onHoverUpdate", "onHoverEnd", "wait", "actions", "loop", "curTimer", "newAction", "enterDebugMode", "toFixed", "enterBurpMode", "setGravity", "getGravity", "setBackground", "getBackground", "speed", "diff", "isFixed", "rotate", "easeFunc", "tween", "anchor", "z", "follow", "move", "dir", "DEF_OFFSCREEN_DIS", "offscreen", "distance", "isOut", "screenRect", "area", "colliding", "collidingThisFrame", "mpos", "hovering", "localArea", "getRenderProps", "sprite", "spriteData", "curAnim", "curAnimDir", "spriteLoadedEvent", "calcTexScale", "_b", "left", "right", "top", "bottom", "iw", "ih", "w1", "w3", "w2", "h3", "quads", "uv", "_c", "setSpriteData", "onLoad", "prevAnim", "update", "nt", "rect", "uvquad", "outline", "timer", "from", "to", "duration", "setValue", "curTime", "DEF_JUMP_FORCE", "MAX_VEL", "body", "vel", "curPlatform", "lastPlatformPos", "wantFall", "tmass", "col2", "prevVelY", "force", "doubleJump", "numJumps", "jumpsLeft", "stay", "scenesToStay", "health", "hp", "maxHP", "lifespan", "fade", "initState", "stateList", "transitions", "initStateEvents", "didFirstEnter", "oldState", "available", "fadeIn", "done", "scene", "def", "go", "initEvents", "onSceneLeave", "getData", "setData", "plug", "plugin", "funcs", "funcsObj", "EdgeMask", "tile", "tilePos", "isObstacle", "cost", "edges", "getEdgeMask", "loopup", "edgeMask", "level", "is", "addLevel", "numRows", "numColumns", "spatialMap", "costMap", "edgeMap", "connectivityMap", "tile2Hash", "hash2Tile", "hash", "createSpatialMap", "insertIntoSpatialMap", "removeFromSpatialMap", "index", "updateSpatialMap", "spatialMapChanged", "createCostMap", "objects", "createEdgeMap", "createConnectivityMap", "traverse", "frontier", "getNeighbours", "getCost", "node", "neighbour", "getHeuristic", "goal", "diagonals", "levelComp", "hasPos", "hasTile", "cameFrom", "costSoFar", "current", "neighbours", "next", "newCost", "row", "keys", "agent", "target", "navMapChangedEvent", "record", "frameRate", "stream", "audioDest", "recorder", "chunks", "isFocused", "destroy", "readd", "destroyAll", "boom", "kaSprite", "ka_default", "boomSprite", "boom_default", "addKaboom", "kaboom", "ka", "Collision", "source", "resolved", "checkFrame", "grid", "cellSize", "checkObj", "aobj", "bbox", "xmin", "ymin", "xmax", "ymax", "checked", "cell", "check", "col1", "drawFrame", "cam", "drawLoadScreen", "progress", "drawInspectText", "txt", "pad", "ftxt", "bw", "bh", "drawDebug", "inspecting", "flipped", "logs", "log", "onLoading", "onError", "textStyle", "title", "onCleanup", "numTextureUnits", "unit", "isFirstFrame", "updateViewport", "rg", "sw", "sh", "color", "time", "pos"]
}
